<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="initial-scale=1,maximum-scale=1,user-scalable=no"
    />
    <title>平滑过渡</title>
    <!--mapboxgl库，矢量瓦片需要依赖该库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/mapboxgl/mapbox-gl.js"></script>
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/cdn/mapboxgl/mapbox-gl.css"
    />
    <!-- 引入地图引擎库 -->
    <script src="http://webclient.smaryun.com/static/libs/include-lib-local-upgrade.js"></script>
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"
    />
    <!--示例公共样式-->
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/css/style.css"
    />
    <script>
      'use strict'
      // 定义三维视图的主要类
      let map, view, layer
      // 当前加载图层的类型
      let currenRendererType = 'simpleRenderer'
      // 获取构造函数
      const { renderer, symbol, Map, Color } = zondy
      const { SimpleRenderer, UniqueValueRenderer, ClassBreakRenderer } =
        renderer
      const { SimpleLineSymbol, SimpleFillSymbol } = symbol
      const { IGSMapImageLayer } = zondy.layer

      function addIGSMapImageLayer() {
        layer = new IGSMapImageLayer({
          url: 'http://webclient.smaryun.com:8089/igs/rest/services/Map/湖北省4326/MapServer',
          httpMethod: 'GET',
          // 影像的展现形式，可选'tile' 、'image'。选项为'tile'时，加载影像时以瓦片的方式平铺。当选项为'image'时，加载影像会请求一张覆盖当前屏幕的图像。
          renderMode: 'image'
        })
        // 添加图层
        map.add(layer)
        // 图层添加完毕后，跳转到图层范围内
        layer.on('layerview-created', (result) => {
          view.flyTo({
            extent: result.layer.extent
          })
          // 设置Simple渲染器
          setSimpleRenderer()
        })
      }

      // 地图初始化函数
      function init() {
        // 初始化三维球体
        initViewer()
        // 添加MapServer
        addIGSMapImageLayer()
        // 初始化UI操作
        initUI()
      }

      //初始化三维球体
      function initViewer() {
        // 初始化图层管理容器
        map = new Map()
        // 初始化地图视图对象
        view = createView('mapgis-viewer', map)
      }

      //初始化示例UI操作
      function initUI() {
        layui.use(function () {
          var layer = layui.layer,
            $ = layui.jquery,
            form = layui.form

          //切换加载类型
          form.on('select(rendererType)', function (data) {
            currenRendererType = data.value

            // 加载renderer
            switch (currenRendererType) {
              case 'simpleRenderer':
                setSimpleRenderer()
                break
              case 'uniqueValueRenderer':
                setUniqueValueRenderer()
                break
              case 'classBreakRenderer':
                setClassBreakRenderer()
                break
              default:
                break
            }
          })
        })
      }

      // 统一渲染器
      function setSimpleRenderer() {
        if (layer) {
          const subLayer = layer.findSublayerById(0)
          subLayer.renderer = new SimpleRenderer({
            symbol: new SimpleFillSymbol({
              color: '#2578B499',
              outline: new SimpleLineSymbol({
                color: '#2578B4',
                width: 1
              })
            })
          })
        }
      }

      // 单值渲染器
      function setUniqueValueRenderer() {
        if (layer) {
          const subLayer = layer.findSublayerById(0)
          subLayer.renderer = new UniqueValueRenderer({
            //字段名
            field: 'NAME',
            // 默认样式
            defaultSymbol: new SimpleFillSymbol({
              // 填充颜色
              color: '#2578B499',
              // 外边线样式
              outline: new SimpleLineSymbol({
                //线颜色
                color: '#2578B4',
                //线宽
                width: 1
              })
            }),
            //单值专题图字段样式
            uniqueValueInfos: [
              {
                //指定字段值1
                value: '武汉市',
                // 是否可视化单值信息
                visible: false,
                //匹配到该值后的样式
                symbol: new SimpleFillSymbol({
                  // 填充颜色
                  color: 'rgba(1,1,252,1)',
                  // 外边线样式
                  outline: new SimpleLineSymbol({
                    //线颜色
                    color: new Color(255, 1, 0, 1),
                    //线宽
                    width: 1
                  })
                })
              },
              {
                //指定字段值2
                value: '天门市',
                //匹配到该值后的样式
                symbol: new SimpleFillSymbol({
                  // 填充颜色
                  color: 'rgba(255,1,1,0.9)',
                  // 外边线样式
                  outline: new SimpleLineSymbol({
                    //线颜色
                    color: new Color(255, 1, 0, 1),
                    //线宽
                    width: 1
                  })
                })
              }
            ]
          })
        }
      }

      // 分段渲染器
      function setClassBreakRenderer() {
        if (layer) {
          const subLayer = layer.findSublayerById(0)
          subLayer.renderer = new ClassBreakRenderer({
            //字段名
            field: 'mpArea',
            // 默认样式
            defaultSymbol: new SimpleFillSymbol({
              // 填充颜色
              color: '#2578B499',
              // 外边线样式
              outline: new SimpleLineSymbol({
                //线颜色
                color: new Color(37, 120, 180, 1),
                //线宽
                width: 1
              })
            }),
            //单值专题图字段样式
            classBreakInfos: [
              {
                // 分段最大值
                maxValue: 1,
                // 分段最小值
                minValue: 0,
                // 是否可视化单值信息
                visible: false,
                //匹配到该值后的样式
                symbol: new SimpleFillSymbol({
                  // 填充颜色
                  color: 'rgba(1,1,252,1)',
                  // 外边线样式
                  outline: new SimpleLineSymbol({
                    //线颜色
                    color: new Color(255, 1, 0, 1),
                    //线宽
                    width: 1
                  })
                })
              }
            ]
          })
        }
      }
    </script>
  </head>

  <body onload="init();">
    <div id="mapgis-viewer" style="position: absolute; width: 100%; height: 100%"></div>
    <div class="layui-panel layui-panel-right">
      <form class="layui-form" action="">
        <div class="layui-form-item">
          <label class="layui-form-label">渲染器</label>
          <div class="layui-input-block layui-input-block-select">
            <select
              id="rendererType"
              name="rendererType"
              lay-filter="rendererType"
            >
              <option value="simpleRenderer">统一渲染器</option>
              <option value="uniqueValueRenderer">单值渲染器</option>
              <option value="classBreakRenderer">分段渲染器</option>
            </select>
          </div>
        </div>
      </form>
    </div>
    <style type="text/css">
      .layui-panel-right {
        width: 300px;
        z-index: 999;
      }

      .change-feature-item {
        margin-top: 10px;
      }

      .layui-form-label {
        width: 86px;
      }
    </style>
  </body>
</html>
