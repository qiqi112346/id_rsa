<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>路径图-公交路线</title>
    <!--引入echarts-->
    <script type="text/javascript" src="http://webclient.smaryun.com/static/libs/cdn/echarts/echarts.min.js"></script>
    <!-- 引入地图引擎库 -->
    <script src="http://webclient.smaryun.com/static/libs/include-lib-local-upgrade.js"></script>
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css" />
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <script type="text/javascript">
      //使用严格模式
      'use strict'
      // 定义二维视图的主要类

      let map, view, geometryServer, featureServer, graphicsLayer
      const {
        WMTSLayer
      } = zondy.layer
      const { Map, SpatialReference } = zondy
      const { Projection, Point } = zondy.geometry

      // echarts的数据
      let data, geoCoordMap, busLines

      // 初始化地图
      function init() {
        // 初始化地图视图
        initView()
        // 添加WMTS图层
        addWMTSLayer()
        // echarts
        initEcharts();
      }

      // 初始二维地图
      function initView() {
        // 初始化图层管理容器
        map = new Map()
        // 初始化地图视图对象
        view = createView('mapgis-viewer', map)
      }

      //echarts
      function initEcharts() {
        // options参数请参考百度echarts-options
        // https://echarts.apache.org/zh/option.html#title
        httpGetPromise("http://webclient.smaryun.com:8200/Vector/json/line/line-bus.json").then(data => {
          // 遍历数据并处理成对应echarts格式
          let hStep = 300 / (data.length - 1);
          busLines = [].concat.apply(
            [],
            data.map(function (busLine, idx) {
              let prevPt;
              let points = [];
              for (let i = 0; i < busLine.length; i += 2) {
                let pt = [busLine[i], busLine[i + 1]];
                if (i > 0) {
                  pt = [prevPt[0] + pt[0], prevPt[1] + pt[1]];
                }
                prevPt = pt;

                points.push([pt[0] / 1e4, pt[1] / 1e4]);
              }
              return {
                coords: points,
                lineStyle: {
                  normal: {
                    color: echarts.color.modifyHSL(
                      "#5A94DF",
                      Math.round(hStep * idx)
                    ),
                  },
                },
              };
            })
          );
          let option = {
            cesium: {
              roam: false,
            },
            leaflet: {
              roam: false,
            },
            mapboxgl: {
              roam: false
            },
            animation: false,
            postRender: true,
            postRenderFrame: 2,
            series: [
              {
                type: "lines",
                coordinateSystem: localStorage.getItem('engine-type'),
                polyline: true,
                data: busLines,
                silent: true,
                lineStyle: {
                  normal: {
                    opacity: 0.2,
                    width: 1,
                  },
                },
                progressiveThreshold: 500, // 一次渲染500点
                progressive: 200, // 渲染频率
              },
              {
                type: "lines",
                coordinateSystem: localStorage.getItem('engine-type'),
                polyline: true,
                data: busLines,
                lineStyle: {
                  normal: {
                    width: 0,
                  },
                },
                effect: {
                  constantSpeed: 20,
                  show: true,
                  trailLength: 0.1,
                  symbolSize: 1.5,
                },
                zlevel: 1,
              },
            ],
          };
          // 声明cesium的echarts图层并将其显示到三维球上
          layer = new zondy.layer.EchartsLayer({
            echartsOptions: option
          });
          map.add(layer);
        });
      }

      // 发送请求获取数据
      function httpGetPromise(url) {
        return new Promise(function (resolve, reject) {
          const handler = function () {
            if (this.readyState !== 4) {
              return;
            }
            if (this.status === 200) {
              resolve(this.response);
            } else {
              reject(new Error(this.statusText));
            }
          };
          const client = new XMLHttpRequest();
          client.open('GET', url);
          client.onreadystatechange = handler;
          client.responseType = 'json';
          client.setRequestHeader('Accept', 'application/json');
          client.send();
        });
      }

      // 添加WMTS图层
      function addWMTSLayer() {
        const wmtsLayer = new WMTSLayer({
          // 加载经纬度的影像地图
          url: "http://t6.tianditu.gov.cn/img_c/wmts",
          // 天地图必须加token，且token名为tk
          tokenKey: "tk",
          // token请在天地图官网申请
          tokenValue: getTDTToken(),
        })
        map.add(wmtsLayer)
        // 图层加载完毕
        wmtsLayer.on('layerview-created', function (result) {
          console.log('加载完毕:', result.layer)
          view.flyTo({
            center: new Point({
              coordinates: [116, 40, 200000.0],
              spatialReference: new SpatialReference({
                wkid: 4326
              })
            }),
            zoom: 5
          })
        })
      }
    </script>
</head>

<body onload="init();">
<!--  视图容器div  -->
<div id="mapgis-viewer" style="position: absolute; width: 100%; height: 100%"></div>
</body>
</html>
