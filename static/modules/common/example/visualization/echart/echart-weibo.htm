<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>散点图-微博签到</title>
    <!--引入echarts-->
    <script type="text/javascript" src="http://webclient.smaryun.com/static/libs/cdn/echarts/echarts.min.js"></script>
    <!-- 引入地图引擎库 -->
    <script src="http://webclient.smaryun.com/static/libs/include-lib-local-upgrade.js"></script>
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css" />
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <script type="text/javascript">
      //使用严格模式
      'use strict'
      // 定义二维视图的主要类

      let map, view, geometryServer, featureServer, graphicsLayer
      const {
        WMTSLayer
      } = zondy.layer
      const { Map, SpatialReference } = zondy
      const { Projection, Point } = zondy.geometry

      // echarts的数据
      let data, geoCoordMap

      // 初始化地图
      function init() {
        // 初始化地图视图
        initView()
        // 添加WMTS图层
        addWMTSLayer()
        // echarts
        initEcharts()
      }

      // 初始二维地图
      function initView() {
        // 初始化图层管理容器
        map = new Map()
        // 初始化地图视图对象
        view = createView('mapgis-viewer', map)
      }

      //echarts
      function initEcharts() {
        // options参数请参考百度echarts-options
        // https://echarts.apache.org/zh/option.html#title
        let grade = [
          "强",
          "中",
          "弱"
        ];
        //发送请求获取数据
        httpGetPromise('http://webclient.smaryun.com:8200/Vector/json/weibo/weibo.json').then(weiboData => {
          //数据处理后，得到所有坐标
          weiboData = weiboData.map(function (serieData) {
            let px = serieData[0] / 1000;
            let py = serieData[1] / 1000;
            let res = [
              [px, py]
            ];
            for (let i = 2; i < serieData.length; i += 2) {
              let dx = serieData[i] / 1000;
              let dy = serieData[i + 1] / 1000;
              let x = px + dx;
              let y = py + dy;
              res.push([x.toFixed(2), y.toFixed(2), 1]);
              px = x;
              py = y;
            }
            return res;
          });

          let option = {
            cesium: {
              roam: false,
            },
            leaflet: {
              roam: false,
            },
            mapboxgl: {
              roam: false
            },
            animation: false,
            postRender: true,
            postRenderFrame: 10,
            coordinateSystem: localStorage.getItem('engine-type'),
            title: {
              text: "中国微博签到图",
              subtext: 'From MapGIS',
              sublink: 'http://www.smaryun.com',
              left: 'center',
              top: 'top',
              textStyle: {
                color: '#fff'
              }
            },
            tooltip: {},
            legend: {
              left: 'right',
              top: 'top',
              data: [grade[0], grade[1], grade[2]],
              textStyle: {
                color: '#ccc'
              }
            },
            series: [{
              name: grade[2],
              type: 'scatter',
              coordinateSystem: localStorage.getItem('engine-type'),    // 设置cesium坐标系
              symbolSize: 1,
              large: true,
              itemStyle: {
                normal: {
                  shadowBlur: 2,
                  shadowColor: 'rgba(37, 140, 249, 0.8)',
                  color: 'rgba(37, 140, 249, 0.8)'
                }
              },
              data: weiboData[0]
            }, {
              name: grade[1],
              type: 'scatter',
              coordinateSystem: localStorage.getItem('engine-type'),   // 设置cesium坐标系
              symbolSize: 1,
              large: true,
              itemStyle: {
                normal: {
                  shadowBlur: 2,
                  shadowColor: 'rgba(14, 241, 242, 0.8)',
                  color: 'rgba(14, 241, 242, 0.8)'
                }
              },
              data: weiboData[1]
            }, {
              name: grade[0],
              type: 'scatter',
              coordinateSystem: localStorage.getItem('engine-type'),   // 设置cesium坐标系
              symbolSize: 1,
              large: true,
              itemStyle: {
                normal: {
                  shadowBlur: 2,
                  shadowColor: 'rgba(255, 255, 255, 0.8)',
                  color: 'rgba(255, 255, 255, 0.8)'
                }
              },
              data: weiboData[2]
            }]
          };
          // 声明cesium的echarts图层并将其显示到三维球上
          layer = new zondy.layer.EchartsLayer({
            echartsOptions: option
          });
          map.add(layer);
        });
      }

      // 发送请求获取数据
      function httpGetPromise(url) {
        return new Promise(function (resolve, reject) {
          const handler = function () {
            if (this.readyState !== 4) {
              return;
            }
            if (this.status === 200) {
              resolve(this.response);
            } else {
              reject(new Error(this.statusText));
            }
          };
          const client = new XMLHttpRequest();
          client.open('GET', url);
          client.onreadystatechange = handler;
          client.responseType = 'json';
          client.setRequestHeader('Accept', 'application/json');
          client.send();
        });
      }

      // 添加WMTS图层
      function addWMTSLayer() {
        const wmtsLayer = new WMTSLayer({
          // 加载经纬度的影像地图
          url: "http://t6.tianditu.gov.cn/img_c/wmts",
          // 天地图必须加token，且token名为tk
          tokenKey: "tk",
          // token请在天地图官网申请
          tokenValue: getTDTToken(),
        })
        map.add(wmtsLayer)
        // 图层加载完毕
        wmtsLayer.on('layerview-created', function (result) {
          console.log('加载完毕:', result.layer)
          view.flyTo({
            center: new Point({
              coordinates: [12520996.73, 3637179.55, 4000000],
              spatialReference: new SpatialReference({
                wkid: 3857
              })
            }),
            zoom: 5
          })
        })
      }
    </script>
</head>

<body onload="init();">
<!--  视图容器div  -->
<div id="mapgis-viewer" style="position: absolute; width: 100%; height: 100%"></div>
</body>
</html>
