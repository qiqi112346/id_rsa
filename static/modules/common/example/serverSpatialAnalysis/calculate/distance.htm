<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>距离计算</title>
    <!-- 引入地图引擎库 -->
    <script src="http://webclient.smaryun.com/static/libs/include-lib-local-upgrade.js"></script>
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css" />
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <script type="text/javascript">
      //使用严格模式
      'use strict'
      // 定义二维视图的主要类

      let map, view, geometryServer, featureServer, graphicsLayer, graphicsLayer2
      const {
        IGSTileLayer,
        GraphicsLayer
      } = zondy.layer
      const { Map, Color, Feature } = zondy
      const { GeometryServer, FeatureServer } = zondy.service
      const { Polygon, Point, LineString } = zondy.geometry
      const { SimpleMarkerSymbol } = zondy.symbol

      // 测距点
      let point = new Point({
        coordinates: [112, 31]
      })

      // 初始化地图
      function init() {
        // 初始化地图视图
        initView()
        // 添加瓦片图层
        addIGSTileLayer()
        // 添加标绘图层
        addGraphicsLayer()
        // 初始化server对象
        initServer()
        // 要素查询，之后查询该要素对应几何的面积
        query()
      }

      // 初始二维地图
      function initView() {
        // 初始化图层管理容器
        map = new Map()
        // 初始化地图视图对象
        view = createView('mapgis-viewer', map)
      }

      // 初始化server对象
      function initServer() {
        geometryServer = new GeometryServer({
          // 服务基地址
          url: 'http://webclient.smaryun.com:8089/igs/rest/services/system/GeometryServer'
        });
        featureServer = new FeatureServer({
          // 服务基地址
          url: 'http://webclient.smaryun.com:8089/igs/rest/services/Map/湖北省4326/FeatureServer'
        })
      }

      // 计算长度
      function calculateDistance(polygon) {
        geometryServer.calculateDistance({
          // 第一个几何
          geometry1: point,
          // 第二个几何
          geometry2: new LineString({
            coordinates: polygon.coordinates[0]
          }),
          // 坐标系
          srs: "EPSG:4326"
        }).then(function (result) {
          document.getElementById("distance").value = (result.data.distance / 1000).toFixed(6) + "千米"
        })
      }

      // 要素查询
      function query() {
        // 开始查询
        featureServer.queryFeatures({
          layerId: "0",
          geometry: new Point({
            coordinates: [114, 30.45214]
          })
        }).then(function (result) {
          console.log("查询成功：", result)
          // 清空绘制的要素
          graphicsLayer.removeAll()
          // 设置填充颜色为红色，请开发人员自行设置，这里仅作展示
          const features = result.data.featureSet.features
          for (let i = 0; i < features.length; i++) {
            features[i].symbol.color = new Color(233, 0, 0, 0.4)
          }
          // 绘制要素
          graphicsLayer.addMany(result.data.featureSet)
          // 计算长度
          calculateDistance(features[0].geometry)
        })
      }

      // 添加瓦片图层
      function addIGSTileLayer() {
        const igsTileLayer = new IGSTileLayer({
          url: 'http://webclient.smaryun.com:8089/igs/rest/services/Tile/湖北省_4326_normal_3-10/TileServer'
        })
        map.add(igsTileLayer)
        igsTileLayer.on('layerview-created', (result) => {
          view.flyTo({
            extent: result.layer.extent
          })
        })
      }

      // 添加标绘图层
      function addGraphicsLayer() {
        // 创建Graphics图层对象，用来绘制查询区域
        graphicsLayer = new GraphicsLayer({
          graphics: []
        })
        // 添加图层对象到地图文档中
        map.add(graphicsLayer)
        // 创建Graphics图层对象2，用来绘制额外点
        graphicsLayer2 = new GraphicsLayer({
          graphics: []
        })
        // 添加图层对象到地图文档中
        map.add(graphicsLayer2)
        // 添加一个点标绘对象
        graphicsLayer2.add(
          new Feature({
            geometry: point,
            symbol: new SimpleMarkerSymbol({
              color: new Color(0, 255, 0)
            })
          })
        )
      }
    </script>
</head>

<body onload="init();">
<!--  视图容器div  -->
<div id="mapgis-viewer" style="position: absolute; width: 100%; height: 100%"></div>
<!--  示例UI  -->
<div class="layui-panel layui-panel-right" style="width: 335px">
    <form class="layui-form" action="">
        <div class="layui-form-item">
            <div class="layui-form-item">
                <label class="layui-form-label">距离：</label>
                <div class="layui-input-block" style="margin-bottom: 6px;width: 180px">
                    <input id="distance" value="0" autocomplete="off" class="layui-input">
                </div>
            </div>
        </div>
    </form>
</div>
</body>
</html>
