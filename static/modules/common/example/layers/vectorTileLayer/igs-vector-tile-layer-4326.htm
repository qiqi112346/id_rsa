<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>矢量瓦片图层 - 4326</title>
    <!--mapboxgl库，矢量瓦片需要依赖该库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/mapboxgl/mapbox-gl.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/mapboxgl/mapbox-gl.css"/>
    <!-- 引入地图引擎库 -->
    <script src="http://webclient.smaryun.com/static/libs/include-lib-local-upgrade.js"></script>
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css" />
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <script type="text/javascript">
      //使用严格模式
      'use strict'
      // 定义二维视图的主要类

      let map, view, layer, layerOpacity = 1, initType = 'VectorTileServer', igsVersion = '2.0'
      const {
        IGSVectorTileLayer
      } = zondy.layer
      const { FetchRequest } = zondy.service
      const { Map, SpatialReference } = zondy

      // 初始化地图
      function init() {
        // 初始化地图视图
        initView()
        // 初始化示例UI
        initUI()
        // 添加瓦片图层
        addLayer()
      }

      // 初始二维地图
      function initView() {
        // 初始化图层管理容器
        map = new Map()
        // 初始化地图视图对象
        view = createView('mapgis-viewer', map)
      }

      // 添加矢量瓦片图层
      function addLayer(type, igsVersion) {
        // 如果layer存在，先删除图层
        if (layer) {
          deleteLayer()
        }
        // 根据类型创建矢量瓦片图层
        switch (type) {
          case 'VectorTileServer':
          default:
            if (igsVersion === '1.0') {
              layer = new IGSVectorTileLayer({
                // 基地址
                url: 'http://webclient.smaryun.com:6163/igs/rest/mrcs/vtiles/湖北省4326矢量瓦片',
                // IGS1.0版本的服务必须知道坐标系
                spatialReference: new SpatialReference({
                  wkid: 4326
                })
              })
            } else {
              layer = new IGSVectorTileLayer({
                // 基地址
                url: 'http://webclient.smaryun.com:8089/igs/rest/services/VectorTile/湖北省4326矢量瓦片/VectorTileServer'
              })
            }
            break
          case 'JSON':
            if (igsVersion === '1.0') {
              layer = new IGSVectorTileLayer({
                // 矢量瓦片样式文件地址
                url: 'http://webclient.smaryun.com:8200/VectorTile/湖北省4326矢量瓦片/湖北省4326矢量瓦片_style_192.168.82.91_6163.json',
                // IGS1.0版本的服务必须知道坐标系
                spatialReference: new SpatialReference({
                  wkid: 4326
                })
              })
            } else {
              layer = new IGSVectorTileLayer({
                // 基地址
                url: 'http://webclient.smaryun.com:8200/VectorTile/湖北省4326矢量瓦片/湖北省4326矢量瓦片_style_192.168.82.91_8089.json'
              })
            }
            break
          case 'Style':
            if (igsVersion === '1.0') {
              FetchRequest.commit('get', 'http://webclient.smaryun.com:8200/VectorTile/湖北省4326矢量瓦片/湖北省4326矢量瓦片_style_192.168.82.91_6163.json', {}).then((result) => {
                return result.json().then((styleJSON) => {
                  console.log('样式对象请求完毕:', styleJSON)
                  layer = new IGSVectorTileLayer({
                    // 矢量瓦片样式对象
                    style: styleJSON,
                    // IGS1.0版本的服务必须知道坐标系
                    spatialReference: new SpatialReference({
                      wkid: 4326
                    })
                  })
                })
              })
            } else {
              FetchRequest.commit('get', 'http://webclient.smaryun.com:8200/VectorTile/湖北省4326矢量瓦片/湖北省4326矢量瓦片_style_192.168.82.91_8089.json', {}).then((result) => {
                return result.json().then((styleJSON) => {
                  console.log('样式对象请求完毕:', styleJSON)
                  layer = new IGSVectorTileLayer({
                    // 矢量瓦片样式对象
                    style: styleJSON
                  })
                })
              })
            }
            break
        }
        // 添加图层
        map.add(layer)
        // 图层添加完毕后，跳转到图层范围内
        layer.on('layerview-created', (result) => {
          view.flyTo({
            extent: result.layer.extent
          })
        })
      }

      // 显隐子图层
      function setSubLayerVisible() {
        layer.setStyleLayerVisibility("地级市_simplerender", !layer.getStyleLayerVisibility("地级市_simplerender"))
      }

      // 修改子图层绘制属性，和MapboxGL的矢量瓦片参数一致
      function setPaintProperties() {
        layer.setPaintProperties("高速公路_6-7_simplerender_lininfo_0", {
          // 设置颜色
          "line-color": "rgba(11,178,97,1.000000)"
        })
      }

      // 修改子图层布局属性，和MapboxGL的矢量瓦片参数一致
      function setLayoutProperties() {
        const layout = layer.getLayoutProperties("高速公路_6-7_simplerender_lininfo_0")
        layer.setLayoutProperties("高速公路_6-7_simplerender_lininfo_0", {
          // 设置颜色
          "visibility": layout.visibility === "visible" ? "none" : "visible"
        })
      }

      // 删除图层
      function deleteLayer() {
        map.remove(layer)
      }

      //初始化示例UI操作
      function initUI() {
        layui.use(function () {
          layui.slider.render({
            elem: "#moveStep",
            value: 100,
            min: 0,
            max: 100,
            step: 1,
            theme: 'rgb(21, 134, 238)',
            //自定义提示文本
            setTips: function (value) {
              layerOpacity = value / 100
              return value + '%';
            },
            change: function (value) {
              layer.opacity = layerOpacity
            }
          });
          //切换加载类型
          layui.form.on('select(igsVersion)', function (data) {
            // 线删除图层
            deleteLayer()
            // 重新加载图层
            igsVersion = data.value
            addLayer(initType, igsVersion)
          })
          //切换加载类型
          layui.form.on('select(layerType)', function (data) {
            // 线删除图层
            deleteLayer()
            // 重新加载图层
            initType = data.value
            addLayer(initType, igsVersion)
          })
        })
      }
    </script>
  </head>

  <body onload="init();">
    <!--  视图容器div  -->
    <div id="mapgis-viewer" style="position: absolute; width: 100%; height: 100%"></div>
    <!--  示例UI  -->
    <div class="layui-panel layui-panel-right vector-tile-layer-panel">
        <form class="layui-form" action="">
            <div class="layui-form-item">
                <label class="layui-form-label">IGS版本</label>
                <div class="layui-input-block layui-input-block-select">
                    <select id="igsVersion" name="igsVersion" lay-filter="igsVersion">
                        <option value="2.0">IGS2.0版本</option>
                        <option value="1.0">IGS1.0版本</option>
                    </select>
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label">加载方式</label>
                <div class="layui-input-block layui-input-block-select">
                    <select id="layerType" name="layerType" lay-filter="layerType">
                        <option value="VectorTileServer">矢量瓦片服务</option>
                        <option value="JSON">加载样式文件</option>
                        <option value="Style">样式对象</option>
                    </select>
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label" style="width: 100px;">图层透明度</label>
                <div class="layui-input-block sample-slider" style="width: 320px;">
                    <div id="moveStep"></div>
                </div>
            </div>
            <div class="layui-form-item" style="margin-top: 10px;width: auto">
                <button type="button" class="layui-btn" onclick="setSubLayerVisible()">显隐子图层</button>
                <button type="button" class="layui-btn" onclick="setPaintProperties()" style="margin-left: 6px">修改子图层绘制属性</button>
                <button type="button" class="layui-btn" onclick="setLayoutProperties()" style="margin-left: 6px">修改子图层布局属性</button>
            </div>
        </form>
    </div>
  </body>
</html>
