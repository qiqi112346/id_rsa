<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>矢量瓦片图层 - 组图层</title>
    <!--mapboxgl库，矢量瓦片需要依赖该库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/mapboxgl/mapbox-gl.js"></script>
    <link
            rel="stylesheet"
            href="http://webclient.smaryun.com/static/libs/cdn/mapboxgl/mapbox-gl.css"
    />
    <!-- 引入地图引擎库 -->
    <script
      src="http://webclient.smaryun.com/static/libs/include-lib-local-upgrade.js"
    ></script>
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css" />
    <!--示例公共样式-->
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/css/style.css"
    />
    <script type="text/javascript">
      //使用严格模式
      'use strict'
      // 定义二维视图的主要类

      let map, view, layer, layerOpacity = 1
      const {
        IGSVectorTileLayer
      } = zondy.layer
      const { Map } = zondy
      console.log(zondy.Version)

      // 初始化地图
      function init() {
        // 初始化地图视图
        initView()
        // 初始化示例UI
        initUI()
        // 添加瓦片图层
        addLayer()
      }

      // 初始二维地图
      function initView() {
        // 初始化图层管理容器
        map = new Map()
        // 初始化地图视图对象
        view = createView('mapgis-viewer', map)
      }

      // 添加矢量瓦片图层
      function addLayer() {
        // 如果layer存在，先删除图层
        if (layer) {
          deleteLayer()
        }
        // 创建矢量瓦片图层
        layer = new IGSVectorTileLayer({
          // 服务基地址，支持没有WKID的，完全自定义坐标系的服务
          url: 'http://webclient.smaryun.com:8089/igs/rest/services/VectorTile/武汉市4547矢量瓦片分组/VectorTileServer'
        })
        // 添加图层
        map.add(layer)
        // 图层添加完毕后，跳转到图层范围内
        layer.on('layerview-created', (result) => {
          view.flyTo({
            extent: result.layer.extent
          })
        })
      }

      // 显隐子图层
      function setSubLayerVisible() {
        const sublayer = layer.findSublayerById("0")
        sublayer.visible = !sublayer.visible
      }

      // 设置子图层透明度
      function setSubLayerOpacity() {
        const sublayer = layer.findSublayerById("0")
        sublayer.opacity = 0.5
      }

      //初始化示例UI操作
      function initUI() {
        layui.use(function () {
          layui.slider.render({
            elem: "#moveStep",
            value: 100,
            min: 0,
            max: 100,
            step: 1,
            theme: 'rgb(21, 134, 238)',
            //自定义提示文本
            setTips: function (value) {
              layerOpacity = value / 100
              return value + '%';
            },
            change: function (value) {
              layer.opacity = layerOpacity
            }
          });
        })
      }
    </script>
  </head>

  <body onload="init();">
    <!--  视图容器div  -->
    <div id="mapgis-viewer" style="position: absolute; width: 100%; height: 100%"></div>
    <!--  示例UI  -->
    <div class="layui-panel layui-panel-right vector-tile-layer-panel">
        <form class="layui-form" action="">
            <div class="layui-form-item">
                <label class="layui-form-label" style="width: 100px;">图层透明度</label>
                <div class="layui-input-block sample-slider" style="width: 320px;">
                    <div id="moveStep"></div>
                </div>
            </div>
            <div class="layui-form-item" style="margin-top: 10px;width: auto">
                <button type="button" class="layui-btn" onclick="setSubLayerVisible()" style="float: right">显隐子图层</button>
                <button type="button" class="layui-btn" onclick="setSubLayerOpacity()" style="float: right;margin-right: 6px">设置子图层透明度</button>
            </div>
        </form>
    </div>
  </body>
</html>
