<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>ArcGIS地图服务图层</title>
    <!-- 引入地图引擎库 -->
    <script
            src="http://webclient.smaryun.com/static/libs/include-lib-local-upgrade.js"
    ></script>
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css" />
    <!--示例公共样式-->
    <link
            rel="stylesheet"
            href="http://webclient.smaryun.com/static/libs/css/style.css"
    />
    <script type="text/javascript">
      //使用严格模式
      'use strict'
      // 定义二维视图的主要类

      let map, view, layer, layerOpacity = 1,
        renderMode = 'tile', httpMethod = 'GET',
        url = 'https://services.arcgisonline.com/arcgis/rest/services/World_Street_Map/MapServer'
      const {
          ArcGISMapImageLayer
      } = zondy.layer
      const { Map, SpatialReference, Color } = zondy

      // 初始化地图
      function init() {
        // 初始化地图视图
        initView()
        // 初始化示例UI
        initUI()
        // 添加瓦片图层
        addLayer()
      }

      // 初始二维地图
      function initView() {
        // 初始化图层管理容器
        map = new Map()
        // 初始化地图视图对象
        view = createView('mapgis-viewer', map)
      }

      // 添加瓦片图层
      function addLayer() {
        // 如果layer存在，先删除图层
        if (layer) {
          deleteLayer()
        }
        // 创建图层，如果是IGS1.0版本的服务请在初始化时指的图层坐标系
        layer = new ArcGISMapImageLayer({
          // 服务基地址
          url: url,
          // 图层透明度
          opacity: layerOpacity
        })
        // 添加图层
        map.add(layer)
        // 图层添加完毕后，跳转到图层范围内
        layer.on('layerview-created', (result) => {
          view.flyTo({
            extent: result.layer.extent
          })
        })
      }

      // 获取图层构造参数
      function getParams() {
        // 设置图层初始化参数
        let options = {
          // 服务基地址
          url: url,
          // 图层透明度
          opacity: layerOpacity
        }
        // 获取token名
        const tokenKey = document.getElementById('token-key').value
        // 获取token值
        const tokenValue = document.getElementById('token-value').value
        // token存在
        if (tokenKey && tokenValue) {
          // 设置token名
          options.tokenKey = tokenKey
          // 设置token值
          options.tokenValue = tokenValue
        }
        // 获取请求头
        let headers = document.getElementById('headers').value
        // 请求头存在
        if (headers) {
          headers = JSON.parse(String(headers))
          if (headers instanceof Object && !(headers instanceof Array)) {
            // 设置请求头
            options.headers = headers
            // 模式变为post请求模式
            options.httpMethod = 'POST'
          }
        }
        // 渲染模式
        options.renderMode = renderMode
        // 请求模式
        options.httpMethod = httpMethod
        console.log("options:", options)
        return options
      }

      // 重置图层
      function resetLayer() {
        // 删除图层
        map.remove(layer)
        // 设置图层初始化参数
        const options = getParams()
        // 创建图层
        layer = new ArcGISMapImageLayer(options)
        // 添加图层
        map.add(layer)
      }

      //初始化示例UI操作
      function initUI() {
        layui.use(function () {
          layui.slider.render({
            elem: "#moveStep",
            value: 100,
            min: 0,
            max: 100,
            step: 1,
            theme: 'rgb(21, 134, 238)',
            //自定义提示文本
            setTips: function (value) {
              layerOpacity = value / 100
              return value + '%';
            },
            change: function (value) {
              layer.opacity = layerOpacity
            }
          });
          const form = layui.form

          // 切换渲染模式
          form.on('select(renderMode)', function (data) {
            renderMode = data.value
            // 重置图层
            resetLayer()
          })

          // 切换请求模式
          form.on('select(httpMethod)', function (data) {
            httpMethod = data.value
            // 重置图层
            resetLayer()
          })
        })
      }
    </script>
    <style>
        .layui-input-block-select {
            width: 186px;
        }
    </style>
</head>

<body onload="init();">
<!--  视图容器div  -->
<div id="mapgis-viewer" style="position: absolute; width: 100%; height: 100%"></div>
<!--  示例UI  -->
<div class="layui-panel layui-panel-right map-image-layer-panel">
    <form class="layui-form" action="">
        <div class="layui-form-item">
            <label class="layui-form-label" style="width: 100px;">图层透明度</label>
            <div class="layui-input-block sample-slider" style="width: 188px;">
                <div id="moveStep"></div>
            </div>
        </div>
        <div class="layui-form-item" style="margin-bottom: 10px">
            <label class="layui-form-label">渲染模式</label>
            <div class="layui-input-block layui-input-block-select">
                <select
                        id="renderMode"
                        name="renderMode"
                        lay-filter="renderMode"
                >
                    <option value="tile">瓦片</option>
                    <option value="image">图片</option>
                </select>
            </div>
        </div>
        <div class="layui-form-item" style="margin-bottom: 10px">
            <label class="layui-form-label">请求模式</label>
            <div class="layui-input-block layui-input-block-select">
                <select
                        id="httpMethod"
                        name="httpMethod"
                        lay-filter="httpMethod"
                >
                    <option value="GET">GET请求</option>
                    <option value="POST">POST请求</option>
                </select>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">设置Token</label>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">Token名</label>
            <div class="layui-input-block" style="margin-bottom: 6px">
                <input
                        id="token-key"
                        value="token"
                        autocomplete="off"
                        class="layui-input"
                        placeholder="Token名"
                />
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">Token值</label>
            <div class="layui-input-block" style="margin-bottom: 6px">
                <input
                        id="token-value"
                        autocomplete="off"
                        class="layui-input"
                        placeholder="Token值"
                />
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">设置请求头</label>
            <textarea
                    placeholder='请设置请求头，例如：{"Authorization":"authorization"}'
                    id="headers"
                    class="layui-textarea"
            ></textarea>
        </div>
        <div class="layui-form-item">
            <button
                    type="button"
                    class="layui-btn"
                    style="float: right; width: auto; margin-top: 10px"
                    onclick="resetLayer()"
            >
                重置图层
            </button>
        </div>
    </form>
</div>
</body>
</html>
