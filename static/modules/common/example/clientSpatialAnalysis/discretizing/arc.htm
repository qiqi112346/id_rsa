<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>三点弧段的离散化</title>
    <!-- 引入地图引擎库 -->
    <script src="http://webclient.smaryun.com/static/libs/include-lib-local-upgrade.js"></script>
    <!-- 获取天地图token -->
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css" />
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <script type="text/javascript">
      //使用严格模式
      'use strict'
      // 定义二维视图的主要类

      let map, view, featureServer, graphicsLayer
      const {
        WMTSLayer,
        GraphicsLayer
      } = zondy.layer
      const { Map, Color, Feature } = zondy
      const { FeatureServer } = zondy.service
      const { Point, Polygon, GeometryEngine } = zondy.geometry
      const { SimpleLineSymbol, SimpleMarkerSymbol, SimpleFillSymbol } = zondy.symbol

      // 初始化地图
      function init() {
        // 初始化地图视图
        initView()
        // 添加天地图
        addWMTSLayer()
        // 添加标绘图层
        addGraphicsLayer()
        // 将圆形离散化，并绘制成多边形
        toPolygon()
      }

      // 初始二维地图
      function initView() {
        // 初始化图层管理容器
        map = new Map()
        // 初始化地图视图对象
        view = createView('mapgis-viewer', map)
      }

      // 添加WMTS图层
      function addWMTSLayer() {
        const wmtsLayer = new WMTSLayer({
          // 加载经纬度的影像地图
          url: 'http://t6.tianditu.gov.cn/img_c/wmts',
          // 天地图必须加token，且token名为tk
          tokenKey: 'tk',
          // token请在天地图官网申请
          tokenValue: getTDTToken()
        })
        map.add(wmtsLayer)
        // 图层加载完毕
        wmtsLayer.on('layerview-created', function (result) {
          console.log('加载完毕:', result.layer)
          view.flyTo({
            center: [113.2, 30.5, 300000],
            zoom: 7
          })
        })
      }

      // 添加标绘图层
      function addGraphicsLayer() {
        // 创建Graphics图层对象
        graphicsLayer = new GraphicsLayer({
          graphics: []
        })
        // 添加图层对象到地图文档中
        map.add(graphicsLayer)
      }

      // 添加要计算夹角的几何
      function toPolygon() {
        // 构造椭圆圆心
        const center = new Point({
          coordinates: [113.2, 30.5]
        })
        // 将椭圆形离散化为离散的点数组
        const coordinates = GeometryEngine.getPositionsFromArc({
          // 弧段上的第一个点，弧段的起点
          point1: [112.2, 30.5],
          // 弧段上的第二个点，弧段穿过的点
          point2: [113.2, 31.5],
          // 弧段上的第二个点，弧段的终点
          point3: [114.2, 30.5],
          // 弧段中点的数量
          numberOfPoints: 360
        })
        coordinates.push(coordinates[0])
        // 构造多边形
        const geometry = new Polygon({
          coordinates: [coordinates]
        })
        // 添加多边形
        graphicsLayer.add(
          new Feature({
            geometry: geometry,
            symbol: new SimpleFillSymbol({
              // 设置填充颜色
              color: new Color(0, 255, 0, 0.5),
              // 设置外边线样式
              outline: new SimpleLineSymbol({
                // 设置外边线颜色
                color: new Color(255, 0, 0, 1),
                // 设置外边线宽度，单位像素
                width: 2
              })
            })
          })
        )
      }
    </script>
  </head>

  <body onload="init();">
    <!--  视图容器div  -->
    <div id="mapgis-viewer" style="position: absolute; width: 100%; height: 100%"></div>
  </body>
</html>
