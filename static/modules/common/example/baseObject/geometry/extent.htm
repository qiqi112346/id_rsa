<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>矩形几何</title>
    <!-- 引入地图引擎库 -->
    <script src="http://webclient.smaryun.com/static/libs/include-lib-local-upgrade.js"></script>
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"
    />
    <!--示例公共样式-->
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/css/style.css"
    />
    <script type="text/javascript">
      //使用严格模式
      'use strict'
      // 定义二维视图的主要类

      let map, view, graphicsLayer, extent, feature
      const { IGSTileLayer, GraphicsLayer } = zondy.layer
      const { Map, Feature, Color } = zondy
      const { Extent } = zondy.geometry
      const { SimpleFillSymbol, SimpleLineSymbol } = zondy.symbol
      let $ = layui.jquery

      // 初始化地图
      function init() {
        // 初始化地图视图
        initView()
        // 添加瓦片图层
        addIGSTileLayer()
        // 添加几何图层
        addGraphicsLayer()
        // 创建几何要素
        extent = newExtent()
        // 添加几何要素
        addFeature(extent)
      }

      // 初始二维地图
      function initView() {
        // 初始化图层管理容器
        map = new Map()
        // 初始化地图视图对象
        view = createView('mapgis-viewer', map)
        // 获取地图引擎类型
        const engineType = localStorage.getItem('engine-type', 'cesium')
        // 针对三维进行特殊处理
        if (engineType === 'cesium'){
          // 获取三维场景视图对象
          const viewer = view.getInnerView()
          // 判断是否支持图像渲染像素化处理
          if(Cesium.FeatureDetection.supportsImageRenderingPixelated()){
            // 使得该值和浏览器保持一致，文字或者图形的渲染结果会更加平滑
            viewer.resolutionScale = window.devicePixelRatio
          }
          // 开启抗锯齿，文字或者图形的渲染结果会更加平滑
          viewer.scene.fxaa = true
          viewer.scene.postProcessStages.fxaa.enabled = true
        }
      }

      // 添加瓦片图层
      function addIGSTileLayer() {
        const igsTileLayer = new IGSTileLayer({
          url: 'http://webclient.smaryun.com:8089/igs/rest/services/Tile/湖北省_4326_normal_3-10/TileServer'
        })
        map.add(igsTileLayer)
        igsTileLayer.on('layerview-created', (result) => {
          view.flyTo({
            extent: result.layer.extent
          })
          getViewParams()
        })
      }

      // 添加几何图层
      function addGraphicsLayer() {
        // 创建Graphics图层对象
        graphicsLayer = new GraphicsLayer({
          graphics: []
        })
        // 添加图层对象到地图文档中
        map.add(graphicsLayer)
      }

      // 创建几何要素
      function newExtent() {
        return new Extent({
          xmin: 110,
          xmax: 114,
          ymin: 29.5,
          ymax: 31
        })
      }

      // 添加几何要素
      function addFeature(extent) {
        if (feature) {
          graphicsLayer.remove(feature)
          feature = undefined
        }
        // 创建区几何要素
        feature = new Feature({
          // 创建区几何
          geometry: extent,
          // 设置符号样式
          symbol: new SimpleFillSymbol({
            // 设置填充颜色
            color: new Color(0, 255, 0, 1),
            // 设置外边线样式
            outline: new SimpleLineSymbol({
              // 设置外边线颜色
              color: new Color(255, 0, 0, 1),
              // 设置外边线宽度，单位像素
              width: 2
            })
          })
        })
        graphicsLayer.add(feature)
      }

      // 自动获取当前几何坐标
      function getViewParams() {
        $('#extent-xmin-input').val(extent.xmin)
        $('#extent-xmax-input').val(extent.xmax)
        $('#extent-ymin-input').val(extent.ymin)
        $('#extent-ymax-input').val(extent.ymax)
      }

      // 修改几何坐标
      function setExtentCoord() {
        extent = new Extent({
          xmax: Number($('#extent-xmax-input').val()),
          xmin: Number($('#extent-xmin-input').val()),
          ymax: Number($('#extent-ymax-input').val()),
          ymin: Number($('#extent-ymin-input').val())
        })
        // 将修改坐标后的几何要素添加到图层中
        addFeature(extent)
        $('#extent-xmin-input').val(extent.xmin)
        $('#extent-xmax-input').val(extent.xmax)
        $('#extent-ymin-input').val(extent.ymin)
        $('#extent-ymax-input').val(extent.ymax)
      }
    </script>
  </head>

  <body onload="init();">
    <!--  视图容器div  -->
    <div id="mapgis-viewer" style="position: absolute; width: 100%; height: 100%"></div>
    <div class="layui-panel layui-panel-right">
      <form class="layui-form" action="">
        <div class="layui-form-item">
          <label class="layui-form-label">xmin:</label>
          <div class="layui-input-block" style="margin-bottom: 6px">
            <input
              id="extent-xmin-input"
              value="0"
              autocomplete="off"
              class="layui-input"
            />
          </div>
        </div>
        <div class="layui-form-item">
          <label class="layui-form-label">ymin:</label>
          <div class="layui-input-block" style="margin-bottom: 6px">
            <input
              id="extent-ymin-input"
              value="0"
              autocomplete="off"
              class="layui-input"
            />
          </div>
        </div>
        <div class="layui-form-item">
          <label class="layui-form-label">xmax:</label>
          <div class="layui-input-block" style="margin-bottom: 6px">
            <input
              id="extent-xmax-input"
              value="0"
              autocomplete="off"
              class="layui-input"
            />
          </div>
        </div>
        <div class="layui-form-item">
          <label class="layui-form-label">ymax:</label>
          <div class="layui-input-block" style="margin-bottom: 16px">
            <input
              id="extent-ymax-input"
              value="0"
              autocomplete="off"
              class="layui-input"
            />
          </div>
        </div>
        <div class="layui-form-item">
          <button
            type="button"
            class="layui-btn"
            style="float: right; width: auto"
            onclick="setExtentCoord()"
          >
            修改坐标
          </button>
        </div>
      </form>
    </div>
  </body>
</html>
