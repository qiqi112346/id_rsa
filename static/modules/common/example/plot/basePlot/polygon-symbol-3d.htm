<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="initial-scale=1,maximum-scale=1,user-scalable=no"
    />
    <title>三维区符号</title>
    <!--引入Cesium.js库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/cesium/Cesium.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <!--cesium样式-->
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/cdn/cesium/Widgets/widgets.css"
    />
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/cdn/cesium/MapGIS/css/mapgis.css"
    />
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"
    />
    <!--示例公共样式-->
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/css/style.css"
    />
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/css/graphic.css"
    />
    <script>
      'use strict'
      //定义三维视图的主要类
      let map, view, graphicsLayer, polygonSymbol3D

      const { Map, Feature, Color } = zondy
      const { SceneView } = zondy.cesium
      const { IGSTileLayer, GraphicsLayer } = zondy.layer
      const { Polygon } = zondy.geometry
      const { PolygonSymbol3D, FillSymbol3DLayer, ColorMaterial } = zondy.symbol
      // 取得jquery对象
      let $ = layui.$
      // 颜色管理器对象
      let colorpicker = layui.colorpicker

      //初始化球体
      function initViewer() {
        //初始化图层管理容器
        map = new Map()
        //初始化地图视图对象
        view = new SceneView({
          //视图id
          viewId: 'mapgis-viewer',
          //图层管理容器
          map: map
        })
        // 设置图元检测
        initHitTest()
      }

      //地图初始化函数
      function init() {
        // 初始化球体
        initViewer()
        // 添加瓦片图层
        addIGSTileLayer()
        // 添加标绘图层
        addGraphicsLayer()
        // 添加三维区符号
        addPolygon()
        // 初始化示例UI
        initUI()
      }

      // 添加标绘图层
      function addGraphicsLayer() {
        graphicsLayer = new GraphicsLayer({
          graphics: []
        })
        map.add(graphicsLayer)
      }

      // 添加三维点符号
      function addPolygon() {
        const polygon = new Polygon({
          coordinates: [
            [
              [113.5, 30.5, 1000],
              [114, 30.5, 1000],
              [114, 31, 1000],
              [113.5, 31, 1000],
              [113.5, 30.5, 1000]
            ]
          ]
        })
        polygonSymbol3D = new PolygonSymbol3D({
          symbolLayers: [
            // 添加一个三维区符号图层
            new FillSymbol3DLayer({
              // 覆盖物颜色
              material: new ColorMaterial({
                color: new Color(255, 1, 1, 1)
              })
            })
          ]
        })
        const feature = new Feature({
          geometry: polygon,
          // 设置三维符号，一个三维符号可添加多个三维符号突出
          symbol: polygonSymbol3D
        })

        graphicsLayer.add(feature)
      }

      // 添加瓦片图层
      function addIGSTileLayer() {
        const igsTileLayer = new IGSTileLayer({
          url: 'http://webclient.smaryun.com:8089/igs/rest/services/Tile/湖北省_4326_normal_3-10/TileServer'
        })
        map.add(igsTileLayer)
        igsTileLayer.on('layerview-created', (result) => {
          view.flyTo({
            extent: result.layer.extent
          })
        })
      }

      //初始化示例UI
      function initUI() {
        //示例UI相关
        layui.use('colorpicker', function () {
          //填充颜色
          colorpicker.render({
            elem: '#polygon-color',
            format: 'rgb',
            alpha: true,
            color: 'rgb(255,1,1)',
            done: function (color) {
              $('#polygon-color-input').val(color)
              polygonSymbol3D.symbolLayers = [
                new FillSymbol3DLayer({
                  // 设置符号材质
                  material: new ColorMaterial({
                    color: Color.fromColor(color)
                  })
                })
              ]
            }
          })
        })
      }

      // 设置图元检测
      function initHitTest() {
        view.on('click', function (event) {
          const result = view.hitTest({
            x: event.x,
            y: event.y
          })
          if (result.length > 0) {
            //这个时候展开编辑面板
            $('#editPanel').show()
          }
        })
      }
    </script>
  </head>

  <body onload="init()">
    <!--  视图容器div  -->
    <div id="mapgis-viewer" style="position: absolute; width: 100%; height: 100%"></div>
    <div class="layui-panel layui-panel-right" id="editPanel">
      <form class="layui-form" action="" lay-filter="example">
        <div class="sample-main-panel">
          <div class="layui-form-item">
            <label class="layui-form-label">填充颜色</label>
            <div
              class="layui-input-inline"
              style="width: 145px; margin-left: 10px"
            >
              <input
                disabled
                type="text"
                value="#ff0101"
                placeholder="填充颜色"
                class="layui-input"
                id="polygon-color-input"
              />
            </div>
            <div class="layui-inline">
              <div id="polygon-color"></div>
            </div>
          </div>
        </div>
        <div class="sample-button-panel">
          <button
            onclick="$('#editPanel').hide()"
            style="float: right; width: auto; margin-right: 0 !important"
            type="button"
            class="layui-btn layui-btn-normal graphic-button-margin"
          >
            关闭面板
          </button>
        </div>
      </form>
    </div>
  </body>
</html>
