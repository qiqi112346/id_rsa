<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="initial-scale=1,maximum-scale=1,user-scalable=no"
    />
    <title>三维文本符号</title>
    <!--引入Cesium.js库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/cesium/Cesium.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <!--cesium样式-->
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/cdn/cesium/Widgets/widgets.css"
    />
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/cdn/cesium/MapGIS/css/mapgis.css"
    />
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"
    />
    <!--示例公共样式-->
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/css/style.css"
    />
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/css/graphic.css"
    />
    <script>
      'use strict'
      //定义三维视图的主要类
      let map, view, graphicsLayer, labelSymbol3D

      const { Map, Feature, Color } = zondy
      const { SceneView } = zondy.cesium
      const { IGSTileLayer, GraphicsLayer } = zondy.layer
      const { Point } = zondy.geometry
      const { LabelSymbol3D, TextSymbol3DLayer, ColorMaterial, Font } = zondy.symbol
      // 取得jquery对象
      let $ = layui.$
      // 颜色管理器对象
      let colorpicker = layui.colorpicker

      //初始化球体
      function initViewer() {
        //初始化图层管理容器
        map = new Map()
        //初始化地图视图对象
        view = new SceneView({
          //视图id
          viewId: 'mapgis-viewer',
          //图层管理容器
          map: map
        })
        // 设置图元检测
        initHitTest()
      }

      //地图初始化函数
      function init() {
        // 初始化球体
        initViewer()
        // 添加瓦片图层
        addIGSTileLayer()
        // 添加标绘图层
        addGraphicsLayer()
        // 添加三维文本符号
        addLabel()
        // 初始化示例UI
        initUI()
      }

      // 添加标绘图层
      function addGraphicsLayer() {
        graphicsLayer = new GraphicsLayer({
          graphics: []
        })
        map.add(graphicsLayer)
      }

      // 添加三维文本符号
      function addLabel() {
        const point = new Point({
          coordinates: [114, 30, 600]
        })
        labelSymbol3D = new LabelSymbol3D({
          symbolLayers: [
            // 添加一个三维文本符号图层
            new TextSymbol3DLayer({
              // 文字内容
              text: '三维文本符号',
              // 文字大小
              size: 40,
              // 文字颜色
              material: new ColorMaterial({
                color: new Color(255, 1, 1, 1)
              })
            })
          ]
        })
        const feature = new Feature({
          geometry: point,
          // 设置三维符号，一个三维符号可添加多个三维符号突出
          symbol: labelSymbol3D
        })

        graphicsLayer.add(feature)
      }

      // 添加瓦片图层
      function addIGSTileLayer() {
        const igsTileLayer = new IGSTileLayer({
          url: 'http://webclient.smaryun.com:8089/igs/rest/services/Tile/湖北省_4326_normal_3-10/TileServer'
        })
        map.add(igsTileLayer)
        igsTileLayer.on('layerview-created', (result) => {
          view.flyTo({
            extent: result.layer.extent
          })
        })
      }

      // 初始化示例UI
      function initUI() {
        let colorSet
        $('#text-content').val(labelSymbol3D.symbolLayers.items[0].text)
        // 示例UI相关
        layui.use('colorpicker', function () {
          // 字体大小
          $('#text-size').bind('input propertychange', function () {
            labelSymbol3D.symbolLayers = [
              new TextSymbol3DLayer({
                // 文字内容
                text: $('#text-content').val(),
                // 设置图标大小，单位像素
                size: clampNumberValue($('#text-size').val()),
                // 设置符号材质
                material: new ColorMaterial({
                  color: colorSet
                    ? Color.fromColor(colorSet)
                    : new Color(255, 1, 1, 1)
                })
              })
            ]
          })
          // 文本内容
          $('#text-content').bind('input propertychange', function () {
            labelSymbol3D.symbolLayers = [
              new TextSymbol3DLayer({
                // 文字内容
                text: $('#text-content').val(),
                // 设置图标大小，单位像素
                size: clampNumberValue($('#text-size').val()),
                // 设置符号材质
                material: new ColorMaterial({
                  color: colorSet
                    ? Color.fromColor(colorSet)
                    : new Color(255, 1, 1, 1)
                })
              })
            ]
          })
          // 填充颜色
          colorpicker.render({
            elem: '#text-color',
            format: 'rgb',
            alpha: true,
            color: 'rgb(255,1,1)',
            done: function (color) {
              $('#text-color-input').val(color)
              colorSet = color
              labelSymbol3D.symbolLayers = [
                new TextSymbol3DLayer({
                  // 文字内容
                  text: $('#text-content').val(),
                  // 设置图标大小，单位像素
                  size: clampNumberValue($('#text-size').val()),
                  // 设置符号材质
                  material: new ColorMaterial({
                    color: Color.fromColor(color)
                  })
                })
              ]
            }
          })
        })
      }

      // 设置图元检测
      function initHitTest() {
        view.on('click', function (event) {
          const result = view.hitTest({
            x: event.x,
            y: event.y
          })
          if (result.length > 0) {
            //这个时候展开编辑面板
            $('#editPanel').show()
          }
        })
      }

      // 获取合法的number数据输入
      function clampNumberValue(inputValue, limits) {
        let max, min
        if (Array.isArray(limits) && limits.length > 0) {
          if (limits.length === 1) {
            min = limits[0]
          } else {
            max = limits[1]
          }
        }
        let value = Number(inputValue)
        if (Number.isNaN(value)) {
          if (typeof min === 'number') {
            return min
          } else {
            return 0
          }
        }
        if (typeof min === 'number' && value <= min) {
          return min
        }
        if (typeof max === 'number' && value >= max) {
          return max
        }
        return value
      }
    </script>
  </head>

  <body onload="init()">
    <!--  视图容器div  -->
    <div id="mapgis-viewer" style="position: absolute; width: 100%; height: 100%"></div>
    <div class="layui-panel layui-panel-right" id="editPanel">
      <form class="layui-form" action="" lay-filter="example">
        <div class="sample-main-panel">
          <div class="layui-form-item">
            <label class="layui-form-label">字体颜色</label>
            <div
              class="layui-input-inline"
              style="width: 145px; margin-left: 10px"
            >
              <input
                disabled
                type="text"
                value="#ff0101"
                placeholder="字体颜色"
                class="layui-input"
                id="text-color-input"
              />
            </div>
            <div class="layui-inline">
              <div id="text-color"></div>
            </div>
          </div>
          <div class="layui-form-item">
            <label class="layui-form-label">字体大小</label>
            <div class="layui-input-block" style="width: 183px">
              <input
                id="text-size"
                value="40"
                type="text"
                name="title"
                lay-verify="title"
                autocomplete="off"
                placeholder="40"
                class="layui-input"
              />
            </div>
          </div>
          <div class="layui-form-item">
            <label class="layui-form-label">文本内容</label>
            <div class="layui-input-block" style="width: 183px">
              <input
                id="text-content"
                type="text"
                name="title"
                lay-verify="title"
                autocomplete="off"
                class="layui-input"
              />
            </div>
          </div>
        </div>
        <div class="sample-button-panel">
          <button
            onclick="$('#editPanel').hide()"
            style="float: right; width: auto; margin-right: 0 !important"
            type="button"
            class="layui-btn layui-btn-normal graphic-button-margin"
          >
            关闭面板
          </button>
        </div>
      </form>
    </div>
  </body>
</html>
