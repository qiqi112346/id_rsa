<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>要素查询 - 条件查询</title>
    <!-- 引入地图引擎库 -->
    <script
      src="http://webclient.smaryun.com/static/libs/include-lib-local-upgrade.js"
    ></script>
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css" />
    <!--示例公共样式-->
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/css/style.css"
    />
    <script type="text/javascript">
      //使用严格模式
      'use strict'
      // 定义二维视图的主要类

      let map, view, layer, server, graphicsLayer
      const {
        IGSTileLayer,
        GraphicsLayer
      } = zondy.layer
      const { Map, Color } = zondy
      const { FeatureServer } = zondy.service

      // 初始化地图
      function init() {
        // 初始化地图视图
        initView()
        // 添加瓦片图层
        addTileLayer()
        // 添加几何图层
        addGraphicsLayer()
        // 初始化服务对象
        initServer()
        // 查询要素
        query()
      }

      // 初始二维地图
      function initView() {
        // 初始化图层管理容器
        map = new Map()
        // 初始化地图视图对象
        view = createView('mapgis-viewer', map)
      }

      // 初始化服务对象
      function initServer() {
        server = new FeatureServer({
          url: 'http://webclient.smaryun.com:8089/igs/rest/services/Map/湖北省4326/FeatureServer'
        })
      }

      // 开始查询
      function query() {
        server.queryFeatures({
          // 指定查询图层
          layerId: document.getElementById('layer-id').value,
          // 设置查询条件
          where: document.getElementById('where').value
        }).then(function (result) {
          console.log("查询成功：", result)
          // 设置填充颜色为红色，请开发人员自行设置，这里仅作展示
          const features = result.data.featureSet.features
          for (let i = 0; i < features.length; i++) {
            features[i].symbol.color = new Color(233, 0, 0, 0.4)
          }
          // 绘制要素
          graphicsLayer.addMany(result.data.featureSet)
        })
      }

      // 添加瓦片图层
      function addTileLayer() {
        // 创建瓦片图层
        layer = new IGSTileLayer({
          // 服务基地址
          url: 'http://webclient.smaryun.com:8089/igs/rest/services/Tile/湖北省_4326_normal_3-10/TileServer'
        })
        // 添加图层
        map.add(layer)
        // 图层添加完毕后，跳转到图层范围内
        layer.on('layerview-created', (result) => {
          view.flyTo({
            extent: result.layer.extent
          })
        })
      }

      // 添加几何图层
      function addGraphicsLayer() {
        // 添加几何图层
        graphicsLayer = new GraphicsLayer()
        // 添加图层
        map.add(graphicsLayer)
      }
    </script>
  </head>

  <body onload="init();">
    <!--  视图容器div  -->
    <div id="mapgis-viewer" style="position: absolute; width: 100%; height: 100%"></div>
    <!--  示例UI  -->
    <div class="layui-panel layui-panel-right" style="width: 335px">
        <form class="layui-form" action="">
            <div class="layui-form-item">
                <div class="layui-form-item">
                    <label class="layui-form-label">图层ID：</label>
                    <div class="layui-input-block" style="margin-bottom: 6px;">
                        <input id="layer-id" value="0" autocomplete="off" class="layui-input">
                    </div>
                </div>
                <div class="layui-form-item">
                    <label class="layui-form-label">查询条件：</label>
                    <div class="layui-input-block" style="margin-bottom: 6px;">
                        <input id="where" value="NAME='武汉市'" autocomplete="off" class="layui-input">
                    </div>
                </div>
                <div class="layui-form-item" style="float: right;padding-top: 10px">
                    <button type="button" class="layui-btn" onclick="query()">开始查询</button>
                </div>
            </div>
        </form>
    </div>
  </body>
</html>
