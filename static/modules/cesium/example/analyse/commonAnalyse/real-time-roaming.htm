<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no"/>
    <title>实时漫游</title>
    <!--加载不同版本Cesium库-->
    <script src="http://webclient.smaryun.com/static/libs/loadCesium.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>

    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"/>
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/tool.css"/>
    <script>
      'use strict'
      //定义三维视图的主要类
      let map, sceneView, viewer, animation, graphicsLayer
      //取得jquery对象
      let $ = layui.$
      // 定时器对象
      let interval, timeout
      // 计数
      let addIndex = 0
      // 模拟实时漫游坐标数组
      let pathPositionsRealTime = [
        Cesium.Cartesian3.fromDegrees(
          114.39996373486233,
          30.505389576289236,
          20
        ),
        Cesium.Cartesian3.fromDegrees(
          114.40228166438185,
          30.49973291079843,
          20
        ),
        Cesium.Cartesian3.fromDegrees(
          114.40655877187075,
          30.499211160877056,
          20
        ),
        Cesium.Cartesian3.fromDegrees(
          114.40602023504307,
          30.49474309878579,
          20
        ),
        Cesium.Cartesian3.fromDegrees(
          114.40166643241399,
          30.49637658303419,
          20
        ),
        Cesium.Cartesian3.fromDegrees(
          114.39856543566363,
          30.496646986868303,
          20
        )
      ]

      //地图初始化函数
      function init() {
        //初始化三维球体
        initViewer()
        //创建切换Cesium版本的按钮
        createChangeTab()
        //加载天地图
        addTDT()
        //初始化漫游工具
        initAnimationTool()
        // 标绘初始化
        initGraphicsLayer()
        // 开启动画漫游
        startRoaming()
      }

      //初始化三维球体
      function initViewer() {
        //初始化图层管理容器
        map = new zondy.Map()
        //初始化地图视图对象
        sceneView = new zondy.cesium.SceneView({
          //视图id
          viewId: 'mapgis-3d-viewer',
          //图层管理容器
          map: map
        })
        //获取视图对象
        viewer = sceneView.getInnerView()
      }

      //加载天地图
      function addTDT() {
        let TDTLayer = new zondy.layer.WMTSLayer({
          // 加载经纬度的影像地图
          url: 'http://t6.tianditu.gov.cn/vec_c/wmts',
          // 天地图必须加token，且token名为tk
          tokenKey: 'tk',
          // token请在天地图官网申请
          tokenValue: getTDTToken()
        })
        map.add(TDTLayer)
      }

      //初始化漫游工具
      function initAnimationTool() {
        // 初始漫游坐标数组
        let pathPositions = [
          Cesium.Cartesian3.fromDegrees(
            114.3925732878257,
            30.500246691168265,
            20
          ),
          Cesium.Cartesian3.fromDegrees(
            114.39340167546476,
            30.50672795728932,
            20
          )
        ]
        // 定义动画漫游对象
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/AnimationTool.html
        animation = new zondy.cesium.AnimationTool(viewer, {
          // 漫游的方向角
          heading: Cesium.Math.toRadians(90),
          // 漫游的俯仰角
          pitch: Cesium.Math.toRadians(0),
          // 相机距离模型的距离（米）
          range: 1600,
          // 设置漫游的视角类型。0：正常，不移动相机；1：跟随；2：锁定第一视角；3：上帝视角
          animationType: 3,
          // 是否循环漫游动画
          isLoop: true,
          // 是否显示漫游路径
          showPath: true,
          // 漫游路径(世界坐标点数组)
          positions: pathPositions,
          // 漫游速度(m/s)
          speed: 105,
          // 倍速
          speedupFactor: 1,
          // 附加高程
          exHeight: 0,
          // 是否显示用时和距离提示信息
          showInfo: false,
          // 漫游的模型对象的url，为空表示不显示
          modelUrl: 'http://webclient.smaryun.com:8200/3DData/Model/glb/uav.glb',
          //模型对象参数，详见ModelGraphics对象的文档
          model: {
            //放大比例
            scale: 20,
            //固定大小设为0
            minimumPixelSize: 0
          },
          // 完成漫游后的回调函数
          complete: function () {},
          // 路径插值算法。可选：拉格朗日算法Cesium.LagrangePolynomialApproximation、线性插值 Cesium.LinearApproximation、埃尔米特插值插值Cesium.HermitePolynomialApproximation
          interpolationAlgorithm: Cesium.LagrangePolynomialApproximation,
          //是否获取当前点坐标，为true时，需配合返回当前点坐标的回调函数callBack一起使用
          isGetPositionNow: true,
          //是否需要将较大转弯点处理为圆弧
          isProcessCorner: true,
          //设置判断为转弯点的角度的最大值，不超过150的转角会被执行插值，处理为圆弧
          maxAngle: 150.0,
          //转弯处往圆弧曲线上插值点的步长，点个数=1/curveStep
          curveStep: 0.01,
          // 是否挂载动态扫描特效
          isAddScanEffect: false,
          // 是否获取路径点的真实高程
          isGetRealHeight: false,
          //是否执行回调函数
          onPositionTag: true,
          //是否设置模型运动姿态，保持朝向与运动方向一致
          isSetModelPosture: true,
          // 当点经过设置的路径点时，返回路径点坐标和index索引号
          callback: function (result) {}
        })
      }

      //开始漫游
      function startRoaming() {
        addIndex = 0
        // 开始
        animation.start()
        // 定时器模拟实时增加漫游位置
        interval = setInterval(add, 5000)
      }

      // 实时添加新的漫游位置
      function add() {
        if (addIndex >= pathPositionsRealTime.length) {
          // 清除定时器
          clearInterval(interval)
          // 清除扩散圆标绘
          graphicsLayer.destroy()
          // 清除漫游
          animation.stop()
          // 重新初始化
          initAnimationTool()
          // 重新开始漫游
          startRoaming()
        } else {
          let newPosition = pathPositionsRealTime[addIndex]
          // 先给坐标点加扩散圆展示
          addCircle(newPosition)
          timeout = setTimeout(addPosition, 1000)
        }
      }

      // 添加坐标点
      function addPosition() {
        let newPosition = pathPositionsRealTime[addIndex]
        let positions = animation.positions
        positions.push(newPosition)
        animation.positions = positions
        addIndex++
        clearTimeout(timeout)
      }

      // 标绘初始化
      function initGraphicsLayer() {
        graphicsLayer = new zondy.cesium.GraphicsLayer(viewer, {})
      }

      // 扩散圆
      function addCircle(position) {
        let circleGraphic = new zondy.cesium.Graphic({
          //标绘类型
          type: 'circle',
          //标绘位置
          positions: [position],
          //标绘样式
          style: {
            //离地高度
            offsetHeight: 10,
            //圆半径
            radius: 60,
            //扩散圆材质
            material: Cesium.Material.fromType(
              Cesium.Material.CircleDiffuseMaterialType,
              {
                //材质颜色
                color: Cesium.Color.BROWN,
                //扩散速度
                speed: 10.0
              }
            )
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(circleGraphic)
      }
    </script>
  </head>

  <body onload="init()">
    <div id="mapgis-3d-viewer"></div>
  </body>
</html>
