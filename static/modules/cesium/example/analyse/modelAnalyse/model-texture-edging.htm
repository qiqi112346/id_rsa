<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>模型纹理封边</title>
    <!--加载不同版本Cesium库-->
    <script src="http://webclient.smaryun.com/static/libs/loadCesium.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>

    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"/>
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/tool.css"/>
    <script>
      'use strict'
      //定义三维视图的主要类
      let map, sceneView, viewer
      let layerList = []
      //绘制工具
      let drawElement = null
      //图层的index
      let layerIndex = null
      //裁剪的工具
      let cutTool = null

      //地图初始化函数
      function init() {
        //初始化三维球体
        initViewer()
        //创建切换Cesium版本的按钮
        createChangeTab()
        //三维试图类构造完毕，添加模型
        addModel()
        //模型添加完毕了之后，创建一个cutting的工具
        addCuttingTool()
      }

      //初始化三维球体
      function initViewer() {
        //初始化图层管理容器
        map = new zondy.Map()
        //初始化地图视图对象
        sceneView = new zondy.cesium.SceneView({
          //视图id
          viewId: 'mapgis-3d-viewer',
          //图层管理容器
          map: map
        })
        //获取视图对象
        viewer = sceneView.getInnerView()
        //为了更好的展示模型的过滤，去掉地球
        viewer.scene.globe.show = false
        // 针对cesium10.7.4.10版本隐藏大气环境光
        if (viewer.scene.skyAtmosphere) {
          viewer.scene.skyAtmosphere.show = false;
        }
        if (viewer.scene.sun.show) {
          viewer.scene.sun.show = false;
        }
        if (viewer.scene.moon.show) {
          viewer.scene.moon.show = false;
        }
        if (viewer.scene.globe.showGroundAtmosphere) {
          viewer.scene.globe.showGroundAtmosphere = false;
        }
      }

      //添加一个剖切工具
      function addCuttingTool() {
        if (layerList.length === 1) {
          cutTool = new Cesium.CuttingTool(viewer, layerList, {
            isCuttingTerrain: true,
            onErrorCallback: function (type, msg) {
              console.log('错误信息：' + type + ':' + msg)
            }
          })
          drawElement = new Cesium.DrawElement(viewer)
        } else {
          //如果没有添加完，那么继续等待
          setTimeout(() => {
            addCuttingTool()
          }, 500)
        }
      }

      function addCuttingPolygon() {
        layer.msg('左键选取点，右键结束')
        //先移除上次的剪裁体
        removeCuttingPlane()
        drawElement.startDrawingPolygon({
          callback: function (result) {
            let positions = result.positions
            let pnts = []
            for (let i = 0; i < positions.length; i++) {
              let position = positions[i]
              let c1 = Cesium.Cartographic.fromCartesian(position)
              let p1 = new Cesium.Cartesian3(
                Cesium.Math.toDegrees(c1.longitude),
                Cesium.Math.toDegrees(c1.latitude),
                c1.height
              )
              pnts.push(p1)
            }
            cutTool.createModelCuttingVolume(
              pnts, // 区域边界点数组
              -3000, // 最小高程
              3000, // 最大高程
              {
                unionClippingRegions: true, // 裁剪方向，false：原方向，true：反方向
                showCuttingPlane: false // 是否显示辅助面
              }
            )
            drawElement.stopDrawing()
          }
        })
      }

      // 移除之前剪裁效果
      function removeCuttingPlane() {
        if (cutTool) {
          cutTool.removeAll()
        }
        if (drawElement) {
          drawElement.stopDrawing()
        }
      }

      // 添加模型
      function addModel() {
        let url =
          'http://webclient.smaryun.com:8200/3DData/ModelCache/M3D//1.0/钻孔分层点_Sur_000_Ent/钻孔分层点_Sur_000_Ent.mcj'
        layerIndex = viewer.scene.layers.appendM3DLayer(url, {
          duration: 2,
          fillClip: true,
          autoReset: true,
          loaded: function (layer) {
            layerList.push(layer)
          }
        })
      }
    </script>
  </head>

  <body onload="init()">
    <div id="mapgis-3d-viewer"></div>
    <div class="layui-panel layui-panel-right" id="layui-panel-right">
      <div class="sample-button-panel">
        <button
          type="button"
          class="layui-btn layui-btn-sm layui-btn-normal"
          onclick="addCuttingPolygon()"
        >
          绘制裁剪体
        </button>
        <button
          type="button"
          class="layui-btn layui-btn-sm layui-btn-danger"
          onclick="removeCuttingPlane()"
        >
          移除裁剪面
        </button>
      </div>
    </div>
    <style>
      .layui-panel-right {
        width: auto;
      }
    </style>
  </body>
</html>
