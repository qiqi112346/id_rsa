<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no"/>
    <title>坡度坡向分析</title>
    <!--加载不同版本Cesium库-->
    <script src="http://webclient.smaryun.com/static/libs/loadCesium.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"/>
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/visual.css"/>
   <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/analyse.css"/>
    <script>
      'use strict'
      //定义三维视图的主要类
      let map, sceneView, viewer, graphicsLayer
      //取得jquery对象
      let $ = layui.$
      //绘制多边形的工具
      let drawElement = null
      //鼠标操作
      let handler = null
      //坡度分析
      let slopeAnalysis = null
      //坡度坡向选择
      let slopeShowChoose = 'slope'
      //坡向箭头重复数量
      let slopeArrowRepeat = 10

      //绘制一个区面，主要是为了方便得到一个polygon的点集
      function addDrawElement() {
        if (drawElement === null) {
          // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/DrawElement.html
          drawElement = new zondy.cesium.DrawElement(viewer)
        }
        //先清除已有的分析类
        removeSlopeAnalysis()
        drawElement.startDrawingPolygon({
          callback: function (result) {
            if (slopeAnalysis === null) {
              // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/TerrainAnalyse.html
              slopeAnalysis = new zondy.cesium.TerrainAnalyse(viewer, {
                aspectArrowImage: 'http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin-resource/assets/textures/arrow3.png'
              })
            }
            let positions = result.positions
            slopeAnalysis.changeAnalyseArea(positions)
            //关闭等值线
            slopeAnalysis.enableContour = false
            //取消掉绘制
            drawElement.stopDrawing()
            //箭头数量
            slopeAnalysis.aspectArrowRepeat = new Cesium.Cartesian2(
              slopeArrowRepeat,
              slopeArrowRepeat
            )
            //坡度分析
            changeSlopeAnalysisMaterial()
          }
        })
      }

      //操作面板添加一个拖动条，控制坡向箭头展示的X轴与Y轴的重复数量
      function addSlideBar() {
        layui.slider.render({
          elem: '#arrowRepeatSlider',
          value: slopeArrowRepeat,
          input: true,
          theme: 'rgb(102, 147, 251)',
          change: function (value) {
            if (slopeAnalysis) {
              slopeArrowRepeat = value
              slopeAnalysis.aspectArrowRepeat = new Cesium.Cartesian2(
                slopeArrowRepeat,
                slopeArrowRepeat
              )
            }
          }
        })
      }

      //添加一个select框
      function initSlopeShowChooseEvent() {
        layui.form.on('select(slopeShowSelect)', function (data) {
          slopeShowChoose = document.getElementById('slopeShowSelect').value
          if (
            slopeShowChoose === 'aspectArrow' ||
            slopeShowChoose === 'arrowAspectSlope'
          ) {
            document.getElementById('arrowRepeatItem').style.display = 'block'
          } else {
            document.getElementById('arrowRepeatItem').style.display = 'none'
          }
          changeSlopeAnalysisMaterial()
        })
      }

      //改变分析结果的展现方式
      function changeSlopeAnalysisMaterial() {
        if (slopeAnalysis) {
          slopeAnalysis.updateMaterial(slopeShowChoose)
        }
      }

      //单点查询坡度坡向
      function querySlope() {
        layer.msg('鼠标左键选取')
        if (slopeAnalysis === null) {
          slopeAnalysis = new zondy.cesium.TerrainAnalyse(viewer, {
            aspectArrowImage: 'http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin-resource/assets/textures/arrow3.png'
          })
        }
        // 先取消单点查询坡度坡向
        stopQuerySlope()
        handler = new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas)
        // 鼠标左击
        handler.setInputAction(function (movement) {
          // 屏幕坐标转经纬度坐标
          let coordinates = sceneView.toMap(movement.position).coordinates
          // 通过屏幕坐标获取坡向、坡度信息
          let result = slopeAnalysis.calculateSlopeAndAspect(movement.position)
          addPopupByHtml(coordinates, result)
        }, Cesium.ScreenSpaceEventType.LEFT_CLICK)
      }

      //初始化标绘图层
      function addGraphicLayer() {
        graphicsLayer = new zondy.cesium.GraphicsLayer(viewer, {})
      }

      //坡度坡向的气泡弹框
      function addPopupByHtml(coordinates, result) {
        //先移除所有气泡弹框
        $('.box').remove()
        let html = `
            <div class="box" style="display: block;">
              <div class="pine"></div>
              <div class="box-wrap">
                <div class="adorn big"></div>
                <div class="adorn middle"></div>
                <div class="adorn small"></div>
                <div class="close-btn" onclick="removeClickPopup(this)"></div>
                <div class="popup-content">
                  <div class="content-item">
                    <span class="content-item-title">经度：</span>
                    <span class="content-item-value">${coordinates[0]}</span>
                  </div>
                  <div class="content-item">
                    <span class="content-item-title">纬度：</span>
                    <span class="content-item-value">${coordinates[1]}</span>
                  </div>
                  <div class="content-item">
                    <span class="content-item-title">高度：</span>
                    <span class="content-item-value">${coordinates[2]}</span>
                  </div>
                  <div class="content-item">
                    <span class="content-item-title">坡向：</span>
                    <span class="content-item-value">${result.aspect}（${result.aspectDescription}）</span>
                  </div>
                  <div class="content-item">
                    <span class="content-item-title">坡度：</span>
                    <span class="content-item-value">${result.slope}</span>
                  </div>
                </div>
              </div>
            </div>`

        let popupGraphic = new zondy.cesium.Graphic({
          //标绘类型
          type: 'div',
          //标绘位置
          positions: [
            Cesium.Cartesian3.fromDegrees(
              coordinates[0],
              coordinates[1],
              coordinates[2]
            )
          ],
          //标绘样式
          style: {
            //html字符串
            html: html,
            pixelOffset: new Cesium.Cartesian2(8, 56)
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(popupGraphic)
      }

      //移除气泡弹出框
      function removeClickPopup(_this) {
        $(_this).parent().parent().remove()
      }

      //取消单点查询坡度坡向
      function stopQuerySlope() {
        if (handler) {
          handler.destroy()
        }
      }

      //清除坡度坡向分析
      function removeSlopeAnalysis() {
        if (slopeAnalysis) {
          stopQuerySlope()
          slopeAnalysis.destroy()
          slopeAnalysis = null
        }
      }

      //添加地形数据
      function addTerrain() {
        let igsSceneLayer = new zondy.layer.IGSSceneLayer({
          url: 'http://webclient.smaryun.com:8089/igs/rest/services/Scene/TwTerrain/SceneServer',
          scenes: [{
            // 设置子图层初始化参数
            sublayers: [{
              // 子图层id
              id: '0',
              // 子图层初始化参数
              extensionOptions: {
                // 设置专题图渲染器
                requestVertexNormals: true
              }
            }]
          }]
        })
        map.add(igsSceneLayer)
        // 图层加载完毕
        igsSceneLayer.on(
          zondy.enum.LayerEventType.layerViewCreated,
          function (result) {
            // 视点跳转
            flyToTerrain()
          }
        )
      }

      //定位到地形
      function flyToTerrain() {
        sceneView.flyTo({
          center: [121.0076, 23.3814, 9000.0],
          duration: 2,
          orientation: {
            pitch: Cesium.Math.toRadians(-35.0) //俯仰角
          }
        })
      }

      //添加天地图影像数据
      function addTDT() {
        let TDTLayer = new zondy.layer.WMTSLayer({
          // 加载经纬度的影像地图
          url: 'http://t6.tianditu.gov.cn/img_c/wmts',
          // 天地图必须加token，且token名为tk
          tokenKey: 'tk',
          // token请在天地图官网申请
          tokenValue: getTDTToken()
        })
        map.add(TDTLayer)
      }

      //初始化三维球体
      function initViewer() {
        //初始化图层管理容器
        map = new zondy.Map()
        //初始化地图视图对象
        sceneView = new zondy.cesium.SceneView({
          //视图id
          viewId: 'mapgis-3d-viewer',
          //图层管理容器
          map: map
        })
        //获取视图对象
        viewer = sceneView.getInnerView()
        //打开深度检测
        viewer.scene.globe.depthTestAgainstTerrain = true
      }

      //地图初始化函数
      function init() {
        //初始化三维球体
        initViewer()
        //创建切换Cesium版本的按钮
        createChangeTab()
        //添加天地图
        addTDT()
        //添加地形数据
        addTerrain()
        //初始化标绘图层
        addGraphicLayer()
        //展示方式select切换功能
        initSlopeShowChooseEvent()
        //添加示例UI滑动条
        addSlideBar()
      }
    </script>
  </head>

  <body onload="init()">
    <div id="mapgis-3d-viewer"></div>
    <div class="layui-panel layui-panel-right" style="width: 440px">
      <form class="layui-form" action="">
        <div class="sample-main-panel">
          <div class="layui-form-item">
            <label class="layui-form-label" style="color: #fff">展示方式</label>
            <div class="layui-input-block">
              <select id="slopeShowSelect" lay-filter="slopeShowSelect">
                <option value="slope" selected>坡度面</option>
                <option value="aspectArrow">坡向箭头</option>
                <option value="arrowAspectSlope">坡度面+坡向箭头</option>
              </select>
            </div>
          </div>
          <div
            class="layui-form-item"
            id="arrowRepeatItem"
            style="display: none"
          >
            <div class="slideBarDiv">
              箭头数量
              <div id="arrowRepeatSlider" class="demoSlider"></div>
            </div>
          </div>
        </div>
        <div class="sample-button-panel">
          <button
            type="button"
            class="layui-btn layui-btn-sm layui-btn-normal"
            onclick="addDrawElement()"
          >
            绘制分析区
          </button>
          <button
            type="button"
            class="layui-btn layui-btn-sm layui-btn-normal"
            onclick="removeSlopeAnalysis()"
          >
            清除
          </button>
          <button
            type="button"
            class="layui-btn layui-btn-sm layui-btn-normal"
            onclick="querySlope()"
          >
            激活坡度坡向查询
          </button>
          <button
            type="button"
            class="layui-btn layui-btn-sm layui-btn-normal"
            onclick="stopQuerySlope()"
          >
            取消坡度坡向查询
          </button>
        </div>
      </form>
    </div>
    <style>
      .sample-main-panel {
        height: auto;
      }

      .layui-slider {
        top: -20px;
        width: 215px;
        left: 94px;
      }

      .layui-slider-input {
        top: -34px;
      }

      .layui-form-select {
        width: 150px;
      }

      .layui-layer-msg .layui-layer-content {
        text-align: left;
      }

      /*气泡弹框样式*/
      .box {
        width: 200px;
        position: relative;
        bottom: 0;
        left: 0;
        font-size: 12px;
        display: none;
        pointer-events: auto;
        font-family: 'Microsoft YaHei';
      }

      .box-wrap {
        position: absolute;
        left: 45px;
        top: 0;
        width: 100%;
        min-height: 1rem;
        border-top: 1px solid #4ae6ff;
      }

      .popup-content {
        width: 100%;
        height: 100%;
        background-color: rgba(18, 59, 68, 0.8);
        box-sizing: border-box;
        padding: 10px;
        text-align: left;
        color: #fff;
        font-size: 12px;
      }

      .content-item {
        padding-left: 10px;
      }

      .pine {
        position: absolute;
        border-top: 1px solid #42c9df;
        width: 75px;
        height: 75px;
        left: -30px;
        box-sizing: border-box;
        transform-origin: top right;
        transform: rotateZ(-45deg);
      }

      .adorn {
        background-color: rgba(74, 230, 255, 1);
        position: absolute;
        height: 8px;
        transform: skewX(45deg);
      }

      .adorn.big {
        width: 19px;
        right: 22px;
      }

      .adorn.middle {
        width: 8px;
        right: 11px;
      }

      .adorn.small {
        width: 4px;
        right: 4px;
      }

      .close-btn {
        position: absolute;
        right: 0;
        top: 0;
        transform: translate(50%, -50%);
        width: 15px;
        height: 15px;
        border: 1px solid #00fbff;
        border-radius: 50%;
        color: #00fbff;
        line-height: 8px;
        text-align: center;
        cursor: pointer;
        z-index: 111;
        background: #00253f;
      }

      .close-btn::before {
        content: '\2715';
        font-size: 12px;
        line-height: 13px;
      }
    </style>
  </body>
</html>
