<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>地形开挖</title>
    <!--加载不同版本Cesium库-->
    <script src="http://webclient.smaryun.com/static/libs/loadCesium.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>
    <!--引入Cesium.js库相关css样式-->
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"/>
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/tool.css"/>
    <script>
      'use strict'
      //取得jquery对象
      let $ = layui.$
      //定义三维视图的主要类
      let map, sceneView, viewer
      //绘制工具
      let drawElement = null
      //地形剪裁的工具
      let cutTool = null
      // 地形封边底面颜色纹理资源路径
      let terrainGroundFillImage = 0
      // 地形封边剖面颜色纹理资源路径
      let terrainWallFillImage = 0
      // 区域边界点数组
      let pnts = []

      //地图初始化函数
      function init() {
        //初始化球体
        initViewer()
        //创建切换Cesium版本的按钮
        createChangeTab()
        //添加影像
        addTDT()
        //三维试图类构造完毕，添加地形
        addTerrain()
        //面板事件绑定
        initPanelEvent()
      }

      //初始化球体
      function initViewer() {
        //初始化图层管理容器
        map = new zondy.Map()
        //初始化地图视图对象
        sceneView = new zondy.cesium.SceneView({
          //视图id
          viewId: 'mapgis-3d-viewer',
          //图层管理容器
          map: map
        })
        //获取视图对象
        viewer = sceneView.getInnerView()
        //开启深度检测
        viewer.scene.globe.depthTestAgainstTerrain = true
      }

      //添加一个剖切工具
      function addCuttingTool() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/CuttingTool.html
        cutTool = new zondy.cesium.CuttingTool(viewer, [], {
          isCuttingTerrain: true,
          onErrorCallback: function (type, msg) {
            console.log('错误信息：' + type + ':' + msg)
          }
        })
        if (!drawElement) {
          // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/DrawElement.html
          drawElement = new zondy.cesium.DrawElement(viewer)
        }
      }

      function addCuttingPolygon() {
        addCuttingTool()
        layer.msg('左键选取点，右键结束')
        //先移除上次的剪裁体
        removeCuttingPlane()
        drawElement.startDrawingPolygon({
          callback: function (result) {
            let positions = result.positions
            pnts = []
            for (let i = 0; i < positions.length; i++) {
              let position = positions[i]
              let c1 = Cesium.Cartographic.fromCartesian(position)
              let p1 = new Cesium.Cartesian3(
                Cesium.Math.toDegrees(c1.longitude),
                Cesium.Math.toDegrees(c1.latitude),
                c1.height
              )
              pnts.push(p1)
            }
            createModelCuttingVolume()
            drawElement.stopDrawing()
          }
        })
      }

      // 通过构建裁剪体
      function createModelCuttingVolume() {
        if (!cutTool) {
          return false
        }
        // options 参数
        let options = {
          unionClippingRegions: true, // 裁剪方向，false：原方向，true：反方向
          showCuttingPlane: false // 是否显示辅助面
        }
        // 地形封边底面颜色纹理资源图片路径，不设置此参数，会有默认纹理资源
        switch (terrainGroundFillImage) {
          case 1:
            options.terrainGroundFillImage =
              'http://webclient.smaryun.com:8200/NoneSpatialData/image/ground-texture-1.jpg'
            break
          case 2:
            options.terrainGroundFillImage =
              'http://webclient.smaryun.com:8200/NoneSpatialData/image/ground-texture-2.jpg'
            break
          case 3:
            options.terrainGroundFillImage =
              'http://webclient.smaryun.com:8200/NoneSpatialData/image/ground-texture-3.jpg'
            break
          default:
            break
        }
        // 地形封边剖面颜色纹理资源图片路径，不设置此参数，会有默认纹理资源
        switch (terrainWallFillImage) {
          case 1:
            options.terrainWallFillImage =
              'http://webclient.smaryun.com:8200/NoneSpatialData/image/wall-texture-1.jpg'
            break
          case 2:
            options.terrainWallFillImage =
              'http://webclient.smaryun.com:8200/NoneSpatialData/image/wall-texture-2.jpg'
            break
          case 3:
            options.terrainWallFillImage =
              'http://webclient.smaryun.com:8200/NoneSpatialData/image/wall-texture-3.jpg'
            break
          default:
            break
        }

        // 地形封边剖面颜色纹理资源路径
        cutTool.createModelCuttingVolume(
          pnts, // 区域边界点数组
          -2000, // 最小高程
          2000, // 最大高程
          options
        )
      }

      // 移除之前剪裁效果
      function removeCuttingPlane() {
        if (cutTool) {
          cutTool.removeAll()
        }
        if (drawElement) {
          drawElement.stopDrawing()
        }
      }

      //初始化示例UI
      function initPanelEvent() {
        // 地形封边底面颜色纹理资源图片路径
        layui.form.on('select(terrainGroundFillImage)', function (data) {
          let value = Number($('#terrainGroundFillImage').val())
          terrainGroundFillImage = value
          removeCuttingPlane()
          createModelCuttingVolume()
        })

        // 地形封边剖面颜色纹理资源图片路径
        layui.form.on('select(terrainWallFillImage)', function (data) {
          let value = Number($('#terrainWallFillImage').val())
          terrainWallFillImage = value
          removeCuttingPlane()
          createModelCuttingVolume()
        })
      }

      //添加天地图影像
      function addTDT() {
        let TDTLayer = new zondy.layer.WMTSLayer({
          // 加载经纬度的影像地图
          url: 'http://t6.tianditu.gov.cn/img_c/wmts',
          // 天地图必须加token，且token名为tk
          tokenKey: 'tk',
          // token请在天地图官网申请
          tokenValue: getTDTToken()
        })
        map.add(TDTLayer)
      }

      //添加地形数据
      async function addTerrain() {
        const terrainProvider =
          await zondy.cesium.CesiumTerrainProvider.fromUrl(
            'http://webclient.smaryun.com:8200/3DData/TerrainCache/HubeiTerrain/',
            {
              requestWaterMask: true,
              requestVertexNormals: true
            }
          )
        viewer.terrainProvider = terrainProvider
        flyToTerrain()
      }

      //定位到地形
      function flyToTerrain() {
        sceneView.flyTo({
          center: [110.31, 31.48, 3000],
          orientation: {
            heading: Cesium.Math.toRadians(60), //方位角
            pitch: Cesium.Math.toRadians(-25), //俯仰角
            roll: 0 //翻滚角
          }
        })
      }
    </script>
  </head>

  <body onload="init()">
    <div id="mapgis-3d-viewer"></div>
    <div class="layui-panel layui-panel-right">
      <form class="layui-form" action="">
        <div class="sample-main-panel">
          <div class="layui-form-item">
            <label class="layui-form-label">底面纹理资源</label>
            <div class="layui-input-block">
              <select
                id="terrainGroundFillImage"
                name="terrainGroundFillImage"
                lay-filter="terrainGroundFillImage"
              >
                <option value="0">默认纹理</option>
                <option value="1">底面纹理1</option>
                <option value="2">底面纹理2</option>
                <option value="3">底面纹理3</option>
              </select>
            </div>
          </div>
          <div class="layui-form-item">
            <label class="layui-form-label">剖面纹理资源</label>
            <div class="layui-input-block">
              <select
                id="terrainWallFillImage"
                name="terrainWallFillImage"
                lay-filter="terrainWallFillImage"
              >
                <option value="0">默认纹理</option>
                <option value="1">剖面纹理1</option>
                <option value="2">剖面纹理2</option>
                <option value="3">剖面纹理3</option>
              </select>
            </div>
          </div>
        </div>
        <div class="sample-button-panel">
          <button
            type="button"
            class="layui-btn layui-btn-sm layui-btn-normal"
            onclick="addCuttingPolygon()"
          >
            绘制开挖区域
          </button>
          <button
            type="button"
            class="layui-btn layui-btn-sm layui-btn-danger"
            onclick="removeCuttingPlane()"
          >
            移除开挖区域
          </button>
        </div>
      </form>
    </div>
    <style type="text/css">
      .layui-panel-right {
        width: auto;
      }

      .sample-main-panel {
        height: auto;
      }

      .layui-form-item {
        margin-bottom: 8px;
      }

      .layui-form-label {
        width: 86px;
      }
    </style>
  </body>
</html>
