<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no"/>
    <title>平行光源</title>
    <!--加载不同版本Cesium库-->
    <script src="http://webclient.smaryun.com/static/libs/loadCesium.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"/>
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/visual.css"/>
    <script>
      'use strict'
      //取得jquery对象
      let $ = layui.$
      //颜色管理器对象
      let colorpicker = layui.colorpicker
      let slider = layui.slider
      // 定义三维视图的主要类
      let map, sceneView, viewer, scene
      // 定义平行光对象
      let parallelLight

      function init() {
        //初始化三维球体
        initViewer()
        //创建切换Cesium版本的按钮
        createChangeTab()
        // 添加模型
        addIGSSceneLayer()
        //初始化示例UI
        initUI()
      }

      //初始化三维球体
      function initViewer() {
        //初始化图层管理容器
        map = new zondy.Map()
        //初始化地图视图对象
        sceneView = new zondy.cesium.SceneView({
          //视图id
          viewId: 'mapgis-3d-viewer',
          //图层管理容器
          map: map
        })
        //获取视图对象
        viewer = sceneView.getInnerView()
        scene = viewer.scene
      }

      // 添加模型数据
      function addIGSSceneLayer() {
        let url =
          'http://webclient.smaryun.com:8089/igs/rest/services/Scene/高级住所模型/SceneServer'
        let igsSceneLayer = new zondy.layer.IGSSceneLayer({
          url: url,
          // 设置场景初始化参数
          scenes: [
            {
              // 设置子图层初始化参数
              sublayers: [
                {
                  // 子图层id
                  id: '0',
                  // 子图层初始化参数
                  extensionOptions: {
                    // 开启自动跳转
                    autoReset: true
                  }
                }
              ]
            }
          ]
        })
        map.add(igsSceneLayer)
      }

      // 添加光源
      function addLightBtnClicked() {
        // 构造绘制工具
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/DrawElement.html
        let drawElement = new zondy.cesium.DrawElement(viewer)
        drawElement.startDrawingPolyline({
          callback: function (result) {
            let positions = result.positions
            if (positions.length !== 2) {
              console.error('输入点个数不等于2!')
              return
            }
            // 移除上一次添加的光源
            scene.removeLight(parallelLight)
            // 添加光源
            parallelLight = new Cesium.ParallelLight({
              // 根据用户输入线段计算方向光方向
              direction: Cesium.Cartesian3.subtract(
                positions[1],
                positions[0],
                new Cesium.Cartesian3()
              ),
              // 光源颜色
              color: new Cesium.Color(1.0, 1.0, 1.0, 0.0), //new Cesium.Color.fromRandom(),
              // 光源强度
              intensity: 0.5
            })
            scene.addLight(parallelLight)
            drawElement.stopDrawing()
          }
        })
      }

      // 移除光源
      function removeLightBtnClicked() {
        scene.removeLight(parallelLight)
      }

      //初始化示例UI
      function initUI() {
        // 光源强度
        slider.render({
          elem: '#light-intensity',
          value: 5.0,
          min: 0.0,
          max: 50.0,
          step: 1,
          theme: 'rgb(102 147 251)',
          change: function (value) {
            if (Cesium.defined(parallelLight))
              parallelLight.intensity = value * 0.1
          }
        })
        //光源颜色
        colorpicker.render({
          elem: '#light-color',
          color: '#ffffff',
          done: function (color) {
            $('#light-color-input').val(color)
            if (Cesium.defined(parallelLight))
              parallelLight.color = Cesium.Color.fromCssColorString(color)
          }
        })
      }
    </script>
  </head>

  <body onload="init()">
    <div id="mapgis-3d-viewer"></div>
    <div class="layui-panel layui-panel-right">
      <form class="layui-form" action="">
        <div class="sample-main-panel" style="height: 100px">
          <div class="layui-form-item">
            <label class="layui-form-label">光源颜色</label>
            <div class="layui-input-inline">
              <input
                disabled
                type="text"
                value="#ffffff"
                placeholder="光源颜色"
                class="layui-input"
                id="light-color-input"
              />
            </div>
            <div class="layui-inline" style="left: -11px">
              <div id="light-color"></div>
            </div>
          </div>
          <div class="layui-form-item">
            <div class="slideBarDiv">
              光源强度
              <div id="light-intensity" class="demo-slider"></div>
            </div>
          </div>
        </div>
        <div class="sample-button-panel">
          <button
            onclick="addLightBtnClicked()"
            type="button"
            class="layui-btn layui-btn-normal"
          >
            添加光源
          </button>
          <button
            onclick="removeLightBtnClicked()"
            type="button"
            class="layui-btn layui-btn-normal"
          >
            移除光源
          </button>
        </div>
      </form>
    </div>
    <style>
      .layui-slider {
        top: -20px;
        width: 196px;
        left: 94px;
      }
    </style>
  </body>
</html>
