<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no"/>
    <title>倾斜摄影(M3D-M3D服务)</title>
    <!--加载不同版本Cesium库-->
    <script src="http://webclient.smaryun.com/static/libs/loadCesium.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"/>
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/visual.css"/>
    <script>
      'use strict'
      //定义三维视图的主要类
      let map, sceneView, viewer, layer
      let $ = layui.$

      // 亮度
      const brightness = 0
      // 曝光度
      const exposure = 0
      // 对比度
      const contrast = 1
      // 色相
      const hue = 0
      // 饱和度
      const saturation = 0
      // 伽马
      const gamma = 1
      // 滑块
      let brightnessSlider,
        exposureSlider,
        contrastSlider,
        hueSlider,
        saturationSlider,
        gammaSlider

      // 添加M3dServer缓存图层
      function addM3DModelCacheLayer() {
        // 参考API: http://webclient.smaryun.com/static/modules/common/api/common-mapgis/M3DModelCacheLayer.html
        let M3DModelCacheLayer = new zondy.layer.M3DModelCacheLayer({
          // 服务基地址
          url: 'http://webclient.smaryun.com:8089/igs/rest/services/M3Dv2/zondyOSGB/M3dServer',
          // 初始化参数
          extensionOptions: {
            // 开启自动跳转
            autoReset: true,
            // 亮度
            brightness: brightness,
            // 曝光度
            exposure: exposure,
            // 对比度
            contrast: contrast,
            // 色相
            hue: hue,
            // 饱和度
            saturation: saturation,
            // 伽马
            gamma: gamma
          }
        })
        map.add(M3DModelCacheLayer)
        // 图层加载完毕
        M3DModelCacheLayer.on('layerview-created', function (result) {
          layer = sceneView.getInnerLayer(result.layer)
        })
      }

      // 重置
      function resetting() {
        if (layer) {
          // 分别重置滑块组件的值
          brightnessSlider.setValue(brightness * 10)
          exposureSlider.setValue(exposure * 10)
          contrastSlider.setValue(contrast * 10)
          hueSlider.setValue(hue * 10)
          saturationSlider.setValue(saturation * 10)
          gammaSlider.setValue(gamma * 10)
        }
      }

      //初始化面板UI
      function initUI() {
        // 使用支持小数的slider
        layui
          .config({
            //  配置 Layui 第三方扩展模块存放的基础目录
            base: 'http://webclient.smaryun.com/static/libs/cdn/layui/modules/'
          })
          .extend({
            // 扩展
            decimalSlider: 'decimalSlider/index'
          })

        layui.use('decimalSlider', (decimalSlider) => {
          // 亮度
          brightnessSlider = decimalSlider.render({
            elem: '#brightness',
            decimalPlaces: 1,
            value: brightness,
            min: -1,
            max: 1,
            step: 0.1,
            input: true,
            theme: 'rgb(102, 147, 251)',
            change: function (value) {
              layer.brightness = parseFloat(value)
            }
          })
          // 曝光度
          exposureSlider = decimalSlider.render({
            elem: '#exposure',
            decimalPlaces: 1,
            value: exposure,
            min: -1,
            max: 1,
            step: 0.1,
            input: true,
            theme: 'rgb(102, 147, 251)',
            change: function (value) {
              layer.exposure = parseFloat(value)
            }
          })
          // 对比度
          contrastSlider = decimalSlider.render({
            elem: '#contrast',
            decimalPlaces: 1,
            value: contrast,
            min: 0,
            max: 2,
            step: 0.1,
            input: true,
            theme: 'rgb(102, 147, 251)',
            change: function (value) {
              layer.contrast = parseFloat(value)
            }
          })
          // 色相
          hueSlider = decimalSlider.render({
            elem: '#hue',
            decimalPlaces: 1,
            value: hue,
            min: 0,
            max: 1,
            step: 0.1,
            input: true,
            theme: 'rgb(102, 147, 251)',
            change: function (value) {
              layer.hue = parseFloat(value)
            }
          })
          // 饱和度
          saturationSlider = decimalSlider.render({
            elem: '#saturation',
            decimalPlaces: 1,
            value: saturation,
            min: -1,
            max: 1,
            step: 0.1,
            input: true,
            theme: 'rgb(102, 147, 251)',
            change: function (value) {
              layer.saturation = parseFloat(value)
            }
          })
          // 伽马
          gammaSlider = decimalSlider.render({
            elem: '#gamma',
            decimalPlaces: 1,
            value: gamma,
            min: 0,
            max: 3,
            step: 0.1,
            input: true,
            theme: 'rgb(102, 147, 251)',
            change: function (value) {
              layer.gamma = parseFloat(value)
            }
          })
        })
      }

      //加载天地图
      function addTDT() {
        let TDTLayer = new zondy.layer.WMTSLayer({
          // 加载经纬度的影像地图
          url: 'http://t6.tianditu.gov.cn/vec_c/wmts',
          // 天地图必须加token，且token名为tk
          tokenKey: 'tk',
          // token请在天地图官网申请
          tokenValue: getTDTToken()
        })
        map.add(TDTLayer)
      }

      //构造三维视图类（视图容器div的id，三维视图设置参数）
      function initViewer() {
        //初始化图层管理容器
        map = new zondy.Map()
        //初始化地图视图对象
        sceneView = new zondy.cesium.SceneView({
          //视图id
          viewId: 'mapgis-3d-viewer',
          //图层管理容器
          map: map
        })
        //获取视图对象
        viewer = sceneView.getInnerView()
        if (Cesium.FeatureDetection.supportsImageRenderingPixelated()) {
          //判断是否支持图像渲染像素化处理
          viewer.resolutionScale = window.devicePixelRatio
        }
      }

      //地图初始化函数
      function init() {
        //初始化球体
        initViewer()
        //创建切换Cesium版本的按钮
        createChangeTab()
        //加载天地图
        addTDT()
        //添加M3dServer缓存图层
        addM3DModelCacheLayer()
        //初始化面板UI
        initUI()
      }
    </script>
  </head>

  <body onload="init()">
    <div id="mapgis-3d-viewer"></div>
    <div class="layui-panel layui-panel-right">
      <form class="layui-form" action="">
        <div class="sample-main-panel">
          <div class="layui-form-item">
            <label class="layui-form-label">亮度</label>
            <div class="layui-input-block decimal-slider">
              <div id="brightness"></div>
            </div>
          </div>
          <div class="layui-form-item">
            <label class="layui-form-label">曝光度</label>
            <div class="layui-input-block decimal-slider">
              <div id="exposure"></div>
            </div>
          </div>
          <div class="layui-form-item">
            <label class="layui-form-label">对比度</label>
            <div class="layui-input-block decimal-slider">
              <div id="contrast"></div>
            </div>
          </div>
          <div class="layui-form-item">
            <label class="layui-form-label">色相</label>
            <div class="layui-input-block decimal-slider">
              <div id="hue"></div>
            </div>
          </div>
          <div class="layui-form-item">
            <label class="layui-form-label">饱和度</label>
            <div class="layui-input-block decimal-slider">
              <div id="saturation"></div>
            </div>
          </div>
          <div class="layui-form-item">
            <label class="layui-form-label">伽马</label>
            <div class="layui-input-block decimal-slider">
              <div id="gamma"></div>
            </div>
          </div>
        </div>
        <div class="sample-button-panel">
          <button
            type="button"
            class="layui-btn layui-btn-sm layui-btn-normal"
            onclick="resetting()"
          >
            重置
          </button>
        </div>
      </form>
    </div>
    <style type="text/css">
      .sample-main-panel {
        height: auto;
      }
    </style>
  </body>
</html>
