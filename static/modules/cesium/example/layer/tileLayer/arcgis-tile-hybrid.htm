<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no"/>
    <title>ArcGIS瓦片服务-混合接口</title>
    <!--加载不同版本Cesium库-->
    <script src="http://webclient.smaryun.com/static/libs/loadCesium.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <script>
      'use strict'
      // 全局变量
      let viewer, arcgisTileLayer, provider, cesiumLayer

      // MapGIS函数类
      const { ArcGISTileLayer } = zondy.layer
      const { ArcGISTileServerImageryProvider } = zondy.cesium
      const { initializeOptions } = zondy.cesium.util

      // 定义瓦片地图服务的基地址
      const url =
        'https://services.arcgisonline.com/arcgis/rest/services/World_Terrain_Base/MapServer'

      // 创建瓦片地图图层对象
      // 参考API: http://webclient.smaryun.com/static/modules/common/api/common-mapgis/ArcGISTileLayer.html
      arcgisTileLayer = new ArcGISTileLayer({ url })

      // 获取地图图片图层服务的元信息
      function loadLayerInfo() {
        arcgisTileLayer.load().then((layer) => {
          addTileLayer(layer)
        })
      }

      // 通过initializeOptions方法构造provider
      async function addTileLayer(layer) {
        // 获取provider的初始化参数
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/initializeOptions.html
        const options = initializeOptions(layer, viewer)
        // 构造provider对象
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/ArcGISTileServerImageryProvider.html
        provider = await ArcGISTileServerImageryProvider.fromUrl(layer.url, options)
        // 添加图层到Cesium视图中
        viewer.imageryLayers.addImageryProvider(provider)
      }

      //飞到指定视角
      function flyTo() {
        //飞到指定视角
        viewer.camera.flyto({
          destination: Cesium.Cartesian3.fromDegrees(
            116.5258,
            41.8054,
            10000000
          ),
          duration: 2
        })
      }

      //初始化球体
      function initViewer() {
        viewer = new Cesium.Viewer('mapgis-3d-viewer')
      }

      //地图初始化函数
      function init() {
        //初始化球体
        initViewer()
        //创建切换Cesium版本的按钮
        createChangeTab()
        // 加载ArcGIS瓦片图层
        loadLayerInfo()
        // 图层加载成功后的回调，视角定位到图层区域
        viewer.imageryLayers.layerAdded.addEventListener((event) => {
          flyTo()
        })
      }
    </script>
  </head>

  <body onload="init()">
    <div id="mapgis-3d-viewer"></div>
  </body>
</html>
