<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>图形图层 - 4326</title>
    <!--加载不同版本Cesium库-->
    <script src="http://webclient.smaryun.com/static/libs/loadCesium.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>

    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"/>
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <script type="text/javascript">
      //使用严格模式
      'use strict'
      // 定义二维视图的主要变量
      let map,
        sceneView,
        graphicsLayer,
        opacity = 0.8,
        features = []
      // 获取构造函数
      const { Map, layer, Feature, geometry, Color } =
        zondy
      const { WMTSLayer, GraphicsLayer } = layer
      const { Point, LineString, Polygon, Extent } = geometry
      const { SimpleMarkerSymbol, SimpleLineSymbol, SimpleFillSymbol } = zondy.symbol
      const { SceneView } = zondy.cesium

      // 初始化地图
      function init() {
        // 初始化视图
        initView()
        //创建切换Cesium版本的按钮
        createChangeTab()
        // 添加WMTS图层底图
        addWMTSLayer()
        // 添加基础标绘图层
        addGraphicsLayer()
        // 设置UI透明度
        document.getElementById('opacity').value = opacity
      }

      // 初始化视图
      function initView() {
        map = new Map()
        sceneView = new SceneView({
          // 视图id
          viewId: 'mapgis-3d-viewer',
          map: map
        })
      }

      // 添加WMTS图层
      function addWMTSLayer() {
        const wmtsLayer = new WMTSLayer({
          url: 'http://webclient.smaryun.com:8089/igs/rest/services/Tile/湖北省_4326_normal_3-10/WMTSServer'
        })
        map.add(wmtsLayer)

        // 图层加载完毕
        wmtsLayer.on('layerview-created', function (result) {
          console.log('加载完毕:', result.layer)
          sceneView.flyTo({
            extent: result.layer.extent
          })
        })
      }

      // 添加一个点要素
      function addPointFeature() {
        // 参考API: http://webclient.smaryun.com/static/modules/common/api/common-mapgis/Feature.html
        const lineFeature = new Feature({
          // 参考API: http://webclient.smaryun.com/static/modules/common/api/common-mapgis/Point.html
          geometry: new Point({
            coordinates: [114, 30, 600]
          }),
          // 参考API: http://webclient.smaryun.com/static/modules/common/api/common-mapgis/SimpleMarkerSymbol.html
          symbol: new SimpleMarkerSymbol({
            // 参考API: http://webclient.smaryun.com/static/modules/common/api/common-mapgis/Color.html
            color: new Color(255, 0, 0),
            style: 'circle',
            size: 60,
            // 参考API: http://webclient.smaryun.com/static/modules/common/api/common-mapgis/SimpleLineSymbol.html
            outline: new SimpleLineSymbol({
              color: new Color(1, 0, 255),
              width: 10
            })
          })
        })
        graphicsLayer.add(lineFeature)
      }

      // 添加一个线要素
      function addLineFeature() {
        const lineFeature = new Feature({
          geometry: new LineString({
            coordinates: [
              [113.1, 30],
              [113.5, 31]
            ]
          }),
          symbol: new SimpleLineSymbol({
            color: new Color(0, 0, 255, 1),
            size: 2
          })
        })
        graphicsLayer.add(lineFeature)
      }

      // 添加一个区要素
      function addPolygonFeature() {
        const polygonFeature = new Feature({
          geometry: new Polygon({
            coordinates: [
              [
                [108.36341, 29.032578],
                [113, 30],
                [116.13094, 29.032578],
                [116.13094, 33.273224],
                [108.36341, 33.273224],
                [108.36341, 29.032578]
              ]
            ]
          }),
          symbol: new SimpleFillSymbol({
            //设置颜色
            color: new Color(0, 255, 0, 0),
            outline: new SimpleLineSymbol({
              color: new Color(255, 0, 0, 1),
              width: 2
            })
          })
        })

        graphicsLayer.add(polygonFeature)
      }

      // 添加一个矩形要素
      function addExtentFeature() {
        const circleFeature = new Feature({
          geometry: new Extent({
            xmin: 110,
            xmax: 114,
            ymin: 29.5,
            ymax: 31
          }),
          symbol: new SimpleFillSymbol({
            //设置颜色
            color: new Color(0, 255, 0, 0.5),
            outline: new SimpleLineSymbol({
              color: new Color(255, 0, 255, 1),
              width: 2
            })
          })
        })

        graphicsLayer.add(circleFeature)
      }
      // 添加图层
      function addGraphicsLayer() {
        // 创建Graphics图层对象
        // 参考API: http://webclient.smaryun.com/static/modules/common/api/common-mapgis/GraphicsLayer.html
        graphicsLayer = new GraphicsLayer({
          graphics: [],
          opacity: 1.0
        })
        // 添加图层对象到地图文档中
        map.add(graphicsLayer)
      }

      // 改变图层透明度
      function changeOpacity() {
        if (graphicsLayer) {
          graphicsLayer.opacity = document.getElementById('opacity').value
        }
      }
      // 控制图层是否可见
      function changeVisible() {
        if (graphicsLayer) {
          graphicsLayer.visible = !graphicsLayer.visible
        }
      }
      // 从地图容器中移除图层
      function removeLayer() {
        console.log(graphicsLayer.loadStatus)
        if (graphicsLayer.loadStatus === 'loaded') {
          map.remove(graphicsLayer)
          graphicsLayer = null
          features = []
        }
      }
    </script>
  </head>

  <body onload="init();">
    <div
      id="mapgis-3d-viewer"
      style="position: absolute; display: flex; width: 100%; height: 100%"
    ></div>
    <div style="position: absolute; top: 20px; right: 10px; z-index: 10000">
      <span>透明度:</span>
      <input
        id="opacity"
        onmousemove="changeOpacity()"
        type="range"
        min="0"
        max="1"
        step="0.01"
        value="1"
      />
    </div>
    <button
      style="position: absolute; top: 60px; right: 10px; z-index: 10000"
      onclick="changeVisible()"
    >
      显示或隐藏几何图层
    </button>
    <button
      style="position: absolute; top: 60px; right: 155px; z-index: 10000"
      onclick="removeLayer()"
    >
      删除图层
    </button>
    <button
      style="position: absolute; top: 60px; right: 233px; z-index: 10000"
      onclick="addGraphicsLayer()"
    >
      添加图形图层
    </button>
    <button
      style="position: absolute; top: 90px; right: 10px; z-index: 10000"
      onclick="addPointFeature()"
    >
      添加点几何
    </button>
    <button
      style="position: absolute; top: 90px; right: 106px; z-index: 10000"
      onclick="addLineFeature()"
    >
      添加线几何
    </button>
    <button
      style="position: absolute; top: 90px; right: 200px; z-index: 10000"
      onclick="addPolygonFeature()"
    >
      添加区几何
    </button>
    <button
      style="position: absolute; top: 90px; right: 280px; z-index: 10000"
      onclick="addExtentFeature()"
    >
      添加矩形几何
    </button>
  </body>
</html>
