<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>MapGIS要素服务-混合接口</title>
  <!--加载不同版本Cesium库-->
  <script src="http://webclient.smaryun.com/static/libs/loadCesium.js"></script>
  <!--plugin脚本库-->
  <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
  <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
  <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>

  <!--示例中面板、按钮等，第三方layui的js库与css样式-->
  <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
  <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css" />
  <!--示例公共样式-->
  <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css" />
  <script type="text/javascript">
    //使用严格模式
    'use strict'
    // 定义二维视图的主要类
    let map,
      viewer,
      sceneView,
      featureLayerPoint,
      featureLayerLine,
      featureLayerPolygon
    // 获取构造函数
    const {
      layer,
      Color,
      renderer,
      util
    } = zondy
    const { IGSFeatureLayer } = layer
    const { RendererUtil } = util
    const { SimpleLineSymbol, SimpleFillSymbol, SimpleMarkerSymbol } = zondy.symbol
    const { SimpleRenderer, UniqueValueRenderer } = renderer
    const { SceneView } = zondy.cesium
    const { IGSFeatureLayerUtil } = zondy.cesium.util

    // 初始化地图
    function init() {
      //创建切换Cesium版本的按钮
      createChangeTab()
      // 初始化地图视图
      initView()
      // 蓝黑版深色地图
      addBlueImage()
      // 添加要素图层
      addIGSFeatureLayer()
    }

    // 初始二维地图
    function initView() {
      // 初始化地图视图对象
      sceneView = new SceneView({
        // 视图id
        viewId: 'mapgis-3d-viewer',
        // 图层管理容器
        map: map
      })
      viewer = sceneView.getInnerView()
    }

    // 蓝黑版深色地图
    function addBlueImage() {
      let blueImage = new zondy.cesium.UrlTemplateImageryProvider({
        url: 'https://map.geoq.cn/arcgis/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}',
        tilingScheme: new Cesium.WebMercatorTilingScheme(),
        maximumLevel: 18
      })
      viewer.imageryLayers.addImageryProvider(blueImage)
    }

    // 添加要素图层
    async function addIGSFeatureLayer() {
      // 参考API: http://webclient.smaryun.com/static/modules/common/api/common-mapgis/UniqueValueRenderer.html
      const renderer_polygon = new UniqueValueRenderer({
        // 分段字段名
        field: 'NAME',
        // 默认符号样式
        // 参考API: http://webclient.smaryun.com/static/modules/common/api/common-mapgis/SimpleFillSymbol.html
        defaultSymbol: new SimpleFillSymbol({
          // 填充颜色
          color: '#78B3DE99',
          // 外边线样式
          // 参考API: http://webclient.smaryun.com/static/modules/common/api/common-mapgis/SimpleLineSymbol.html
          outline: new SimpleLineSymbol({
            // 外边线样式
            color: '#78B3DE',
            // 外边线宽度
            width: 2
          })
        }),
        // 单值信息
        uniqueValueInfos: [
          {
            value: '襄阳市',
            symbol: new SimpleFillSymbol({
              color: '#78B3DE99',
              outline: {
                color: '#78B3DE',
                width: 2.0
              }
            })
          },
          {
            value: '武汉市',
            symbol: new SimpleFillSymbol({
              color: '#2578B499',
              outline: {
                color: '#2578B4',
                width: 2.0
              }
            })
          },
          {
            value: '黄冈市',
            symbol: new SimpleFillSymbol({
              color: '#6A3D9B99',
              outline: {
                color: '#6A3D9B',
                width: 2.0
              }
            })
          },
          {
            value: '黄石市',
            symbol: new SimpleFillSymbol({
              color: '#9FC5DA99',
              outline: {
                color: '#9FC5DA',
                width: 2.0
              }
            })
          },
          {
            value: '宜昌市',
            symbol: new SimpleFillSymbol({
              color: '#82F7FE99',
              outline: {
                color: '#82F7FE',
                width: 2.0
              }
            })
          },
          {
            value: '孝感市',
            symbol: new SimpleFillSymbol({
              color: '#8287F799',
              outline: {
                color: '#8287F7',
                width: 2.0
              }
            })
          },
          {
            value: '十堰市',
            symbol: new SimpleFillSymbol({
              color: '#4CA12E99',
              outline: {
                color: '#4CA12E',
                width: 2.0
              }
            })
          },
          {
            value: '荆州市',
            symbol: new SimpleFillSymbol({
              color: '#B2DF8A99',
              outline: {
                color: '#B2DF8A',
                width: 2.0
              }
            })
          },
          {
            value: '荆门市',
            symbol: new SimpleFillSymbol({
              color: '#F17D3099',
              outline: {
                color: '#F17D30',
                width: 2.0
              }
            })
          },
          {
            value: '天门市',
            symbol: new SimpleFillSymbol({
              color: '#E4432D99',
              outline: {
                color: '#E4432D',
                width: 2.0
              }
            })
          },
          {
            value: '仙桃市',
            symbol: new SimpleFillSymbol({
              color: '#F2999899',
              outline: {
                color: '#F29998',
                width: 2.0
              }
            })
          },
          {
            value: '咸宁市',
            symbol: new SimpleFillSymbol({
              color: '#F8BF6F99',
              outline: {
                color: '#F8BF6F',
                width: 2.0
              }
            })
          },
          {
            value: '潜江市',
            symbol: new SimpleFillSymbol({
              color: '#A6CEE399',
              outline: {
                color: '#A6CEE3',
                width: 2.0
              }
            })
          },
          {
            value: '鄂州市',
            symbol: new SimpleFillSymbol({
              color: '#CAB2D799',
              outline: {
                color: '#CAB2D7',
                width: 2.0
              }
            })
          },
          {
            value: '随州市',
            symbol: new SimpleFillSymbol({
              color: '#ABB71999',
              outline: {
                color: '#ABB719',
                width: 2.0
              }
            })
          },
          {
            value: '恩施市',
            symbol: new SimpleFillSymbol({
              color: '#F2225F99',
              outline: {
                color: '#F2225F',
                width: 2.0
              }
            })
          },
          {
            value: '神农架林区',
            symbol: new SimpleFillSymbol({
              color: '#8E22FA99',
              outline: {
                color: '#8E22FA',
                width: 2.0
              }
            })
          }
        ]
      })
      // 创建区要素图层
      featureLayerPolygon = new IGSFeatureLayer({
        // 服务基地址
        url: 'http://webclient.smaryun.com:8089/igs/rest/services/Map/湖北省4326/FeatureServer',
        // 指定图层id
        sublayerId: '0',
        // 设置渲染样式-单值专题图
      })
      const featureSet_polygon = await featureLayerPolygon.queryFeatures()
      const features_polygon = featureSet_polygon.features
      RendererUtil.updateRenderer(features_polygon, renderer_polygon)
      const primitives_polygon = IGSFeatureLayerUtil.toPrimitive(features_polygon, {
        viewer
      })
      for (let i = 0; i < primitives_polygon.length; i++) {
        viewer.scene.primitives.add(primitives_polygon[i])
      }

      const renderer_line = new SimpleRenderer({
        // 线样式
        symbol: new SimpleLineSymbol({
          // 外边线颜色
          color: new Color(1, 0, 255),
          // 外边线宽度
          width: 2
        })
      })
      // 创建线要素图层
      featureLayerLine = new IGSFeatureLayer({
        // 服务基地址
        url: 'http://webclient.smaryun.com:8089/igs/rest/services/Map/湖北省4326/FeatureServer',
        // 指定图层id
        sublayerId: '2-5',
      })
      // 修改要素默认查询数量为100000
      const featureSet_line = await featureLayerLine.queryFeatures({
        resultRecordCount: 100000
      })
      const features_line = featureSet_line.features
      RendererUtil.updateRenderer(features_line, renderer_line)
      const primitives_line = IGSFeatureLayerUtil.toPrimitive(features_line, {
        viewer
      })
      for (let i = 0; i < primitives_line.length; i++) {
        viewer.scene.primitives.add(primitives_line[i])
      }

      const renderer_point = new SimpleRenderer({
        // 因为该数据的几何类型为区，因此设置区样式
        symbol: new SimpleMarkerSymbol({
          // 半径
          size: 20,
          // 填充颜色
          color: new Color(211, 112, 34),
          // 外边线样式
          outline: new SimpleLineSymbol({
            // 外边线颜色
            color: new Color(221, 0, 123),
            // 外边线宽度
            width: 2
          })
        })
      })
      // 创建点要素图层
      featureLayerPoint = new IGSFeatureLayer({
        // 服务基地址
        url: 'http://webclient.smaryun.com:8089/igs/rest/services/Map/湖北省4326/FeatureServer',
        // 指定图层id
        sublayerId: 5,
      })
      const featureSet_point = await featureLayerPoint.queryFeatures()
      const features_point = featureSet_point.features
      RendererUtil.updateRenderer(features_point, renderer_point)
      const primitives_point = IGSFeatureLayerUtil.toPrimitive(features_point, {
        viewer
      })
      for (let i = 0; i < primitives_point.length; i++) {
        viewer.scene.primitives.add(primitives_point[i])
      }
    }

  </script>
</head>

<body onload="init();">
  <div id="mapgis-3d-viewer" style="width: 100%; height: 100%"></div>
</body>
</html>
