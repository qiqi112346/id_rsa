<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>MapGIS要素服务(gdbp)-混合接口</title>
    <!--加载不同版本Cesium库-->
    <script src="http://webclient.smaryun.com/static/libs/loadCesium.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>

    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"
    />
    <!--示例公共样式-->
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/css/style.css"
    />
    <script type="text/javascript">
      //使用严格模式
      'use strict'
      // 定义二维视图的主要类
      let map, viewer, sceneView
      // 获取构造函数
      const { layer, Color, renderer, util, cesium } = zondy
      const { RendererUtil } = util
      const { IGSFeatureLayer } = layer
      const { SimpleRenderer } = renderer
      const { IGSFeatureLayerUtil, initializeOptions } = cesium.util
      const { SceneView, MapGISMapServerImageryProvider } = cesium

      // 初始化地图
      function init() {
        //创建切换Cesium版本的按钮
        createChangeTab()
        // 初始化地图视图
        initView()
        // 添加要素图层
        addIGSFeatureLayer()
      }

      // 初始二维地图
      function initView() {
        // 初始化地图视图对象
        sceneView = new SceneView({
          // 视图id
          viewId: 'mapgis-3d-viewer',
          // 图层管理容器
          map: map
        })
        viewer = sceneView.getInnerView()
      }

      // 添加要素图层
      async function addIGSFeatureLayer() {
        // 服务器端渲染
        const layer1 = new IGSFeatureLayer({
          url: 'http://192.168.82.91:8089/igs/rest/mrfs/layer',
          gdbp: 'gdbp://MapGISLocalPlus/湖北省/ds/行政区/sfcls/湖北省市级区划',
          renderMode: 'server'
        })
        layer1.load().then(() => {
          const options = initializeOptions(layer1)
          const privider = new MapGISMapServerImageryProvider(options)
          viewer.imageryLayers.addImageryProvider(privider)
        })
        // 客户端渲染
        const layer2 = new IGSFeatureLayer({
          url: 'http://192.168.82.91:8089/igs/rest/mrfs/layer',
          gdbp: 'gdbp://MapGISLocalPlus/湖北省/ds/行政区/sfcls/湖北省市级区划',
          serverFilter: {
            where: `NAME = '武汉市'`
          },
          renderMode: 'client',
          renderer: new SimpleRenderer({
            symbol: {
              type: 'simple-fill',
              color: '#ff0000',
              outline: {
                type: 'simple-line',
                color: '#00ff00'
              }
            }
          })
        })

        layer2.load().then(() => {
          layer2.queryFeatures().then((featureSet) => {
            const features = featureSet.features
            RendererUtil.updateRenderer(features, layer2.renderer)
            const primitives = IGSFeatureLayerUtil.toPrimitive(features, {
              viewer
            })
            for (let i = 0; i < primitives.length; i++) {
              viewer.scene.primitives.add(primitives[i])
            }
          })
        })
      }
    </script>
  </head>

  <body onload="init();">
    <div id="mapgis-3d-viewer" style="width: 100%; height: 100%"></div>
  </body>
</html>
