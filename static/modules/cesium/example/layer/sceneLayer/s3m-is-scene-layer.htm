<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no" />
    <title>加载S3M模型</title>
    <!--加载不同版本Cesium库-->
    <script src="http://webclient.smaryun.com/static/libs/loadCesium.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"/>
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <script>
      'use strict'
      //定义三维视图的主要类
      let map, view, viewer, tileSet

      const { Map } = zondy
      const { SceneView } = zondy.cesium
      const { ISSceneLayer, WMTSLayer } = zondy.layer

      //地图初始化函数
      function init() {
        //创建切换Cesium版本的按钮
        createChangeTab()     
        //初始化球体
        initViewer()
        //加载数据
        addLayer()
      }

      //地图初始化函数
      async function addLayer() {
        const options = {
          // 是否显示s3m模型
          isVisible: true,
          opacity: 1,
          context: viewer.scene._context,
        }
        // s3m服务基config地址
        const url =
          "//www.supermapol.com/realspace/services/3D-BIMBaoZha-2/rest/realspace/datas/ModelEdit_1@DatasourceYYD007/config"
        // 添加S3MTileSet
        tileSet = await zondy.cesium.S3MTileset.fromUrl(url, options)
        const tileLayer = viewer.scene.primitives.add(tileSet)
        tileLayer.readyPromise.then(() => {
          const boundingSpheres = Cesium.BoundingSphere.fromRectangle3D(
            tileSet.rectangle
          )
          function zoomToM3DLayer(boundingSphere, options, innerView) {
            const duration = options.duration ? options.duration : 0
            const orientation = options.orientation
              ? options.orientation
              : new Cesium.HeadingPitchRange(
                  0.0,
                  -0.5,
                  boundingSphere.radius * 2.5
                )
            innerView.scene.camera.flyToBoundingSphere(boundingSphere, {
              duration,
              offset: orientation,
            })
            innerView.scene.camera.lookAtTransform(Cesium.Matrix4.IDENTITY)
          }
          zoomToM3DLayer(boundingSpheres, options, viewer)
        })
      }

      // 删除图层
      function deleteLayer() {
        viewer.scene.primitives.remove(tileSet)
      }

      //初始化球体
      function initViewer() {
        //初始化图层管理容器
        map = new Map()
        //初始化地图视图对象
        view = new SceneView({
          //视图id
          viewId: 'mapgis-3d-viewer',
          //图层管理容器
          map: map
        })
        //设置球体初始透明度
        viewer = view.getInnerView()
        // viewer.scene.globe.show = false
      }
    </script>
  </head>

  <body onload="init()">
    <div id="mapgis-3d-viewer" style="position: absolute; width: 100%; height: 100%"></div>
  </body>
</html>
