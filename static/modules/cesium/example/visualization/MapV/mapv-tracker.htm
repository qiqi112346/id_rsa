<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no"/>
    <title>动态轨迹</title>
    <!--加载不同版本Cesium库-->
    <script src="http://webclient.smaryun.com/static/libs/loadCesium.js"></script>
    <!--引入mapv-->
    <script type="text/javascript" src="http://webclient.smaryun.com/static/libs/cdn/mapv/mapv.min.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>

    <!--proj4-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/proj4/proj4.js"></script>
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"/>
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <script>
      'use strict'
      // 定义三维视图的主要类
      let viewer = null
      let sceneViewer = null
      let map = null

      function initMapVData() {
        //先定位到武汉，然后请求数据渲染
        let center = Cesium.Cartesian3.fromDegrees(
          114.321317,
          30.598428,
          100000.0
        )
        viewer.scene.camera.flyTo({
          destination: center,
          duration: 1,
          complete: () => {
            httpGetPromise(
              'http://webclient.smaryun.com:8200/Vector/txt/tracker/wuhan-car.txt'
            ).then((rs) => {
              let data = []
              let timeData = []
              rs = rs.split('\n')
              let maxLength = 0
              for (let i = 0; i < rs.length; i++) {
                let item = rs[i].split(',')
                let coordinates = []
                if (item.length > maxLength) {
                  maxLength = item.length
                }
                for (let j = 0; j < item.length; j += 2) {
                  if (item.length === 1) {
                    continue
                  }
                  coordinates.push(
                    proj4('EPSG:3857', 'EPSG:4326', [item[j], item[j + 1]])
                  )
                  timeData.push({
                    geometry: {
                      type: 'Point',
                      coordinates: proj4('EPSG:3857', 'EPSG:4326', [
                        item[j],
                        item[j + 1]
                      ])
                    },
                    count: 1,
                    time: j
                  })
                }
                data.push({
                  geometry: {
                    type: 'LineString',
                    coordinates: coordinates
                  }
                })
              }
              // 构建对应的dataset
              let dataSet1 = new mapv.DataSet(data)
              // 设置对应的参数
              // https://github.com/huiyan-fe/mapv/blob/master/API.md
              let options1 = {
                context: '2d', //cesium必须设置画布为2d
                strokeStyle: 'rgba(53,57,255,0.5)',
                coordType: 'bd09mc',
                // globalCompositeOperation: 'lighter',
                shadowColor: 'rgba(53,57,255,0.2)',
                shadowBlur: 3,
                lineWidth: 3.0,
                draw: 'simple'
              }
              // 声明cesium的mapv图层并将其显示到三维球上
              let layer1 = new zondy.layer.MapVLayer({
                data: dataSet1,
                mapVOptions: options1
              })

              map.add(layer1)
              // 构建对应的dataset
              let dataSet2 = new mapv.DataSet(timeData)
              // https://github.com/huiyan-fe/mapv/blob/master/API.md
              let options2 = {
                context: '2d',
                fillStyle: 'rgba(255, 250, 250, 0.2)',
                coordType: 'bd09mc',
                globalCompositeOperation: 'lighter',
                size: 1.5,
                animation: {
                  stepsRange: {
                    start: 0,
                    end: 100
                  },
                  trails: 3,
                  duration: 5
                },
                draw: 'simple'
              }
              // 声明cesium的mapv图层并将其显示到三维球上
              let layer2 = new zondy.layer.MapVLayer({
                data: dataSet2,
                mapVOptions: options2
              })

              map.add(layer2)
            })
          }
        })
      }

      function init() {
        //初始化图层管理容器
        map = new zondy.Map()
        //初始化地图视图对象
        sceneViewer = new zondy.cesium.SceneView({
          //视图id
          viewId: 'mapgis-3d-viewer',
          //图层管理容器
          map: map
        })
        //创建切换Cesium版本的按钮
        createChangeTab()
        viewer = sceneViewer.getInnerView()
        // 添加天地图
        const tdtUrl = 'https://t{s}.tianditu.gov.cn/';
        // 服务负载子域
        const subdomains=['0','1','2','3','4','5','6','7'];
        // 叠加影像服务
        const tdtProvider = new zondy.cesium.UrlTemplateImageryProvider({
            url: tdtUrl + 'DataServer?T=img_w&x={x}&y={y}&l={z}&tk=' + getTDTToken(),
            subdomains: subdomains,
            tilingScheme : new Cesium.WebMercatorTilingScheme(),
            maximumLevel : 18
        });
        viewer.imageryLayers.addImageryProvider(tdtProvider)
        initMapVData()
      }

      // 发送请求获取数据
      function httpGetPromise(url) {
        return new Promise(function (resolve, reject) {
          const handler = function () {
            if (this.readyState !== 4) {
              return
            }
            if (this.status === 200) {
              resolve(this.response)
            } else {
              reject(new Error(this.statusText))
            }
          }
          const client = new XMLHttpRequest()
          client.open('GET', url)
          client.onreadystatechange = handler
          client.responseType = 'text'
          client.setRequestHeader('Accept', 'application/json')
          client.send()
        })
      }
    </script>
  </head>

  <body onload="init()">
    <div id="mapgis-3d-viewer"></div>
  </body>
</html>
