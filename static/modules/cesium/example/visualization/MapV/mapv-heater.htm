<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no"/>
    <title>热力图</title>
    <!--加载不同版本Cesium库-->
    <script src="http://webclient.smaryun.com/static/libs/loadCesium.js"></script>
    <!--引入mapv-->
    <script type="text/javascript" src="http://webclient.smaryun.com/static/libs/cdn/mapv/mapv.min.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>

    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"/>
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <script>
      'use strict'
      // 定义三维视图的主要类
      let viewer = null
      let sceneViewer = null
      let map = null

      function initMapVData() {
        let randomCount = 1000
        let data = []
        let citys = [
          '北京',
          '天津',
          '上海',
          '重庆',
          '石家庄',
          '太原',
          '呼和浩特',
          '哈尔滨',
          '长春',
          '沈阳',
          '济南',
          '南京',
          '合肥',
          '杭州',
          '南昌',
          '福州',
          '郑州',
          '武汉',
          '长沙',
          '广州',
          '南宁',
          '西安',
          '银川',
          '兰州',
          '西宁',
          '乌鲁木齐',
          '成都',
          '贵阳',
          '昆明',
          '拉萨',
          '海口'
        ]
        // 构造数据 将数据处理成对应的geojson格式
        while (randomCount--) {
          let cityCenter = mapv.utilCityCenter.getCenterByCityName(
            citys[parseInt(Math.random() * citys.length)]
          )
          data.push({
            geometry: {
              type: 'Point',
              coordinates: [
                cityCenter.lng - 2 + Math.random() * 4,
                cityCenter.lat - 2 + Math.random() * 4
              ]
            },
            count: 30 * Math.random(),
            time: 100 * Math.random()
          })
        }

        // 构建对应的dataset
        let dataSet = new mapv.DataSet(data)

        // 设置对应的参数
        // https://github.com/huiyan-fe/mapv/blob/master/API.md
        let options = {
          context: '2d', //cesium必须设置画布为2d
          cesium: {
            postRender: true,
            postRenderFrame: 10
          },
          size: 13,
          gradient: {
            0.25: 'rgb(0,0,255)',
            0.55: 'rgb(0,255,0)',
            0.85: 'yellow',
            1.0: 'rgb(255,0,0)'
          },
          max: 60,
          animation: {
            type: 'time',
            stepsRange: {
              start: 0,
              end: 100
            },
            trails: 10,
            duration: 4
          },
          draw: 'heatmap' // 绘制热力图
        }
        // 声明cesium的mapv图层并将其显示到三维球上
        let layer = new zondy.layer.MapVLayer({
          data: dataSet,
          mapVOptions: options
        })

        map.add(layer)
      }

      function init() {
        //初始化图层管理容器
        map = new zondy.Map()
        //初始化地图视图对象
        sceneViewer = new zondy.cesium.SceneView({
          //视图id
          viewId: 'mapgis-3d-viewer',
          //图层管理容器
          map: map
        })
        //创建切换Cesium版本的按钮
        createChangeTab()
        viewer = sceneViewer.getInnerView()
        // 添加天地图
        const tdtUrl = 'https://t{s}.tianditu.gov.cn/';
        // 服务负载子域
        const subdomains=['0','1','2','3','4','5','6','7'];
        // 叠加影像服务
        const tdtProvider = new zondy.cesium.UrlTemplateImageryProvider({
            url: tdtUrl + 'DataServer?T=img_w&x={x}&y={y}&l={z}&tk=' + getTDTToken(),
            subdomains: subdomains,
            tilingScheme : new Cesium.WebMercatorTilingScheme(),
            maximumLevel : 18
        });
        viewer.imageryLayers.addImageryProvider(tdtProvider)
        initMapVData()
      }
    </script>
  </head>

  <body onload="init()">
    <div id="mapgis-3d-viewer"></div>
  </body>
</html>
