<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no"/>
    <title>分段专题图</title>
    <!--加载不同版本Cesium库-->
    <script src="http://webclient.smaryun.com/static/libs/loadCesium.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"/>
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <script>
      'use strict'
      //定义三维视图的主要类
      let map, sceneView, viewer, dataSource, currentType, renderer

      //地图初始化函数
      function init() {
        //初始化三维球体
        initViewer()
        //创建切换Cesium版本的按钮
        createChangeTab()
        //加载天地图
        addTDT()
        //设置数据源
        setDataSource()
        //设置渲染类型
        setRenderType()
        //添加专题图
        addThemeLayer()
      }

      //初始化三维球体
      function initViewer() {
        //初始化图层管理容器
        map = new zondy.Map()
        //初始化地图视图对象
        sceneView = new zondy.cesium.SceneView({
          //视图id
          viewId: 'mapgis-3d-viewer',
          //图层管理容器
          map: map
        })
        //获取视图对象
        viewer = sceneView.getInnerView()
        //处理锯齿化
        if (Cesium.FeatureDetection.supportsImageRenderingPixelated()) {
          //判断是否支持图像渲染像素化处理
          viewer.resolutionScale = window.devicePixelRatio
        }
        //开启抗锯齿
        viewer.scene.fxaa = true
        viewer.scene.postProcessStages.fxaa.enabled = true
      }

      //加载天地图
      function addTDT() {
        let TDTLayer = new zondy.layer.WMTSLayer({
          // 加载经纬度的影像地图
          url: 'http://t6.tianditu.gov.cn/img_c/wmts',
          // 天地图必须加token，且token名为tk
          tokenKey: 'tk',
          // token请在天地图官网申请
          tokenValue: getTDTToken()
        })
        map.add(TDTLayer)
      }

      //设置数据源
      function setDataSource() {
        //设置数据源
        dataSource = {}
        dataSource.geoJSONData = {
          point: 'http://webclient.smaryun.com:8200/Vector/json/metroStation.json',
          line: 'http://webclient.smaryun.com:8200/Vector/json/metro.json',
          area: 'http://webclient.smaryun.com:8200/Vector/json/populationSizeGeoJson_2017.json'
        }
      }

      //设置渲染类型
      function setRenderType() {
        //设置当前渲染数据的类型
        currentType = 'geojson'
        //设置专题图渲染类型
        renderer = {
          type: 'class-breaks',
          field: 'zrk',
          normalizationType: 'percent-of-total',
          defaultSymbol: {
            type: 'polygon-3d',
            symbolLayers: {
              //渲染为面
              type: 'extrude',
              //开启阴影
              castShadows: true,
              //填充材料
              material: {
                color: new Cesium.Color.fromCssColorString('#8287F7').withAlpha(
                  0.6
                )
              },
              //边界线
              outline: {
                color: new Cesium.Color.fromCssColorString('#8287F7'),
                width: 1.0
              },
              //面累加高度值
              sizeField: 'czrk',
              //面累加高度比例
              sizeRatio: 100
            }
          },
          defaultLabel: '其他',
          classBreakInfos: [
            {
              maxValue: 0.05,
              minValue: 0,
              symbol: {
                type: 'polygon-3d',
                symbolLayers: {
                  type: 'extrude',
                  material: {
                    color: new Cesium.Color.fromCssColorString(
                      '#82F7FE'
                    ).withAlpha(0.6)
                  },
                  outline: {
                    color: new Cesium.Color.fromCssColorString('#82F7FE'),
                    width: 1.0
                  },
                  sizeField: 'czrk',
                  sizeRatio: 100
                }
              }
            }
          ]
        }
      }

      //渲染专题图
      function addThemeLayer() {
        // 清空所有geojson图层
        viewer.scene.layers.removeAllGeojsonLayers()

        let options = {
          //自动刷新
          autoReset: true,
          //加载全部要素
          loadAll: true,
          //图层下标回调
          getDocLayerIndexes: function (indexs) {},
          //加载图层回调
          loaded: function (layerInfo) {
            console.log('沙盒回调loaded获取到的layerInfo', layerInfo)
          },
          //渲染器
          renderer: renderer
        }
        let { geoJSONData } = dataSource
        let keys = Object.keys(geoJSONData)
        keys.forEach((key) => {
          let url = geoJSONData[key]
          options.url = url
          //添加geojson图层
          viewer.scene.layers.appendGeojsonLayer(url, options)
        })
      }
    </script>
  </head>

  <body onload="init()">
    <div id="mapgis-3d-viewer"></div>
  </body>
</html>
