<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no"/>
    <title>自定义顶点着色器</title>
    <!--加载不同版本Cesium库-->
    <script src="http://webclient.smaryun.com/static/libs/loadCesium.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"/>
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <script>
      'use strict'
      //定义三维视图的主要类
      let map, sceneView

      //地图初始化函数
      function init() {
        //初始化三维球体
        initViewer()
        //创建切换Cesium版本的按钮
        createChangeTab()
        //添加天地图
        addTDT()
        //添加M3D
        addM3DModelCacheLayer()
      }

      //初始化三维球体
      function initViewer() {
        //初始化图层管理容器
        map = new zondy.Map()
        //初始化地图视图对象
        sceneView = new zondy.cesium.SceneView({
          //视图id
          viewId: 'mapgis-3d-viewer',
          //图层管理容器
          map: map
        })
      }

      //添加天地图
      function addTDT() {
        //图层名称，vec：矢量底图、img：卫星影像底图、cva: 矢量注记图层（中文）、eva: 矢量注记图层（英文）、cia: 注记图层（中文）、eia: 注记图层（英文）、ter: 地形晕渲底图、cta: 注记（中文）、ibo: 全球国界
        let TDTLayer = new zondy.layer.WMTSLayer({
          // 加载经纬度的影像地图
          url: 'http://t6.tianditu.gov.cn/vec_c/wmts',
          // 天地图必须加token，且token名为tk
          tokenKey: 'tk',
          // token请在天地图官网申请
          tokenValue: getTDTToken()
        })
        map.add(TDTLayer)
      }

      //添加M3D
      function addM3DModelCacheLayer() {
        let url =
          'http://webclient.smaryun.com:8200/3DData/ModelCache/M3D/1.0/ZondyFaceModels/ZondyFaceModels.mcj'
        let M3DLayer = new zondy.layer.M3DModelCacheLayer({
          url: url,
          // 初始化参数
          extensionOptions: {
            // 开启自动跳转
            autoReset: true
          }
        })
        map.add(M3DLayer)
        // 图层加载完毕
        M3DLayer.on('layerview-created', function (result) {
          //获取图层
          let tileSet = sceneView.getInnerLayer(result.layer)
          //确保对象存在
          if (tileSet) {
            //更新你的shader
            // 获取Cesium版本号
            let currentCesiumVersion = localStorage.getItem('currentCesiumVersion')
            if (currentCesiumVersion === '10.7.2.10') {
              tileSet.customShader = new Cesium.CustomShader({
                //顶点着色器代码
                vertexShaderText:
                //参考1.87以上版本写法，必须重写vertexMain方法
                //frameNumber：帧时间，顶点的oid，position：顶点坐标
                  'void vertexMain(float frameNumber, vec4 oid, inout vec4 position){\n' +
                  //如果高度超过34米，抬高100米
                  '  if(position.y > -34.0) {\n' +
                  //抬高100米
                  '    position.y += 100.0;\n' +
                  '  }\n' +
                  '}\n'
              })
            } else {
              // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium/CustomShader.html
              tileSet.customShader = new Cesium.CustomShader({
                //顶点着色器代码
                vertexShaderText: `
                void vertexMain(VertexInput vsInput, inout czm_modelVertexOutput vsOutput) {
                  // 将顶点抬高100米
                  if (vsOutput.positionMC.y > -34.0) {
                    vsOutput.positionMC.y += 100.0;
                  }
                }
                `
              })
            }
          }
        })
      }
    </script>
  </head>

  <body onload="init()">
    <div id="mapgis-3d-viewer"></div>
  </body>
</html>
