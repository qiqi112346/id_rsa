<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no"/>
    <title>自定义着色器(实时更新)</title>
    <!--加载不同版本Cesium库-->
    <script src="http://webclient.smaryun.com/static/libs/loadCesium.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>

    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"/>
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <script>
      'use strict'
      //定义三维视图的主要类
      let map, sceneView

      //地图初始化函数
      function init() {
        //初始化三维球体
        initViewer()
        //创建切换Cesium版本的按钮
        createChangeTab()
        //添加天地图
        addTDT()
        //添加M3D
        addM3DModelCacheLayer()
      }

      //初始化三维球体
      function initViewer() {
        //初始化图层管理容器
        map = new zondy.Map()
        //初始化地图视图对象
        sceneView = new zondy.cesium.SceneView({
          //视图id
          viewId: 'mapgis-3d-viewer',
          //图层管理容器
          map: map
        })
      }

      //添加天地图
      function addTDT() {
        let TDTLayer = new zondy.layer.WMTSLayer({
          // 加载经纬度的影像地图
          url: 'http://t6.tianditu.gov.cn/vec_c/wmts',
          // 天地图必须加token，且token名为tk
          tokenKey: 'tk',
          // token请在天地图官网申请
          tokenValue: getTDTToken()
        })
        map.add(TDTLayer)
      }

      //添加M3D
      function addM3DModelCacheLayer() {
        //加载M3D模型
        let url =
          'http://webclient.smaryun.com:8200/3DData/ModelCache/M3D/2.0/武汉建筑轮廓白/武汉建筑轮廓白.mcj'
        let M3DLayer = new zondy.layer.M3DModelCacheLayer({
          url: url,
          // 初始化参数
          extensionOptions: {
            // 开启自动跳转
            autoReset: true
          }
        })
        map.add(M3DLayer)
        // 图层加载完毕
        M3DLayer.on('layerview-created', function (result) {
          //获取图层
          let tileSet = sceneView.getInnerLayer(result.layer)
          //确保对象存在
          if (tileSet) {
            //更新你的shader
            // 获取Cesium版本号
            let currentCesiumVersion = localStorage.getItem('currentCesiumVersion')
            if (currentCesiumVersion === '10.7.2.10') {
              tileSet.customShader = new Cesium.CustomShader({
                fragmentShaderText:
                //参考1.87以上版本写法，必须重写fragmentMain方法
                //position：顶点坐标，frameNumber：帧时间，顶点的oid，fragColor：顶点颜色
                  'void fragmentMain(vec4 position, float frameNumber, vec4 oid, inout vec4 fragColor){\n' +
                  //获取当前顶点高度，注意这里的高度是相对于模型原点的，具体高度范围，请从模型的外包盒中获取
                  //这份数据最低点距离制图原点有180米，最高点离原点有140米，因此加上180，使最小值为0
                  '   float currentHeight = position.y + 180.0;\n' +
                  //更新渐变颜色
                  '   fragColor += vec4(51.0 / 255.0, 153.0 / 255.0, 1.0, 1.0) * currentHeight / 320.0;\n' +
                  //高度在260到320之间，增加高亮
                  '   if(currentHeight > 260.0) {\n' +
                  '       fragColor *= 1.0 + 0.75 * (currentHeight - 260.0) / 60.0;\n' +
                  '   }\n' +
                  //根据当前帧时间(czm_frameNumber)，获取当前顶点所处的周期
                  '   float time = fract(frameNumber / 360.0);\n' +
                  //获取当前高度占整体高度的百分比，0到1之间的值
                  //clamp参考https://learn.microsoft.com/zh-cn/previous-versions/hh308289(v=vs.120)
                  '   currentHeight = clamp(currentHeight / 320.0, 0.0, 1.0);\n' +
                  //处理周期
                  '   time = abs(time - 0.5) * 2.0;\n' +
                  //根据高度和周期计算光圈
                  '   float circle = step(0.005, abs(currentHeight - time));\n' +
                  //更新颜色
                  '   fragColor.rgb += fragColor .rgb * (1.0 - circle);\n' +
                  '}\n'
              })
            } else {
              // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium/CustomShader.html
              tileSet.customShader = new Cesium.CustomShader({
                fragmentShaderText: `
                void fragmentMain(FragmentInput fsInput, inout czm_modelMaterial material)
                {
                  // 模型的底部最低高度，有可能为负值，表示有一部分模型在水平面以下
                  float bottomHeight = -190.0;
                  // 模型的顶部最高高度
                  float topHeight = 110.0;
                  // 光圈上下移动范围
                  float lightRange = topHeight - bottomHeight;
                  // 当前顶点距离底部高度
                  float currentHeight = fsInput.attributes.positionMC.y - bottomHeight;
                  // 当前光圈运行速度
                  float circleTime = fract(czm_frameNumber / lightRange);
                  circleTime = abs(circleTime - 0.5) * 2.0;
                  // 当前光圈位置百分比
                  float circlePercent = clamp(currentHeight / lightRange, 0.0, 1.0);
                  // 当前运行周期内，顶点光照强度
                  float positionLight = step(0.005, abs(circlePercent - circleTime));
                  // 按高度进行颜色渐变
                  material.diffuse = vec3(0.0, 0.0, (currentHeight / lightRange) * 0.8);
                  // 修改当前顶点光照强度，来显示光圈
                  material.diffuse += vec3(max(0.0, 1.0 - positionLight));
                }
                `,
              })
            }
          }
        })
      }
    </script>
  </head>

  <body onload="init()">
    <div id="mapgis-3d-viewer"></div>
  </body>
</html>
