<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no"/>
    <title>散点图-世界GPS</title>
    <!--加载不同版本Cesium库-->
    <script src="http://webclient.smaryun.com/static/libs/loadCesium.js"></script>
    <!--引入echarts-->
    <script type="text/javascript" src="http://webclient.smaryun.com/static/libs/cdn/echarts/echarts.min-5.0.js"></script>
    <!--配合echarts引入文件-->
    <script type="text/javascript" src="http://webclient.smaryun.com/static/libs/cdn/echarts/echartsgl.min.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>

    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"/>
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <script>
      'use strict'
      //定义三维视图的主要类
      let map, sceneView, viewer
      //echarts实例
      let innerLayer = null
      // 数据一共230片
      let CHUNK_COUNT = 230

      //初始化
      function init() {
        // 初始化球体
        initViewer()
        //创建切换Cesium版本的按钮
        createChangeTab()
        // echarts
        initEcharts()
      }

      // 初始化球体
      function initViewer() {
        //初始化图层管理容器
        map = new zondy.Map()
        //初始化地图视图对象
        sceneView = new zondy.cesium.SceneView({
          //视图id
          viewId: 'mapgis-3d-viewer',
          //图层管理容器
          map: map
        })
        //获取视图对象
        viewer = sceneView.getInnerView()
        // 添加天地图
        addTDTLayer()
      }

      function addTDTLayer() {
        // 添加天地图
        const tdtUrl = 'https://t{s}.tianditu.gov.cn/';
        // 服务负载子域
        const subdomains=['0','1','2','3','4','5','6','7'];
        // 叠加影像服务
        const tdtProvider = new zondy.cesium.UrlTemplateImageryProvider({
            url: tdtUrl + 'DataServer?T=img_w&x={x}&y={y}&l={z}&tk=' + getTDTToken(),
            subdomains: subdomains,
            tilingScheme : new Cesium.WebMercatorTilingScheme(),
            maximumLevel : 18
        });
        viewer.imageryLayers.addImageryProvider(tdtProvider)
      }

      //飞到指定视角
      function flyTo() {
        //飞到指定视角
        sceneView.flyTo({
          center: [114, 30, 10000000.0]
        })
      }

      // 循环请求对应的网络数据，数据格式是Int32Array,并解析对应的二级制流
      function fetchData(idx) {
        if (idx >= CHUNK_COUNT) {
          return
        }
        // 先执行的效果会更好一点
        fetchData(idx + 1)
        //http://echarts.baidu.com/examples/data/asset/data/gps/gps_19.bin
        let dataURL = `http://webclient.smaryun.com:8200/Vector/bin/gps/gps_${idx}.bin`
        httpGetPromise(dataURL).then((res) => {
          let rawData = new Int32Array(res)
          let data = new Float32Array(rawData.length)
          for (let i = 0; i < rawData.length; i += 2) {
            data[i] = rawData[i + 1] / 1e7
            data[i + 1] = rawData[i] / 1e7
          }
          innerLayer.chart.appendData({
            seriesIndex: 0,
            data: data
          })
        })
      }

      function initEcharts() {
        // options参数请参考百度echarts-options
        // https://echarts.apache.org/zh/option.html#title
        let option = {
          title: {
            text: 'OSM公开GPS轨迹（千万级）',
            left: 'center',
            textStyle: {
              color: '#fff'
            }
          },
          cesium: {
            roam: false
          },
          animation: false,
          postRender: true,
          series: [
            {
              name: '弱',
              type: 'scatterGL',
              progressive: 20000, // 一次渲染20000点
              coordinateSystem: 'cesium', // 设置cesium坐标系
              symbolSize: 1,
              zoomScale: 0.002,
              blendMode: 'lighter',
              largeThreshold: 50000,
              large: true,
              itemStyle: {
                color: 'rgb(20, 15, 2)'
              },
              postEffect: {
                enable: true
              },
              silent: true,
              dimensions: ['lng', 'lat'],
              data: new Float32Array() // 关键点： 数据必须处理成Float32Array格式，否则超出浏览器内存
            }
          ]
        }
        // 声明echarts图层并将其显示到三维球上
        const layer = new zondy.layer.EchartsLayer({
          echartsOptions: option
        })
        map.add(layer)
        //图层添加完毕事件
        layer.on('layerview-created', function (result) {
          innerLayer = sceneView.getInnerLayer(result.layer)
          fetchData(0)
          // 图层视图加载完毕之后，飞到指定视角
          flyTo()
        })
      }

      // 发送请求获取数据
      function httpGetPromise(url) {
        return new Promise(function (resolve, reject) {
          const handler = function () {
            if (this.readyState !== 4) {
              return
            }
            if (this.status === 200) {
              resolve(this.response)
            } else {
              reject(new Error(this.statusText))
            }
          }
          const client = new XMLHttpRequest()
          client.open('GET', url)
          client.onreadystatechange = handler
          // 数据类型arraybuffer
          client.responseType = 'arraybuffer'
          client.send()
        })
      }
    </script>
  </head>

  <body onload="init()">
    <div id="mapgis-3d-viewer"></div>
  </body>
</html>
