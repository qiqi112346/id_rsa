<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no"/>
    <title>散点图-微博签到</title>
    <!--加载不同版本Cesium库-->
    <script src="http://webclient.smaryun.com/static/libs/loadCesium.js"></script>
    <!--引入echarts-->
    <script type="text/javascript" src="http://webclient.smaryun.com/static/libs/cdn/echarts/echarts.min.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>

    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"/>
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <script>
      'use strict'
      // 定义三维视图的主要类
      let map, sceneView, viewer, layer

      //初始化
      function init() {
        // 初始化球体
        initViewer()
        //创建切换Cesium版本的按钮
        createChangeTab()
        // echarts
        initEcharts()
      }

      // 初始化球体
      function initViewer() {
        //初始化图层管理容器
        map = new zondy.Map()
        //初始化地图视图对象
        sceneView = new zondy.cesium.SceneView({
          //视图id
          viewId: 'mapgis-3d-viewer',
          //图层管理容器
          map: map
        })
        //获取视图对象
        viewer = sceneView.getInnerView()
        // 添加天地图
        addTDTLayer()
      }

      function addTDTLayer() {
        // 添加天地图
        const tdtUrl = 'https://t{s}.tianditu.gov.cn/';
        // 服务负载子域
        const subdomains=['0','1','2','3','4','5','6','7'];
        // 叠加影像服务
        const tdtProvider = new zondy.cesium.UrlTemplateImageryProvider({
            url: tdtUrl + 'DataServer?T=img_w&x={x}&y={y}&l={z}&tk=' + getTDTToken(),
            subdomains: subdomains,
            tilingScheme : new Cesium.WebMercatorTilingScheme(),
            maximumLevel : 18
        });
        viewer.imageryLayers.addImageryProvider(tdtProvider)
      }

      //echarts
      function initEcharts() {
        // options参数请参考百度echarts-options
        // https://echarts.apache.org/zh/option.html#title
        let grade = ['强', '中', '弱']
        //发送请求获取数据
        httpGetPromise(
          'http://webclient.smaryun.com:8200/Vector/json/weibo/weibo.json'
        ).then((weiboData) => {
          //数据处理后，得到所有坐标
          weiboData = weiboData.map(function (serieData) {
            let px = serieData[0] / 1000
            let py = serieData[1] / 1000
            let res = [[px, py]]
            for (let i = 2; i < serieData.length; i += 2) {
              let dx = serieData[i] / 1000
              let dy = serieData[i + 1] / 1000
              let x = px + dx
              let y = py + dy
              res.push([x.toFixed(2), y.toFixed(2), 1])
              px = x
              py = y
            }
            return res
          })

          let option = {
            cesium: {
              roam: true
            },
            animation: false,
            postRender: true,
            postRenderFrame: 10,
            coordinateSystem: 'cesium', // 设置cesium坐标系
            title: {
              text: '中国微博签到图',
              subtext: 'From MapGIS',
              sublink: 'http://www.smaryun.com',
              left: 'center',
              top: 'top',
              textStyle: {
                color: '#fff'
              }
            },
            tooltip: {},
            legend: {
              left: 'right',
              top: 'top',
              data: [grade[0], grade[1], grade[2]],
              textStyle: {
                color: '#ccc'
              }
            },
            series: [
              {
                name: grade[2],
                type: 'scatter',
                coordinateSystem: 'cesium', // 设置cesium坐标系
                symbolSize: 1,
                large: true,
                itemStyle: {
                  normal: {
                    shadowBlur: 2,
                    shadowColor: 'rgba(37, 140, 249, 0.8)',
                    color: 'rgba(37, 140, 249, 0.8)'
                  }
                },
                data: weiboData[0]
              },
              {
                name: grade[1],
                type: 'scatter',
                coordinateSystem: 'cesium', // 设置cesium坐标系
                symbolSize: 1,
                large: true,
                itemStyle: {
                  normal: {
                    shadowBlur: 2,
                    shadowColor: 'rgba(14, 241, 242, 0.8)',
                    color: 'rgba(14, 241, 242, 0.8)'
                  }
                },
                data: weiboData[1]
              },
              {
                name: grade[0],
                type: 'scatter',
                coordinateSystem: 'cesium', // 设置cesium坐标系
                symbolSize: 1,
                large: true,
                itemStyle: {
                  normal: {
                    shadowBlur: 2,
                    shadowColor: 'rgba(255, 255, 255, 0.8)',
                    color: 'rgba(255, 255, 255, 0.8)'
                  }
                },
                data: weiboData[2]
              }
            ]
          }
          // 声明cesium的echarts图层并将其显示到三维球上
          layer = new zondy.layer.EchartsLayer({
            echartsOptions: option
          })
          map.add(layer)
        })
      }

      // 发送请求获取数据
      function httpGetPromise(url) {
        return new Promise(function (resolve, reject) {
          const handler = function () {
            if (this.readyState !== 4) {
              return
            }
            if (this.status === 200) {
              resolve(this.response)
            } else {
              reject(new Error(this.statusText))
            }
          }
          const client = new XMLHttpRequest()
          client.open('GET', url)
          client.onreadystatechange = handler
          client.responseType = 'json'
          client.setRequestHeader('Accept', 'application/json')
          client.send()
        })
      }
    </script>
  </head>

  <body onload="init()">
    <div id="mapgis-3d-viewer"></div>
  </body>
</html>
