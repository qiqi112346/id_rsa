<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no"/>
    <title>圆</title>
    <!--加载不同版本Cesium库-->
    <script src="http://webclient.smaryun.com/static/libs/loadCesium.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>

    <!--html2canvas库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/html2canvas/html2canvas.min.js"></script>
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"/>
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/css/graphic.css"
    />
    <script>
      'use strict'
      //定义三维视图的主要类
      let map, sceneView, viewer, options, graphicsLayer, circle
      //取得jquery对象
      let $ = layui.$
      //颜色管理器对象
      let colorpicker = layui.colorpicker

      //地图初始化函数
      function init() {
        //初始化球体
        initViewer()
        //创建切换Cesium版本的按钮
        createChangeTab()
        //初始化标绘图层
        addGraphicLayer()
        //纯色圆
        addColorCircle()
        //闪烁圆
        addFlickerCircle()
        //html材质
        addHtmlDomCircle()
        //圆柱体
        addCircleVolume()
        //动态圆波
        addCircleWave()
        //扫描圆
        addScanCircle()
        //脉冲圆
        addPulseCircle()
        //扩散圆
        addDiffuseCircle()
        //线圈发光圆
        addScanlineCircle()
        //消隐圆
        addFadeCircle()
        //多彩圆
        addColorfulCircle()
        //模糊圆
        addBlurCircle()
        //螺旋圆
        addSpiralCircle()
        //雷达
        addRadarCircle()
        //雷达扫描圆
        addRadaScanCircle()
        //雷达线圆
        addRadarLineCircle()
        //图片圆
        addImageCircle()
        //图片旋转圆
        addRotateCircle()
        //雷达图片
        addRadarImageCircle()
        //添加天地图
        addTDT()
        //视点跳转
        flyTo()
        //初始化示例UI
        initUI()
      }

      //初始化球体
      function initViewer() {
        //初始化图层管理容器
        map = new zondy.Map()
        //初始化地图视图对象
        sceneView = new zondy.cesium.SceneView({
          //视图id
          viewId: 'mapgis-3d-viewer',
          //图层管理容器
          map: map
        })
        //获取视图对象
        viewer = sceneView.getInnerView()
        //显示鼠标位置
        viewer.showPosition()
      }

      //初始化标绘图层
      function addGraphicLayer() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/GraphicsLayer.html
        graphicsLayer = new zondy.cesium.GraphicsLayer(viewer, {
          clickGraphic: function (graphic) {
            if (!graphic) {
              return
            }
            circle = graphic
            //更新样式面板
            //圆填充颜色和材质颜色区分
            let color = circle.style.color
            let count = 0
            let duration = 2000
            let speed = 1
            let image = ''

            //隐藏非公共参数
            $('#circle-count').parents('.layui-form-item').hide()
            $('#circle-duration').parents('.layui-form-item').hide()
            $('#circle-speed').parents('.layui-form-item').hide()
            $('#circle-image').parents('.layui-form-item').hide()

            // 不同材质，参数不一样
            if (typeof circle.style.material !== 'undefined') {
              if (typeof circle.style.material.uniforms !== 'undefined') {
                if (
                  typeof circle.style.material.uniforms.color !== 'undefined'
                ) {
                  color = circle.style.material.uniforms.color
                }
                if (
                  typeof circle.style.material.uniforms.count !== 'undefined'
                ) {
                  count = circle.style.material.uniforms.count
                  $('#circle-count').parents('.layui-form-item').show()
                }
                if (
                  typeof circle.style.material.uniforms.duration !== 'undefined'
                ) {
                  duration = circle.style.material.uniforms.duration
                  $('#circle-duration').parents('.layui-form-item').show()
                }
                if (
                  typeof circle.style.material.uniforms.speed !== 'undefined'
                ) {
                  speed = circle.style.material.uniforms.speed
                  $('#circle-speed').parents('.layui-form-item').show()
                }
                if (
                  typeof circle.style.material.uniforms.image !== 'undefined'
                ) {
                  image = circle.style.material.uniforms.image
                  $('#circle-image').parents('.layui-form-item').show()
                }
              }
            }
            //拉伸高度
            let extrudedHeight =
              typeof circle.style.extrudedHeight !== 'undefined'
                ? circle.style.extrudedHeight
                : 0

            let formParam = {
              color: color.toCssHexString(),
              radius: circle.style.radius,
              offsetHeight: circle.style.offsetHeight,
              extrudedHeight: extrudedHeight,
              count: count, // 圆波数量
              duration: duration, // 持续时间
              speed: speed, // 速度
              image: image // 图片
            }
            layui.form.val('example', formParam)

            colorpicker.render({
              elem: '#circle-color',
              color: color.toCssHexString(),
              done: function (color) {
                $('#circle-color-input').val(color)
                if (
                  typeof circle.style.material !== 'undefined' &&
                  typeof circle.style.material.uniforms !== 'undefined'
                ) {
                  circle.style.material.uniforms.color =
                    Cesium.Color.fromCssColorString(color)
                } else {
                  circle.style.color = Cesium.Color.fromCssColorString(color)
                }
              }
            })

            //这个时候展开编辑面板
            $('#editPanel').show()
          },
          getGraphic: function () {
            graphicsLayer.stopDrawing()
          }
        })
      }

      //纯色圆
      function addColorCircle() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let circleGraphic1 = new zondy.cesium.Graphic({
          //类型
          type: 'circle',
          //位置
          positions: [Cesium.Cartesian3.fromDegrees(113.9733, 29.9994, 0)],
          //样式
          style: {
            //颜色
            color: Cesium.Color.AQUA,
            //离地高度
            offsetHeight: 100,
            //半径
            radius: 200
          }
        })
        //将标绘点添加入标绘图层
        graphicsLayer.addGraphic(circleGraphic1)
      }

      //html材质
      function addHtmlDomCircle() {
        //先将html可见
        document.getElementById('htmlGraph').style.display = 'block'
        //再利用html2canvas转换成图片
        html2canvas(document.getElementById('htmlGraph'), {
          //canvas宽度
          width: 200,
          //canvas高度
          height: 200,
          //canvas分辨率，越大越清晰
          scale: 2
        }).then(function (canvas) {
          //在这里可以拿到base64编码的图片
          let dataUrl = canvas.toDataURL('image/png', 1.0)
          // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
          let circleGraphic1 = new zondy.cesium.Graphic({
            //类型
            type: 'circle',
            //位置
            positions: [Cesium.Cartesian3.fromDegrees(113.9833, 29.9994, 0)],
            //样式
            style: {
              //闪烁圆材质
              // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium/Material.html
              material: Cesium.Material.fromType(Cesium.Material.ImageType, {
                //图片路径
                image: dataUrl,
                //x、y轴重复次数
                repeat: new Cesium.Cartesian2(1.0, 1.0)
              }),
              //半径
              radius: 200,
              //离地高度
              offsetHeight: 100
            }
          })
          //将标绘点添加入标绘图层
          graphicsLayer.addGraphic(circleGraphic1)
        })
      }

      //闪烁圆
      function addFlickerCircle() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let circleGraphic2 = new zondy.cesium.Graphic({
          //标绘类型
          type: 'circle',
          //标绘位置
          positions: [Cesium.Cartesian3.fromDegrees(113.9933, 29.9994, 0)],
          //标绘样式
          style: {
            //离地高度
            offsetHeight: 100,
            //圆半径
            radius: 200,
            //闪烁圆材质
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Material.html
            material: Cesium.Material.fromType(
              Cesium.Material.LineFlickerMaterialType,
              {
                //材质颜色
                color: Cesium.Color.DARKGOLDENROD,
                //闪烁速度
                speed: 10
              }
            )
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(circleGraphic2)
      }

      //圆柱体
      function addCircleVolume() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let circleGraphic3 = new zondy.cesium.Graphic({
          //标绘类型
          type: 'circle',
          //标绘位置
          positions: [Cesium.Cartesian3.fromDegrees(114.0033, 29.9994, 0)],
          //标绘样式
          style: {
            //颜色
            color: Cesium.Color.CRIMSON,
            //离地高度
            offsetHeight: 100,
            //圆柱半径
            radius: 200,
            //圆柱拉伸高度
            extrudedHeight: 400
          }
        })
        //将标绘点添加入标绘图层
        graphicsLayer.addGraphic(circleGraphic3)
      }

      //动态圆波
      function addCircleWave() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let circleGraphic4 = new zondy.cesium.Graphic({
          //类型
          type: 'circle',
          //位置
          positions: [Cesium.Cartesian3.fromDegrees(113.9733, 29.9894, 0)],
          //样式
          style: {
            //离地高度
            offsetHeight: 100,
            //半径
            radius: 200,
            // 动态圆波材质
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Material.html
            material: Cesium.Material.fromType(
              Cesium.Material.CircleWaveMaterialType,
              {
                //材质颜色
                color: Cesium.Color.GOLD,
                // 圆波数量
                count: 2,
                //持续时间
                duration: 2000
              }
            )
          }
        })
        //将标绘点添加入标绘图层
        graphicsLayer.addGraphic(circleGraphic4)
      }

      //扫描圆
      function addScanCircle() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let circleGraphic5 = new zondy.cesium.Graphic({
          //标绘类型
          type: 'circle',
          //标绘位置
          positions: [Cesium.Cartesian3.fromDegrees(113.9833, 29.9894, 0)],
          //标绘样式
          style: {
            //离地高度
            offsetHeight: 100,
            //圆半径
            radius: 400,
            //扫描圆材质
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Material.html
            material: Cesium.Material.fromType(
              Cesium.Material.CircleScanMaterialType,
              {
                //材质颜色
                color: Cesium.Color.BLUEVIOLET,
                //扫描速度
                speed: 10.0
              }
            )
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(circleGraphic5)
      }

      //脉冲圆
      function addPulseCircle() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let circleGraphic6 = new zondy.cesium.Graphic({
          //标绘类型
          type: 'circle',
          //标绘位置
          positions: [Cesium.Cartesian3.fromDegrees(113.9933, 29.9894, 0)],
          //标绘样式
          style: {
            //离地高度
            offsetHeight: 100,
            //圆半径
            radius: 200,
            //脉冲圆材质
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Material.html
            material: Cesium.Material.fromType(
              Cesium.Material.CirclePulseMaterialType,
              {
                //材质颜色
                color: Cesium.Color.CRIMSON,
                //脉冲速度
                speed: 10.0
              }
            )
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(circleGraphic6)
      }

      //扩散圆
      function addDiffuseCircle() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let circleGraphic7 = new zondy.cesium.Graphic({
          //标绘类型
          type: 'circle',
          //标绘位置
          positions: [Cesium.Cartesian3.fromDegrees(114.0033, 29.9894, 0)],
          //标绘样式
          style: {
            //离地高度
            offsetHeight: 100,
            //圆半径
            radius: 400,
            //扩散圆材质
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Material.html
            material: Cesium.Material.fromType(
              Cesium.Material.CircleDiffuseMaterialType,
              {
                //材质颜色
                color: Cesium.Color.BROWN,
                //扩散速度
                speed: 10.0
              }
            )
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(circleGraphic7)
      }

      //线圈发光圆
      function addScanlineCircle() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let circleGraphic8 = new zondy.cesium.Graphic({
          //标绘类型
          type: 'circle',
          //标绘位置
          positions: [Cesium.Cartesian3.fromDegrees(114.0133, 29.9894, 0)],
          //标绘样式
          style: {
            //离地高度
            offsetHeight: 100,
            //圆半径
            radius: 200,
            //线圈发光圆材质
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Material.html
            material: Cesium.Material.fromType(Cesium.Material.ScanlineType, {
              //材质颜色
              color: Cesium.Color.CYAN,
              //线圈发光速度
              speed: 1000
            })
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(circleGraphic8)
      }

      //消隐圆
      function addFadeCircle() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let circleGraphic9 = new zondy.cesium.Graphic({
          //标绘类型
          type: 'circle',
          //标绘位置
          positions: [Cesium.Cartesian3.fromDegrees(114.0233, 29.9894, 0)],
          //标绘样式
          style: {
            //离地高度
            offsetHeight: 100,
            //圆半径
            radius: 200,
            //消隐材质
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Material.html
            material: Cesium.Material.fromType(
              Cesium.Material.CircleFadeMaterialType,
              {
                //材质颜色
                color: Cesium.Color.BURLYWOOD,
                //消隐速度
                speed: 10.0
              }
            )
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(circleGraphic9)
      }

      //多彩圆
      function addColorfulCircle() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let circleGraphic10 = new zondy.cesium.Graphic({
          //标绘类型
          type: 'circle',
          //标绘位置
          positions: [Cesium.Cartesian3.fromDegrees(114.0333, 29.9894, 0)],
          //标绘样式
          style: {
            //离地高度
            offsetHeight: 100,
            //圆半径
            radius: 200,
            //多彩材质
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Material.html
            material: Cesium.Material.fromType(
              Cesium.Material.CircleColorfulMaterialType,
              {
                //材质颜色
                color: Cesium.Color.CORNFLOWERBLUE,
                //渐变速度
                speed: 10.0
              }
            )
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(circleGraphic10)
      }

      //模糊圆
      function addBlurCircle() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let circleGraphic11 = new zondy.cesium.Graphic({
          //标绘类型
          type: 'circle',
          //标绘位置
          positions: [Cesium.Cartesian3.fromDegrees(114.0433, 29.9894, 0)],
          //标绘样式
          style: {
            //离地高度
            offsetHeight: 100,
            //圆半径
            radius: 200,
            //模糊材质
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Material.html
            material: Cesium.Material.fromType(
              Cesium.Material.CircleBlurMaterialType,
              {
                //材质颜色
                color: Cesium.Color.CADETBLUE,
                //模糊速度
                speed: 10.0
              }
            )
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(circleGraphic11)
      }

      //螺旋圆
      function addSpiralCircle() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let circleGraphic12 = new zondy.cesium.Graphic({
          //标绘类型
          type: 'circle',
          //标绘位置
          positions: [Cesium.Cartesian3.fromDegrees(113.9733, 29.9794, 0)],
          //标绘样式
          style: {
            //离地高度
            offsetHeight: 100,
            //圆半径
            radius: 200,
            //螺旋材质
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Material.html
            material: Cesium.Material.fromType(
              Cesium.Material.CircleSpiralMaterialType,
              {
                //材质颜色
                color: Cesium.Color.CHARTREUSE,
                //螺旋速度
                speed: 10.0
              }
            )
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(circleGraphic12)
      }

      //雷达
      function addRadarCircle() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let circleGraphic13 = new zondy.cesium.Graphic({
          //类型
          type: 'circle',
          //位置
          positions: [Cesium.Cartesian3.fromDegrees(113.9833, 29.9794, 0)],
          //标绘样式
          style: {
            //圆离地高度
            offsetHeight: 100,
            //圆半径
            radius: 200,
            //雷达材质
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Material.html
            material: Cesium.Material.fromType(
              Cesium.Material.RadarMaterialType,
              {
                //材质颜色
                color: new Cesium.Color(177 / 255, 244 / 255, 207 / 255),
                //扫描速度
                speed: 1
              }
            )
          }
        })
        //将标绘点添加入标绘图层
        graphicsLayer.addGraphic(circleGraphic13)
      }

      //雷达扫描
      function addRadaScanCircle() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let circleGraphic14 = new zondy.cesium.Graphic({
          //标绘类型
          type: 'circle',
          //标绘位置
          positions: [Cesium.Cartesian3.fromDegrees(113.9933, 29.9794, 0)],
          //标绘样式
          style: {
            //离地高度
            offsetHeight: 100,
            //圆半径
            radius: 200,
            //雷达扫描圆材质
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Material.html
            material: Cesium.Material.fromType(
              Cesium.Material.RadarScanMaterialType,
              {
                //材质颜色
                color: Cesium.Color.DARKGOLDENROD,
                //雷达线速度
                speed: 10
              }
            )
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(circleGraphic14)
      }

      //雷达线圆
      function addRadarLineCircle() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let circleGraphic15 = new zondy.cesium.Graphic({
          //标绘类型
          type: 'circle',
          //标绘位置
          positions: [Cesium.Cartesian3.fromDegrees(114.0033, 29.9794, 0)],
          //标绘样式
          style: {
            //离地高度
            offsetHeight: 100,
            //圆半径
            radius: 200,
            //雷达线圆材质
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Material.html
            material: Cesium.Material.fromType(
              Cesium.Material.RadarLineMaterialType,
              {
                //材质颜色
                color: Cesium.Color.DARKCYAN,
                //雷达线速度
                speed: 10
              }
            )
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(circleGraphic15)
      }

      //图片圆
      function addImageCircle() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let circleGraphic16 = new zondy.cesium.Graphic({
          //标绘类型
          type: 'circle',
          //标绘位置
          positions: [Cesium.Cartesian3.fromDegrees(113.9733, 29.9694, 0)],
          //标绘样式
          style: {
            //离地高度
            offsetHeight: 100,
            //圆半径
            radius: 200,
            //图片材质
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Material.html
            material: Cesium.Material.fromType(Cesium.Material.ImageType, {
              //图片路径
              image:
                'http://webclient.smaryun.com:8200/NoneSpatialData/image/earth.jpg',
              //x、y轴重复次数
              repeat: new Cesium.Cartesian2(1.0, 1.0)
            })
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(circleGraphic16)
      }

      //图片旋转圆
      function addRotateCircle() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let circleGraphic17 = new zondy.cesium.Graphic({
          //标绘类型
          type: 'circle',
          //标绘位置
          positions: [Cesium.Cartesian3.fromDegrees(113.9833, 29.9694, 0)],
          //标绘样式
          style: {
            //离地高度
            offsetHeight: 100,
            //圆半径
            radius: 200,
            //图片材质
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Material.html
            material: Cesium.Material.fromType(Cesium.Material.ImageType, {
              //图片路径
              image:
                'http://webclient.smaryun.com:8200/NoneSpatialData/image/earth.jpg',
              //x、y轴重复次数
              repeat: new Cesium.Cartesian2(1.0, 1.0)
            }),
            //顺时针旋转角度
            stRotation: 0
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(circleGraphic17)
        //使用定时器达到旋转圆的效果
        let circleGraphic17Interval = setInterval(function () {
          circleGraphic17.style.stRotation += Cesium.Math.toRadians(1)
        }, 30)
      }

      //雷达图片
      function addRadarImageCircle() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let circleGraphic18 = new zondy.cesium.Graphic({
          //标绘类型
          type: 'circle',
          //标绘位置
          positions: [Cesium.Cartesian3.fromDegrees(113.9933, 29.9694, 0)],
          //标绘样式
          style: {
            //离地高度
            offsetHeight: 100,
            //圆半径
            radius: 200,
            //图片材质
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Material.html
            material: Cesium.Material.fromType(Cesium.Material.ImageType, {
              //材质颜色
              color: Cesium.Color.DARKGREEN,
              //图片路径
              image:
                'http://webclient.smaryun.com:8200/NoneSpatialData/image/circle-scan.png',
              //x、y轴重复次数
              repeat: new Cesium.Cartesian2(1.0, 1.0)
            }),
            //顺时针旋转角度
            stRotation: 0
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(circleGraphic18)
        //使用定时器达到雷达效果
        let circleGraphic18Interval = setInterval(function () {
          circleGraphic18.style.stRotation -= Cesium.Math.toRadians(1)
        }, 30)
      }

      //添加天地图
      function addTDT() {
        //加载天地图底图
        let TDTLayer = new zondy.layer.WMTSLayer({
          // 加载经纬度的影像地图
          url: 'http://t6.tianditu.gov.cn/img_c/wmts',
          // 天地图必须加token，且token名为tk
          tokenKey: 'tk',
          // token请在天地图官网申请
          tokenValue: getTDTToken()
        })
        map.add(TDTLayer)
      }

      //视点跳转
      function flyTo() {
        //飞到指定视角
        sceneView.flyTo({
          center: [114.01, 29.9839, 13000]
        })
      }

      //初始化示例UI
      function initUI() {
        layui.use('colorpicker', function () {
          //半径
          $('#circle-radius').bind('input propertychange', function () {
            circle.style.radius = clampNumberValue($('#circle-radius').val(), [
              0
            ])
          })

          //拉伸高度
          $('#circle-extrudedHeight').bind('input propertychange', function () {
            circle.style.extrudedHeight = clampNumberValue(
              $('#circle-extrudedHeight').val()
            )
          })

          //离地高度
          $('#circle-offsetHeight').bind('input propertychange', function () {
            circle.style.offsetHeight = clampNumberValue(
              $('#circle-offsetHeight').val()
            )
          })

          //填充颜色
          colorpicker.render({
            elem: '#circle-color',
            color: '#9dfafe',
            done: function (color) {
              $('#circle-color-input').val(color)
              circle.style.color = Cesium.Color.fromCssColorString(color)
            }
          })

          //圆波数量
          $('#circle-count').bind('input propertychange', function () {
            circle.style.material.uniforms.count = clampNumberValue(
              $('#circle-count').val(),
              [0]
            )
          })

          //持续时间
          $('#circle-duration').bind('input propertychange', function () {
            circle.style.material.uniforms.duration = clampNumberValue(
              $('#circle-duration').val(),
              [0]
            )
          })

          //速度
          $('#circle-speed').bind('input propertychange', function () {
            circle.style.material.uniforms.speed = clampNumberValue(
              $('#circle-speed').val(),
              [0]
            )
          })
        })
      }

      // 开始绘制
      function startDrawing() {
        $('#editPanel').hide()
        graphicsLayer.startDrawing({
          type: 'circle',
          style: {
            color: Cesium.Color.fromCssColorString('#9dfafe'),
            radius: 200,
            offsetHeight: 100
          }
        })
      }

      //删除标绘
      function deleteLabel() {
        circle.remove()
        $('#editPanel').hide()
      }

      // 获取合法的number数据输入
      function clampNumberValue(inputValue, limits) {
        let max, min
        if (Array.isArray(limits) && limits.length > 0) {
          if (limits.length === 1) {
            min = limits[0]
          } else {
            max = limits[1]
          }
        }
        let value = Number(inputValue)
        if (Number.isNaN(value)) {
          if (typeof min === 'number') {
            return min
          } else {
            return 0
          }
        }
        if (typeof min === 'number' && value <= min) {
          return min
        }
        if (typeof max === 'number' && value >= max) {
          return max
        }
        return value
      }
    </script>
  </head>

  <body onload="init()">
    <div id="mapgis-3d-viewer"></div>
    <div
      class="layui-panel layui-panel-right"
      style="text-align: center; width: 140px; padding: 10px"
    >
      <button
        onclick="startDrawing()"
        style="margin: 0 auto !important"
        type="button"
        class="layui-btn layui-btn-normal graphic-button-margin"
      >
        添加圆
      </button>
    </div>
    <div
      class="layui-panel layui-panel-right"
      id="editPanel"
      style="display: none; top: 70px"
    >
      <form class="layui-form" action="" lay-filter="example">
        <div class="sample-main-panel">
          <div class="layui-form-item">
            <label class="layui-form-label">颜色</label>
            <div
              class="layui-input-inline"
              style="width: 145px; margin-left: 10px"
            >
              <input
                disabled
                type="text"
                value="#00ffff"
                name="color"
                placeholder="颜色"
                class="layui-input"
                id="circle-color-input"
              />
            </div>
            <div class="layui-inline">
              <div id="circle-color"></div>
            </div>
          </div>
          <div class="layui-form-item">
            <label class="layui-form-label">半径</label>
            <div class="layui-input-block" style="width: 183px">
              <input
                id="circle-radius"
                type="number"
                value="200"
                name="radius"
                name="title"
                lay-verify="title"
                autocomplete="off"
                placeholder="40"
                class="layui-input"
              />
            </div>
          </div>
          <div class="layui-form-item">
            <label class="layui-form-label">离地高度</label>
            <div class="layui-input-block" style="width: 183px">
              <input
                id="circle-offsetHeight"
                type="number"
                name="offsetHeight"
                value="100"
                name="title"
                lay-verify="title"
                autocomplete="off"
                placeholder="100"
                class="layui-input"
              />
            </div>
          </div>
          <div class="layui-form-item">
            <label class="layui-form-label">拉伸高度</label>
            <div class="layui-input-block" style="width: 183px">
              <input
                id="circle-extrudedHeight"
                type="number"
                name="extrudedHeight"
                value="0"
                name="title"
                lay-verify="title"
                autocomplete="off"
                placeholder="0"
                class="layui-input"
              />
            </div>
          </div>
          <div class="layui-form-item" style="display: none">
            <label class="layui-form-label">圆波数量</label>
            <div class="layui-input-block" style="width: 183px">
              <input
                id="circle-count"
                type="number"
                name="count"
                value="0"
                name="title"
                lay-verify="title"
                autocomplete="off"
                placeholder="0"
                class="layui-input"
              />
            </div>
          </div>
          <div class="layui-form-item" style="display: none">
            <label class="layui-form-label">持续时间</label>
            <div class="layui-input-block" style="width: 183px">
              <input
                id="circle-duration"
                type="number"
                name="duration"
                value="0"
                name="title"
                lay-verify="title"
                autocomplete="off"
                placeholder="0"
                class="layui-input"
              />
            </div>
          </div>
          <div class="layui-form-item" style="display: none">
            <label class="layui-form-label">速度</label>
            <div class="layui-input-block" style="width: 183px">
              <input
                id="circle-speed"
                type="number"
                name="speed"
                value="0"
                name="title"
                lay-verify="title"
                autocomplete="off"
                placeholder="0"
                class="layui-input"
              />
            </div>
          </div>
          <div class="layui-form-item" style="display: none">
            <label class="layui-form-label">图片</label>
            <div class="layui-input-block" style="width: 183px">
              <input
                id="circle-image"
                type="text"
                disabled
                name="image"
                value=""
                name="title"
                lay-verify="title"
                autocomplete="off"
                placeholder="图片"
                class="layui-input"
              />
            </div>
          </div>
        </div>
        <div class="sample-button-panel">
          <button
            onclick="$('#editPanel').hide()"
            style="float: right; width: auto; margin-right: 0 !important"
            type="button"
            class="layui-btn layui-btn-normal graphic-button-margin"
          >
            关闭面板
          </button>
          <span
            onclick="deleteLabel()"
            style="
              cursor: pointer;
              float: right;
              line-height: 32px;
              margin-right: 15px;
            "
            >删除标绘</span
          >
        </div>
      </form>
    </div>
    <div id="htmlGraph">我是html元素</div>
  </body>
  <style>
    #htmlGraph {
      width: 200px;
      height: 200px;
      background: linear-gradient(
        -45deg,
        #0acf00 25%,
        #78c9db 0,
        #78c9db 50%,
        #0acf00 0,
        #0acf00 75%,
        #78c9db 0
      );
      background-size: 30px 30px;
      display: none;
      font-size: 28px;
      font-weight: bold;
      line-height: 200px;
      color: red;
      text-align: center;
    }
  </style>
</html>
