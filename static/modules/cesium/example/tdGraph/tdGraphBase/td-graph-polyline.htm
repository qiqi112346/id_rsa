<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no"/>
    <title>线</title>
    <!--加载不同版本Cesium库-->
    <script src="http://webclient.smaryun.com/static/libs/loadCesium.js"></script>
    <!--plugin脚本库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-cesium-plugin.min.js"></script>
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>

    <!--html2canvas库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/html2canvas/html2canvas.min.js"></script>
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/layui/layui.js"></script>
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/layui/css/layui.css"/>
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <link
      rel="stylesheet"
      href="http://webclient.smaryun.com/static/libs/css/graphic.css"
    />
    <script>
      'use strict'
      //定义三维视图的主要类
      let map, sceneView, viewer, graphicsLayer, polyline
      //取得jquery对象
      let $ = layui.$
      //颜色管理器对象
      let colorpicker = layui.colorpicker

      //地图初始化函数
      function init() {
        //初始化球体
        initViewer()
        //创建切换Cesium版本的按钮
        createChangeTab()
        //初始化标绘图层
        addGraphicLayer()
        //纯色线
        addColorPolyline()
        //虚线
        addDotPolyline()
        //外边框线
        addOutlinePolyline()
        //发光线
        addLightPolyline()
        //箭头线
        addArrowPolyline()
        //流动线
        addTrailLInlPolyline()
        //彩虹流动线
        addRainbowTrailPolyline()
        //矩形流动线
        addRectangleTrailPolyline()
        //矩形流动线html
        addTrailPolylineHtml()
        //加载天地图
        addTDT()
        //视点跳转
        flyTo()
        //初始化示例UI
        initUI()
      }

      //初始化球体
      function initViewer() {
        //初始化图层管理容器
        map = new zondy.Map()
        //初始化地图视图对象
        sceneView = new zondy.cesium.SceneView({
          //视图id
          viewId: 'mapgis-3d-viewer',
          //图层管理容器
          map: map
        })
        //获取视图对象
        viewer = sceneView.getInnerView()
        //显示鼠标位置
        viewer.showPosition()
      }

      //初始化标绘图层
      function addGraphicLayer() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/GraphicsLayer.html
        graphicsLayer = new zondy.cesium.GraphicsLayer(viewer, {
          clickGraphic: function (graphic) {
            if (!graphic) return
            polyline = graphic
            //将各类文本框隐藏
            $('#polyline-color-input').parents('.layui-form-item').hide()
            $('#polyline-image').parents('.layui-form-item').hide()
            $('#polyline-duration').parents('.layui-form-item').hide()
            $('#polyline-glowPower').parents('.layui-form-item').hide()
            $('#polyline-taperPower').parents('.layui-form-item').hide()
            $('#polyline-outlineColor').parents('.layui-form-item').hide()
            $('#polyline-outlineWidth').parents('.layui-form-item').hide()
            $('#polyline-gapColor').parents('.layui-form-item').hide()
            $('#polyline-dashPattern').parents('.layui-form-item').hide()
            $('#polyline-repeatX').parents('.layui-form-item').hide()
            $('#polyline-repeatY').parents('.layui-form-item').hide()
            //给面板赋值
            $('#polyline-width').val(polyline.style.width)
            //材质类型
            let material = polyline.style.material
            if (typeof material === 'undefined') {
              colorpicker.render({
                elem: '#polyline-color',
                color: polyline.style.color.toCssHexString(),
                done: function (color) {
                  $('#polyline-color-input').val(color)
                  polyline.style.color = Cesium.Color.fromCssColorString(color)
                }
              })
              $('#polyline-color-input').parents('.layui-form-item').show()
            } else {
              colorpicker.render({
                elem: '#polyline-color',
                color: polyline.style.material.uniforms.color.toCssHexString(),
                done: function (color) {
                  $('#polyline-color-input').val(color)
                  polyline.style.material.uniforms.color =
                    Cesium.Color.fromCssColorString(color)
                }
              })
              $('#polyline-color-input').parents('.layui-form-item').show()
              switch (material.type) {
                case 'PolylineDash':
                  colorpicker.render({
                    elem: '#polyline-gapColor',
                    color:
                      polyline.style.material.uniforms.gapColor.toCssHexString(),
                    done: function (color) {
                      $('#polyline-gapColor-input').val(color)
                      polyline.style.material.uniforms.gapColor =
                        Cesium.Color.fromCssColorString(color)
                    }
                  })
                  $('#polyline-dashPattern').val(
                    polyline.style.material.uniforms.dashPattern
                  )
                  $('#polyline-gapColor').parents('.layui-form-item').show()
                  $('#polyline-dashPattern').parents('.layui-form-item').show()
                  break
                case 'PolylineOutline':
                  colorpicker.render({
                    elem: '#polyline-outlineColor',
                    color:
                      polyline.style.material.uniforms.outlineColor.toCssHexString(),
                    done: function (color) {
                      $('#polyline-outlineColor-input').val(color)
                      polyline.style.material.uniforms.outlineColor =
                        Cesium.Color.fromCssColorString(color)
                    }
                  })
                  $('#polyline-outlineWidth').val(
                    polyline.style.material.uniforms.outlineWidth
                  )
                  $('#polyline-outlineColor').parents('.layui-form-item').show()
                  $('#polyline-outlineWidth').parents('.layui-form-item').show()
                  break
                case 'PolylineGlow':
                  $('#polyline-glowPower').val(
                    polyline.style.material.uniforms.glowPower
                  )
                  $('#polyline-taperPower').val(
                    polyline.style.material.uniforms.taperPower
                  )
                  $('#polyline-taperPower').parents('.layui-form-item').show()
                  $('#polyline-glowPower').parents('.layui-form-item').show()
                  break
                case 'PolylineArrow':
                  break
                case 'PolylineTrailLink':
                  $('#polyline-image').val(
                    polyline.style.material.uniforms.image
                  )
                  $('#polyline-duration').val(
                    polyline.style.material.uniforms.duration
                  )
                  $('#polyline-repeatX').val(
                    polyline.style.material.uniforms.repeat.x
                  )
                  $('#polyline-repeatY').val(
                    polyline.style.material.uniforms.repeat.y
                  )
                  $('#polyline-image').parents('.layui-form-item').show()
                  $('#polyline-duration').parents('.layui-form-item').show()
                  $('#polyline-repeatX').parents('.layui-form-item').show()
                  $('#polyline-repeatY').parents('.layui-form-item').show()
                  break
              }
            }
            //这个时候展开编辑面板
            $('#editPanel').show()
          },
          getGraphic: function () {
            graphicsLayer.stopDrawing()
          }
        })
      }

      //纯色线
      function addColorPolyline() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let polylineGraphic = new zondy.cesium.Graphic({
          //类型
          type: 'polyline',
          //几何数组
          positions: [
            Cesium.Cartesian3.fromDegrees(113.9454, 29.9987, 0),
            Cesium.Cartesian3.fromDegrees(113.9846, 29.9987, 0)
          ],
          //样式
          style: {
            //颜色
            color: Cesium.Color.AQUA,
            //宽度
            width: 4
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(polylineGraphic)
      }

      //虚线
      function addDotPolyline() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let polylineGraphic2 = new zondy.cesium.Graphic({
          //类型
          type: 'polyline',
          //几何数组
          positions: [
            Cesium.Cartesian3.fromDegrees(113.9454, 29.9887, 0),
            Cesium.Cartesian3.fromDegrees(113.9846, 29.9887, 0)
          ],
          //样式
          style: {
            //宽度
            width: 4,
            //虚线材质
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium/Material.html
            material: Cesium.Material.fromType('PolylineDash', {
              //线颜色
              color: Cesium.Color.BLUE,
              //间隔颜色
              gapColor: Cesium.Color.YELLOW,
              //间隔长度
              dashPattern: 240
            })
          }
        })
        //将标绘点添加入标绘图层
        graphicsLayer.addGraphic(polylineGraphic2)
      }

      //添加外边框线
      function addOutlinePolyline() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let polylineGraphic4 = new zondy.cesium.Graphic({
          //类型
          type: 'polyline',
          //几何数组
          positions: [
            Cesium.Cartesian3.fromDegrees(113.9454, 29.9787, 0),
            Cesium.Cartesian3.fromDegrees(113.9846, 29.9787, 0)
          ],
          //样式
          style: {
            //线宽
            width: 16,
            //外边线材质
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium/Material.html
            material: Cesium.Material.fromType('PolylineOutline', {
              //线颜色
              color: new Cesium.Color(1.0, 1.0, 1.0, 1.0),
              //外边线颜色
              outlineColor: new Cesium.Color(1.0, 0.0, 0.0, 1.0),
              //外边线宽度
              outlineWidth: 8
            })
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(polylineGraphic4)
      }

      //发光线
      function addLightPolyline() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let polylineGraphic5 = new zondy.cesium.Graphic({
          //类型
          type: 'polyline',
          //线几何数组
          positions: [
            Cesium.Cartesian3.fromDegrees(113.9454, 29.9687, 0),
            Cesium.Cartesian3.fromDegrees(113.9846, 29.9687, 0)
          ],
          //样式
          style: {
            //线宽
            width: 8,
            //发光线材质
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium/Material.html
            material: Cesium.Material.fromType('PolylineGlow', {
              //发光颜色
              color: Cesium.Color.YELLOW,
              //线尾发光比例
              glowPower: 0.5,
              //线头发光比例
              taperPower: 0.1
            })
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(polylineGraphic5)
      }

      //箭头线
      function addArrowPolyline() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let polylineGraphic6 = new zondy.cesium.Graphic({
          //类型
          type: 'polyline',
          //线几何数组
          positions: [
            Cesium.Cartesian3.fromDegrees(113.9454, 29.9587, 0),
            Cesium.Cartesian3.fromDegrees(113.9846, 29.9587, 0)
          ],
          //样式
          style: {
            //线宽
            width: 8,
            //箭头线材质
            material: Cesium.Material.fromType('PolylineArrow', {
              color: Cesium.Color.AQUA
            })
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(polylineGraphic6)
      }

      //流动线
      function addTrailLInlPolyline() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let polylineGraphic7 = new zondy.cesium.Graphic({
          //类型
          type: 'polyline',
          //线几何数组
          positions: [
            Cesium.Cartesian3.fromDegrees(113.9949, 30.0002, 0),
            Cesium.Cartesian3.fromDegrees(114.0306, 30.0002, 0)
          ],
          //样式
          style: {
            //线宽
            width: 10,
            //材质
            material: Cesium.Material.fromType('PolylineTrailLink', {
              //材质图片
              image:
                'http://webclient.smaryun.com:8200/NoneSpatialData/image/line-arrow-blue.png',
              color: Cesium.Color.RED,
              //持续时间
              duration: 1000,
              //x、y轴重复次数
              repeat: new Cesium.Cartesian2(8, 1)
            })
          }
        })
        //将标绘添加入标绘图层
        graphicsLayer.addGraphic(polylineGraphic7)
      }

      //彩虹流动线
      function addRainbowTrailPolyline() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let polylineGraphic8 = new zondy.cesium.Graphic({
          //类型
          type: 'polyline',
          //线几何数组
          positions: [
            Cesium.Cartesian3.fromDegrees(113.9949, 29.9902, 0),
            Cesium.Cartesian3.fromDegrees(114.0306, 29.9902, 0)
          ],
          //样式
          style: {
            //线宽
            width: 8,
            //材质
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Cesium.Material.html
            material: Cesium.Material.fromType('PolylineTrailLink', {
              //材质图片
              image:
                'http://webclient.smaryun.com:8200/NoneSpatialData/image/color.png',
              //持续时间
              duration: 2000,
              //x、y轴重复次数
              repeat: new Cesium.Cartesian2(1, 1)
            })
          }
        })
        //将标绘点添加入标绘图层
        graphicsLayer.addGraphic(polylineGraphic8)
      }

      //矩形流动线
      function addRectangleTrailPolyline() {
        // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
        let polylineGraphic9 = new zondy.cesium.Graphic({
          //类型
          type: 'polyline',
          //线几何
          positions: [
            Cesium.Cartesian3.fromDegrees(113.9949, 29.9802, 0),
            Cesium.Cartesian3.fromDegrees(114.0306, 29.9802, 0),
            Cesium.Cartesian3.fromDegrees(114.0306, 29.9702, 0),
            Cesium.Cartesian3.fromDegrees(113.9949, 29.9702, 0),
            Cesium.Cartesian3.fromDegrees(113.9949, 29.9802, 0)
          ],
          //样式
          style: {
            //线宽
            width: 20,
            // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Cesium.Material.html
            material: Cesium.Material.fromType('PolylineTrailLink', {
              //材质图片
              image:
                'http://webclient.smaryun.com:8200/NoneSpatialData/image/line-arrow-dovetail.png',
              //持续时间
              duration: 2000,
              //x、y轴重复次数
              repeat: new Cesium.Cartesian2(10.0, 1.0)
            })
          }
        })
        //将标绘点添加入标绘图层
        graphicsLayer.addGraphic(polylineGraphic9)
      }

      //矩形流动线,html材质
      function addTrailPolylineHtml() {
        //先将html可见
        document.getElementById('htmlGraph').style.display = 'block'
        //再利用html2canvas转换成图片
        html2canvas(document.getElementById('htmlGraph'), {
          //canvas宽度
          width: 100,
          //canvas高度
          height: 20,
          //canvas分辨率，越大越清晰
          scale: 2
        }).then(function (canvas) {
          document.getElementById('htmlGraph').style.display = 'none'
          //在这里可以拿到base64编码的图片
          let dataUrl = canvas.toDataURL('image/png', 1.0)
          // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Graphic.html
          let polylineGraphic9 = new zondy.cesium.Graphic({
            //类型
            type: 'polyline',
            //线几何
            positions: [
              Cesium.Cartesian3.fromDegrees(113.9949, 29.9602, 0),
              Cesium.Cartesian3.fromDegrees(114.0306, 29.9602, 0)
            ],
            //样式
            style: {
              //线宽
              width: 20,
              // 参考API: http://webclient.smaryun.com/static/modules/cesium/api/cesium-mapgis/Cesium.Material.html
              material: Cesium.Material.fromType('PolylineTrailLink', {
                //材质图片
                image: dataUrl,
                //持续时间
                duration: 2000,
                //x、y轴重复次数
                repeat: new Cesium.Cartesian2(2.0, 1.0)
              })
            }
          })
          //将标绘点添加入标绘图层
          graphicsLayer.addGraphic(polylineGraphic9)
        })
      }

      //加载天地图底图
      function addTDT() {
        let TDTLayer = new zondy.layer.WMTSLayer({
          // 加载经纬度的影像地图
          url: 'http://t6.tianditu.gov.cn/img_c/wmts',
          // 天地图必须加token，且token名为tk
          tokenKey: 'tk',
          // token请在天地图官网申请
          tokenValue: getTDTToken()
        })
        map.add(TDTLayer)
      }

      //视点跳转
      function flyTo() {
        //飞到指定视角
        sceneView.flyTo({
          center: [113.9894, 29.9792, 10000]
        })
      }

      //初始化示例UI
      function initUI() {
        //示例UI相关代码
        layui.use('colorpicker', function () {
          //线宽
          $('#polyline-width').bind('input propertychange', function () {
            polyline.style.width = clampNumberValue(
              $('#polyline-width').val(),
              [0]
            )
          })
          $('#polyline-image').bind('input propertychange', function () {
            polyline.style.material.uniforms.image = $('#polyline-image').val()
          })
          $('#polyline-duration').bind('input propertychange', function () {
            polyline.style.material.uniforms.duration = clampNumberValue(
              $('#polyline-duration').val(),
              [0]
            )
          })
          $('#polyline-glowPower').bind('input propertychange', function () {
            polyline.style.material.uniforms.glowPower = clampNumberValue(
              $('#polyline-glowPower').val()
            )
          })
          $('#polyline-taperPower').bind('input propertychange', function () {
            polyline.style.material.uniforms.taperPower = clampNumberValue(
              $('#polyline-taperPower').val()
            )
          })
          $('#polyline-outlineWidth').bind('input propertychange', function () {
            polyline.style.material.uniforms.outlineWidth = clampNumberValue(
              $('#polyline-outlineWidth').val(),
              [0]
            )
          })
          $('#polyline-dashPattern').bind('input propertychange', function () {
            polyline.style.material.uniforms.dashPattern = clampNumberValue(
              $('#polyline-dashPattern').val()
            )
          })
          $('#polyline-repeatX').bind('input propertychange', function () {
            polyline.style.material.uniforms.repeat.x = clampNumberValue(
              $('#polyline-repeatX').val(),
              [0]
            )
          })
          $('#polyline-repeatY').bind('input propertychange', function () {
            polyline.style.material.uniforms.repeat.y = clampNumberValue(
              $('#polyline-repeatY').val(),
              [0]
            )
          })
        })
      }

      function startDrawing() {
        $('#editPanel').hide()
        graphicsLayer.startDrawing({
          type: 'polyline',
          style: {
            color: Cesium.Color.fromCssColorString(
              $('#polyline-color-input').val()
            ),
            width: clampNumberValue($('#polyline-width').val(), [0])
          }
        })
        // 显示面板
        $('#editPanel').show()
      }

      function deletePolyline() {
        $('#editPanel').hide()
        polyline.remove()
      }
      // 获取合法的number数据输入
      function clampNumberValue(inputValue, limits) {
        let max, min
        if (Array.isArray(limits) && limits.length > 0) {
          if (limits.length === 1) {
            min = limits[0]
          } else {
            max = limits[1]
          }
        }
        let value = Number(inputValue)
        if (Number.isNaN(value)) {
          if (typeof min === 'number') {
            return min
          } else {
            return 0
          }
        }
        if (typeof min === 'number' && value <= min) {
          return min
        }
        if (typeof max === 'number' && value >= max) {
          return max
        }
        return value
      }
    </script>
  </head>

  <body onload="init()">
    <div id="mapgis-3d-viewer"></div>
    <div
      class="layui-panel layui-panel-right"
      style="text-align: center; width: 140px; padding: 10px"
    >
      <button
        onclick="startDrawing()"
        style="width: auto; margin: 0 auto !important"
        type="button"
        class="layui-btn layui-btn-normal graphic-button-margin"
      >
        添加线
      </button>
    </div>
    <div
      class="layui-panel layui-panel-right"
      id="editPanel"
      style="display: none; top: 70px"
    >
      <form class="layui-form" action="">
        <div class="sample-main-panel">
          <div class="layui-form-item" style="display: none">
            <label class="layui-form-label">填充颜色</label>
            <div
              class="layui-input-inline"
              style="width: 145px; margin-left: 10px"
            >
              <input
                disabled
                type="text"
                value="#00ffff"
                class="layui-input"
                id="polyline-color-input"
              />
            </div>
            <div class="layui-inline">
              <div id="polyline-color"></div>
            </div>
          </div>
          <div class="layui-form-item">
            <label class="layui-form-label">线宽</label>
            <div class="layui-input-block">
              <input
                id="polyline-width"
                value="8"
                type="text"
                autocomplete="off"
                class="layui-input"
              />
            </div>
          </div>
          <div class="layui-form-item" style="display: none">
            <label class="layui-form-label">图片</label>
            <div class="layui-input-block" style="width: 183px">
              <input
                id="polyline-image"
                type="text"
                autocomplete="off"
                class="layui-input"
              />
            </div>
          </div>
          <div class="layui-form-item" style="display: none">
            <label class="layui-form-label">持续时间</label>
            <div class="layui-input-block">
              <input
                id="polyline-duration"
                type="text"
                autocomplete="off"
                class="layui-input"
              />
            </div>
          </div>
          <div class="layui-form-item" style="display: none">
            <label class="layui-form-label">X方向重复</label>
            <div class="layui-input-block">
              <input
                id="polyline-repeatX"
                type="text"
                autocomplete="off"
                class="layui-input"
              />
            </div>
          </div>
          <div class="layui-form-item" style="display: none">
            <label class="layui-form-label">Y方向重复</label>
            <div class="layui-input-block">
              <input
                id="polyline-repeatY"
                type="text"
                autocomplete="off"
                class="layui-input"
              />
            </div>
          </div>
          <div class="layui-form-item" style="display: none">
            <label class="layui-form-label">线尾发光</label>
            <div class="layui-input-block">
              <input
                id="polyline-glowPower"
                type="text"
                autocomplete="off"
                class="layui-input"
              />
            </div>
          </div>
          <div class="layui-form-item" style="display: none">
            <label class="layui-form-label">线头发光</label>
            <div class="layui-input-block">
              <input
                id="polyline-taperPower"
                type="text"
                autocomplete="off"
                class="layui-input"
              />
            </div>
          </div>
          <div class="layui-form-item" style="display: none">
            <label class="layui-form-label">外边线颜色</label>
            <div
              class="layui-input-inline"
              style="width: 145px; margin-left: 10px"
            >
              <input
                disabled
                type="text"
                value="#00ffff"
                class="layui-input"
                id="polyline-outlineColor-input"
              />
            </div>
            <div class="layui-inline">
              <div id="polyline-outlineColor"></div>
            </div>
          </div>
          <div class="layui-form-item" style="display: none">
            <label class="layui-form-label">外边线宽度</label>
            <div class="layui-input-block">
              <input
                id="polyline-outlineWidth"
                type="text"
                autocomplete="off"
                class="layui-input"
              />
            </div>
          </div>
          <div class="layui-form-item" style="display: none">
            <label class="layui-form-label">间隔颜色</label>
            <div
              class="layui-input-inline"
              style="width: 145px; margin-left: 10px"
            >
              <input
                disabled
                type="text"
                value="#00ffff"
                class="layui-input"
                id="polyline-gapColor-input"
              />
            </div>
            <div class="layui-inline">
              <div id="polyline-gapColor"></div>
            </div>
          </div>
          <div class="layui-form-item" style="display: none">
            <label class="layui-form-label">间隔长度</label>
            <div class="layui-input-block">
              <input
                id="polyline-dashPattern"
                type="text"
                autocomplete="off"
                class="layui-input"
              />
            </div>
          </div>
        </div>
        <div class="sample-button-panel">
          <button
            onclick="$('#editPanel').hide()"
            style="float: right; width: auto; margin-right: 0 !important"
            type="button"
            class="layui-btn layui-btn-normal graphic-button-margin"
          >
            关闭面板
          </button>
          <span
            onclick="deletePolyline()"
            style="
              cursor: pointer;
              float: right;
              line-height: 32px;
              margin-right: 15px;
            "
            >删除标绘</span
          >
        </div>
      </form>
    </div>
    <div id="htmlGraph">我是html元素</div>
  </body>
  <style>
    #htmlGraph {
      width: 100px;
      height: 20px;
      background: linear-gradient(
        -45deg,
        #0acf00 25%,
        #78c9db 0,
        #78c9db 50%,
        #0acf00 0,
        #0acf00 75%,
        #78c9db 0
      );
      background-size: 20px 20px;
      display: none;
      font-size: 14px;
      font-weight: bold;
      line-height: 20px;
      color: red;
      text-align: center;
    }
  </style>
</html>
