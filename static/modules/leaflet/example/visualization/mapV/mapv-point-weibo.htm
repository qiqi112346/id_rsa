<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>点微博数据</title>
    <!--引入mapv-->
    <script type="text/javascript" src="http://webclient.smaryun.com/static/libs/cdn/mapv/mapv.min.js"></script>
    <!--该库集成了leaflet与MapGIS IGServer for JavaScript脚本库-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/cdn/leaflet/leaflet.css"/>
    <script src="http://webclient.smaryun.com/static/libs/cdn/leaflet/leaflet.js"></script>
    <!--plugin库-->
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-common.min.js"></script>
    <script src="http://webclient.smaryun.com/static/libs/cdn/zondyclient/webclient-leaflet-plugin.min.js"></script>
    <script src="http://webclient.smaryun.com/static/assets/js/TDT-token.js"></script>
    <!--示例中面板、按钮等，第三方layui的js库与css样式-->
    <link rel="stylesheet" href="http://webclient.smaryun.com/static/libs/css/style.css"/>
    <!--css-->
    <script type="text/javascript">
      //使用严格模式
      'use strict'
      const { WebTileLayer } = zondy.layer
      const { initializeCRS, initializeOptions } = zondy.leaflet.util
      // 初始化示例
      function init() {
        // 添加图层
        addLayer()
      }

      // 添加图层
      function addLayer() {
        // 构造一个网路瓦片图层对象
        const layer = new WebTileLayer({
          // 服务基地址
          url: 'http://t1.tianditu.com/DataServer?T=img_c&x={col}&y={row}&l={level}',
          // token名
          tokenKey: 'tk',
          // token值
          tokenValue: getTDTToken()
        })
        // 加载元数据
        layer.load().then(function () {
          // 构造Leaflet地图视图的初始化参数
          const crs = initializeCRS(layer)
          const mapViewOptions = {
            crs: crs,
            center: [31.147781205532336,112.21905099757561],
            zoom: 4
          }
          // 构造Leaflet地图视图对象
          const map = L.map('mapgis-viewer', mapViewOptions)
          // 构造Leaflet瓦片图层的初始化参数
          const layerOptions = initializeOptions(layer)
          // 添加Leaflet瓦片图层到地图视图中
          new zondy.leaflet.layer.WebTileLayer(layer.url, layerOptions).addTo(map)
          // 添加MapV图层
          addMapVLayer(map)
        })

        // 添加MapV图层
        function addMapVLayer(map) {
          httpGetPromise(
            'http://webclient.smaryun.com:8200/Vector/json/pointWeibo/weibo.json'
          ).then((rs) => {
            let data1 = []
            let data2 = []
            let data3 = []
            for (let i = 0; i < rs[0].length; i++) {
              let geoCoord = rs[0][i].geoCoord
              data1.push({
                geometry: {
                  type: 'Point',
                  coordinates: geoCoord
                }
              })
            }

            for (let i = 0; i < rs[1].length; i++) {
              let geoCoord = rs[1][i].geoCoord
              data2.push({
                geometry: {
                  type: 'Point',
                  coordinates: geoCoord
                },
                time: Math.random() * 10
              })
            }

            for (let i = 0; i < rs[2].length; i++) {
              let geoCoord = rs[2][i].geoCoord
              data3.push({
                geometry: {
                  type: 'Point',
                  coordinates: geoCoord
                }
              })
            }
            // 构建对应的dataset
            let dataSet1 = new mapv.DataSet(data1)
            // 设置对应的参数
            // https://github.com/huiyan-fe/mapv/blob/master/API.md
            let options1 = {
              fillStyle: 'rgba(200, 200, 0, 0.8)',
              bigData: 'Point',
              size: 0.7,
              draw: 'simple'
            }
            // 添加MapV图层
            new zondy.leaflet.layer.MapVLayer(map, dataSet1, options1).addTo(
              map
            );

            let dataSet2 = new mapv.DataSet(data2)
            let options2 = {
              fillStyle: 'rgba(255, 250, 0, 0.8)',
              size: 0.7,
              bigData: 'Point',
              draw: 'simple'
            }
            // 添加MapV图层
            new zondy.leaflet.layer.MapVLayer(map, dataSet2, options2).addTo(
              map
            );

            let dataSet3 = new mapv.DataSet(data3)
            let options3 = {
              fillStyle: 'rgba(255, 250, 250, 0.6)',
              size: 0.7,
              bigData: 'Point',
              draw: 'simple'
            }
            // 添加MapV图层
            new zondy.leaflet.layer.MapVLayer(map, dataSet3, options3).addTo(
              map
            );

            let dataSet4 = new mapv.DataSet(data2)
            let options4 = {
              fillStyle: 'rgba(255, 250, 250, 0.9)',
              size: 1.1,
              draw: 'simple',
              bigData: 'Point',
              animation: {
                stepsRange: {
                  start: 0,
                  end: 10
                },
                trails: 1,
                duration: 6
              }
            }
            // 添加MapV图层
            new zondy.leaflet.layer.MapVLayer(map, dataSet4, options4).addTo(
              map
            );
          })
        }
      }

      // 发送请求获取数据
      function httpGetPromise(url) {
        return new Promise(function (resolve, reject) {
          const handler = function () {
            if (this.readyState !== 4) {
              return
            }
            if (this.status === 200) {
              resolve(this.response)
            } else {
              reject(new Error(this.statusText))
            }
          }
          const client = new XMLHttpRequest()
          client.open('GET', url)
          client.onreadystatechange = handler
          client.responseType = 'json'
          client.setRequestHeader('Accept', 'application/json')
          client.send()
        })
      }
    </script>
</head>

<body onload="init();">
<div id="mapgis-viewer" style="position: absolute; display: flex; width: 100%; height: 100%"></div>
</body>
</html>
